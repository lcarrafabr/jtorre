/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package jcadastropendentes;

import Classes.*;
import java.awt.HeadlessException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lcbenfic
 */
public class jFPessoasCampo extends javax.swing.JDialog {

    /**
     * Creates new form jFPessoasCampo
     */
    public jFPessoasCampo() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/resources/radio-tower-32.png")).getImage()); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        buscarjButton = new javax.swing.JButton();
        novojButton = new javax.swing.JButton();
        editarjButton = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        salvarjButton = new javax.swing.JButton();
        salvarMaisjButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        alterarjButton = new javax.swing.JButton();
        excluirjButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        limparjButton = new javax.swing.JButton();
        sairjButton = new javax.swing.JButton();
        ativaRegionaljButton = new javax.swing.JButton();
        atualizaRegionaljButton = new javax.swing.JButton();
        atualizaGradeTelefonejButton = new javax.swing.JButton();
        operador_menujButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        regionaljLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        gradePessoaCampojTable = new javax.swing.JTable();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        pessoajTextField = new javax.swing.JTextField();
        tipoPessoajComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        statusjComboBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        hierarquiajComboBox = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        ofensorjLabel = new javax.swing.JLabel();
        ofensorjComboBox = new javax.swing.JComboBox();
        menujPanel = new javax.swing.JPanel();
        telefonejButton = new javax.swing.JButton();
        emailjButton = new javax.swing.JButton();
        credenciadojButton = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        gradeEmailjTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        gradeTelefoneCampojTable = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        buscarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/buscar.png"))); // NOI18N
        buscarjButton.setText("Buscar");
        buscarjButton.setFocusable(false);
        buscarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buscarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buscarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(buscarjButton);

        novojButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/new2.png"))); // NOI18N
        novojButton.setText("Novo");
        novojButton.setFocusable(false);
        novojButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        novojButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        novojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novojButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(novojButton);

        editarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/edit.png"))); // NOI18N
        editarjButton.setText("Editar");
        editarjButton.setFocusable(false);
        editarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        editarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        editarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(editarjButton);
        jToolBar1.add(jSeparator3);

        salvarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/save.png"))); // NOI18N
        salvarjButton.setText("Salvar");
        salvarjButton.setFocusable(false);
        salvarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salvarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        salvarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(salvarjButton);

        salvarMaisjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/save_plus.png"))); // NOI18N
        salvarMaisjButton.setText("Salvar+");
        salvarMaisjButton.setFocusable(false);
        salvarMaisjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salvarMaisjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        salvarMaisjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarMaisjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(salvarMaisjButton);
        jToolBar1.add(jSeparator2);

        alterarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/save2.png"))); // NOI18N
        alterarjButton.setText("Alterar");
        alterarjButton.setFocusable(false);
        alterarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        alterarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        alterarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(alterarjButton);

        excluirjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/delete.png"))); // NOI18N
        excluirjButton.setText("Excluir");
        excluirjButton.setFocusable(false);
        excluirjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        excluirjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        excluirjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(excluirjButton);
        jToolBar1.add(jSeparator1);

        limparjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/clear.png"))); // NOI18N
        limparjButton.setText("Limpar");
        limparjButton.setFocusable(false);
        limparjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        limparjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        limparjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(limparjButton);

        sairjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/exit.png"))); // NOI18N
        sairjButton.setText("Sair");
        sairjButton.setFocusable(false);
        sairjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sairjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        sairjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(sairjButton);

        ativaRegionaljButton.setContentAreaFilled(false);
        ativaRegionaljButton.setEnabled(false);
        ativaRegionaljButton.setFocusable(false);
        ativaRegionaljButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ativaRegionaljButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ativaRegionaljButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ativaRegionaljButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(ativaRegionaljButton);

        atualizaRegionaljButton.setContentAreaFilled(false);
        atualizaRegionaljButton.setEnabled(false);
        atualizaRegionaljButton.setFocusable(false);
        atualizaRegionaljButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        atualizaRegionaljButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        atualizaRegionaljButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizaRegionaljButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(atualizaRegionaljButton);

        atualizaGradeTelefonejButton.setEnabled(false);
        atualizaGradeTelefonejButton.setFocusable(false);
        atualizaGradeTelefonejButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        atualizaGradeTelefonejButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        atualizaGradeTelefonejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizaGradeTelefonejButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(atualizaGradeTelefonejButton);

        operador_menujButton.setText("Operador_menu");
        operador_menujButton.setFocusable(false);
        operador_menujButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        operador_menujButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        operador_menujButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                operador_menujButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(operador_menujButton);

        jPanel1.setBackground(new java.awt.Color(51, 102, 255));

        regionaljLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        regionaljLabel.setForeground(new java.awt.Color(255, 255, 255));
        regionaljLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        regionaljLabel.setText("Voce está na regional:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(regionaljLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(regionaljLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        gradePessoaCampojTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id#", "Pessoa", "Hierarquia", "Tipo pessoa"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gradePessoaCampojTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gradePessoaCampojTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(gradePessoaCampojTable);
        gradePessoaCampojTable.getColumnModel().getColumn(0).setResizable(false);
        gradePessoaCampojTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        gradePessoaCampojTable.getColumnModel().getColumn(1).setResizable(false);
        gradePessoaCampojTable.getColumnModel().getColumn(1).setPreferredWidth(200);
        gradePessoaCampojTable.getColumnModel().getColumn(2).setResizable(false);
        gradePessoaCampojTable.getColumnModel().getColumn(2).setPreferredWidth(150);
        gradePessoaCampojTable.getColumnModel().getColumn(3).setResizable(false);
        gradePessoaCampojTable.getColumnModel().getColumn(3).setPreferredWidth(50);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 204));
        jLabel2.setText("Pessoa");

        pessoajTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pessoajTextFieldKeyReleased(evt);
            }
        });

        tipoPessoajComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SELECIONE", "FÍSICA", "JURÍDICA" }));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 204));
        jLabel3.setText("Tipo pessoa");

        statusjComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SELECIONE", "ATIVO", "INATIVO" }));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 204));
        jLabel4.setText("Status");

        hierarquiajComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SELECIONE", "SUPERV. REGIONAL OPERAÇÕES", "GERENTE", "SUPERV. DE OPERAÇÕES", "SUPERV. DE VENDAS", "MONITOR DE CAMPO", "CONSULTOR", "CREDENCIADO" }));
        hierarquiajComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hierarquiajComboBoxActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 204));
        jLabel5.setText("Hierarquia / Cargo");

        ofensorjLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ofensorjLabel.setForeground(new java.awt.Color(0, 0, 204));
        ofensorjLabel.setText("Ofensor");

        ofensorjComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NÃO", "SIM" }));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pessoajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tipoPessoajComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(statusjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(hierarquiajComboBox, 0, 292, Short.MAX_VALUE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ofensorjLabel)
                            .addComponent(ofensorjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pessoajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tipoPessoajComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statusjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hierarquiajComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ofensorjLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ofensorjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Cadastro Pessoa", jPanel4);

        menujPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        telefonejButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/telephone_add.png"))); // NOI18N
        telefonejButton.setText("Telefone");
        telefonejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                telefonejButtonActionPerformed(evt);
            }
        });

        emailjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/email.png"))); // NOI18N
        emailjButton.setText("E-mail");
        emailjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailjButtonActionPerformed(evt);
            }
        });

        credenciadojButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/folder_home.png"))); // NOI18N
        credenciadojButton.setText("Credenciado");
        credenciadojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                credenciadojButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menujPanelLayout = new javax.swing.GroupLayout(menujPanel);
        menujPanel.setLayout(menujPanelLayout);
        menujPanelLayout.setHorizontalGroup(
            menujPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menujPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(telefonejButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emailjButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(credenciadojButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        menujPanelLayout.setVerticalGroup(
            menujPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menujPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(menujPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(telefonejButton)
                    .addComponent(emailjButton)
                    .addComponent(credenciadojButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        gradeEmailjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(gradeEmailjTable);
        gradeEmailjTable.getColumnModel().getColumn(0).setResizable(false);

        jLabel6.setText("E-mails");

        gradeTelefoneCampojTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Telefones", "Tipo Telefone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(gradeTelefoneCampojTable);
        gradeTelefoneCampojTable.getColumnModel().getColumn(0).setResizable(false);
        gradeTelefoneCampojTable.getColumnModel().getColumn(0).setPreferredWidth(200);
        gradeTelefoneCampojTable.getColumnModel().getColumn(1).setResizable(false);
        gradeTelefoneCampojTable.getColumnModel().getColumn(1).setPreferredWidth(50);

        jLabel7.setText("Telefones");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(409, 409, 409)))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(menujPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(menujPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    ClassConecta conecta = new ClassConecta();
    
    String recebe_usuario_logado;
    
    String nome_regional = null;
    
    String recebe_nivel_acesso;
    
    int operador_regional = -1;
    
    int codigo_regional = 0;
    
    int codigo_pessoa_campo;
    
    int operador_menu = -1;
    
    
    
    public void getGradePessoaCampo() throws ParseException{
       //Consultar Pessoas
        PessoasCampo oPessoaCampo = new PessoasCampo();
        
        if ( pessoajTextField.getText().length() > 0 ){
            oPessoaCampo.setPessoa_campo(pessoajTextField.getText() +"%");
        }

        ResultSet resultSet = null;

        String[] colunasTabela = new String[]{"Id#", "Pessoa", "Hierarquia", "tipo pessoa"};
        DefaultTableModel modeloTabela = new DefaultTableModel(null, colunasTabela) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        gradePessoaCampojTable.setModel(modeloTabela);
        gradePessoaCampojTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        gradePessoaCampojTable.getColumnModel().getColumn(1).setPreferredWidth(200);
        gradePessoaCampojTable.getColumnModel().getColumn(2).setPreferredWidth(150);
        gradePessoaCampojTable.getColumnModel().getColumn(3).setPreferredWidth(50);

try {
            oPessoaCampo.setCodigo_regional(codigo_regional);
            resultSet = oPessoaCampo.getConsultar(conecta);
            if (resultSet.getRow() == 1){
             resultSet.first();
            }


        } catch (SQLException ex) {
            Logger.getLogger(PessoasCampo.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {

            while (resultSet.next()) {

                modeloTabela.addRow(new String[]{
                    Funcoes.getCodigoFormat(resultSet.getInt("CODIGO_PESSOA_CAMPO")),
                    resultSet.getString("PESSOA_CAMPO"),
                    resultSet.getString("HIERARQUIA"),
                    resultSet.getString("TIPO_PESSOA")
                });

            }

        } catch (SQLException ex) {
            Logger.getLogger(PessoasCampo.class.getName()).log(Level.SEVERE, null, ex);
        }

           }
    
    
    public void getFieldPessoaCampo(int codigo_pessoa_campo) throws ParseException{
        //Buscar contato
        PessoasCampo oPessoasCampo = new PessoasCampo();
        ResultSet rs = null;
        oPessoasCampo.setCodigo_pessoa_campo(codigo_pessoa_campo);

        try {
            rs = oPessoasCampo.getConsultar(conecta);
            rs.next();

            //Pegar campos           
            pessoajTextField.setText(rs.getString("PESSOA_CAMPO"));
            tipoPessoajComboBox.setSelectedItem(rs.getString("TIPO_PESSOA"));
            statusjComboBox.setSelectedItem(rs.getString("STATUS"));
            hierarquiajComboBox.setSelectedItem(rs.getString("HIERARQUIA"));
            ofensorjComboBox.setSelectedItem(rs.getString("OFENSOR"));
            
        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Erro ao preencher os campos\n"+ex, "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    
    
    
    //******************************************* GRADE TELEFONES *********************************************************************
    
    
    public void getGradeTelefonesCampo() throws ParseException{
       //Consultar Pessoas
        TelefonesCampo oTelefonesCampo = new TelefonesCampo();

        ResultSet resultSet = null;

        String[] colunasTabela = new String[]{"Numero Telefone", "Tipo telefone"};
        DefaultTableModel modeloTabela = new DefaultTableModel(null, colunasTabela) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        gradeTelefoneCampojTable.setModel(modeloTabela);
        gradeTelefoneCampojTable.getColumnModel().getColumn(0).setPreferredWidth(200);
        gradeTelefoneCampojTable.getColumnModel().getColumn(1).setPreferredWidth(50);

try {
            oTelefonesCampo.setCodigo_pessoa_campo(codigo_pessoa_campo);
            resultSet = oTelefonesCampo.getConsultar(conecta);
            if (resultSet.getRow() == 1){
             resultSet.first();
            }


        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {

            while (resultSet.next()) {

                modeloTabela.addRow(new String[]{
                    "(" + resultSet.getString("DDD") + ")" + " - " +resultSet.getString("NUMERO_TELEFONE"),
                    resultSet.getString("TIPO_TELEFONE")
                });

            }

        } catch (SQLException ex) {
            Logger.getLogger(Telefones.class.getName()).log(Level.SEVERE, null, ex);
        }

           }
    
    
    //********************************************* emails campo ****************************************************************************
    
    
    
    public void getGradeEmails() throws ParseException{
       //Consultar Pessoas
        EmailsCampo oEmailsCampo = new EmailsCampo();

        ResultSet resultSet = null;

        String[] colunasTabela = new String[]{"Email"};
        DefaultTableModel modeloTabela = new DefaultTableModel(null, colunasTabela) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        gradeEmailjTable.setModel(modeloTabela);
        gradeEmailjTable.getColumnModel().getColumn(0).setPreferredWidth(300);

try {
            oEmailsCampo.setCodigo_pessoa(codigo_pessoa_campo);
            resultSet = oEmailsCampo.getConsultar(conecta);
            if (resultSet.getRow() == 1){
             resultSet.first();
            }


        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {

            while (resultSet.next()) {

                modeloTabela.addRow(new String[]{
                    resultSet.getString("EMAIL")
                });

            }

        } catch (SQLException ex) {
            Logger.getLogger(Telefones.class.getName()).log(Level.SEVERE, null, ex);
        }

           }
    
    
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        novojButton.setEnabled(true);
        editarjButton.setEnabled(false);
        salvarjButton.setEnabled(false);
        salvarMaisjButton.setEnabled(false);
        alterarjButton.setEnabled(false);
        excluirjButton.setEnabled(false);
        
        
        ativaRegionaljButton.setVisible(false);
        atualizaRegionaljButton.setVisible(false);
        telefonejButton.setEnabled(false);
        emailjButton.setEnabled(false);
        credenciadojButton.setEnabled(false);
        operador_menujButton.setVisible(false);
        ofensorjComboBox.setEnabled(false);
        ofensorjLabel.setEnabled(false);
        
        if ("SUPERVISOR".equals(recebe_nivel_acesso)){
            excluirjButton.setVisible(true);
            
        }else{
            excluirjButton.setVisible(false);
        }
        
        try {
            ClassConecta.getConectaContatosTorreDB();
        } catch (Exception e) {
         JOptionPane.showMessageDialog(null, "Erro ao conectar com o banco!\n"+e, "Mensagem do sistema", JOptionPane.ERROR_MESSAGE);
        }
        ativaRegionaljButtonActionPerformed(null);
        atualizaRegionaljButtonActionPerformed(null);
        ativaRegionaljButtonActionPerformed(null);
        buscarjButtonActionPerformed(null);
        operador_menujButtonActionPerformed(null);
        
        
    }//GEN-LAST:event_formWindowOpened

    private void sairjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairjButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_sairjButtonActionPerformed

    private void ativaRegionaljButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ativaRegionaljButtonActionPerformed
        // TODO add your handling code here:
        
        switch (operador_regional){
            
            case 1:
                
                nome_regional = "RV01- CURITIBA";
                                
            break;
                
            case 2:
                
                nome_regional = "RV02- CAMPINAS";
                                
            break;
                
           case 3:
               
               nome_regional = "RV03- SP CAPITAL";
               
               break;
               
               
           case 4:
               
               nome_regional = "RV04- BRASILIA";
               
               break;
               
           case 5:
               
               nome_regional = "RV05- RIO CAPITAL";
               
               break;
               
               
           case 6:
               
               nome_regional = "RV06- BH";
               
               break;
               
           case 7:
               
               nome_regional = "RV07- SALVADOR";
               
               break;
               
           case 8:
               
               nome_regional = "RV08- FORTALEZA";
               
               break;
               
           case 9:
               
               nome_regional = "RV09- BRASIL";
               
               break;
               
           case 10:
               
               nome_regional = "RV10- BAURU";
               
               break;
               
           case 11:
               
               nome_regional = "RV11- RIO INTERIOR";
               
               break;
               
           case 12:
               
               nome_regional = "RV12- RECIFE";
               
               break;
               
           case 13:
               
               nome_regional = "RV13- PORTO ALEGRE";
               
               break;
               
           case 14:
               
               nome_regional = "RV14- SP ABC - VALE";
               
               break;
               
           case 15:
               
               nome_regional = "RV15- MANAUS / BELEM";
               
               break;           
 
            }
            
        
    }//GEN-LAST:event_ativaRegionaljButtonActionPerformed

    private void atualizaRegionaljButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizaRegionaljButtonActionPerformed
        // TODO add your handling code here:
        Regionais oRegional = new Regionais();
        
        ResultSet rs = null;
        oRegional.setRegional(nome_regional);
        try {
            rs = oRegional.getConsultar(conecta);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro na consulta de pessoa!\n"+e, "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
        }
        try {
            while (rs.next()){
                regionaljLabel.setText("Você está na regional: " + rs.getString("REGIONAL"));
                codigo_regional = rs.getInt("CODIGO_REGIONAL");
            }
        } catch (SQLException | HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Erro ao preencher o nome da pessoa!\n"+e, "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_atualizaRegionaljButtonActionPerformed

    private void novojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novojButtonActionPerformed
        // TODO add your handling code here:
        novojButton.setEnabled(false);
        editarjButton.setEnabled(false);
        buscarjButton.setEnabled(true);
        salvarjButton.setEnabled(true);
        salvarMaisjButton.setEnabled(true);
        excluirjButton.setEnabled(false);
        pessoajTextField.grabFocus();
        
        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (Exception e) {
        }
        limparjButtonActionPerformed(null);
    }//GEN-LAST:event_novojButtonActionPerformed

    private void salvarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarjButtonActionPerformed
        // TODO add your handling code here:
        PessoasCampo oPessoaCampo = new PessoasCampo();
        
        if(pessoajTextField.getText().equals("") || tipoPessoajComboBox.getSelectedItem().equals("SELECIONE") ||
           statusjComboBox.getSelectedItem().equals("SELECIONE") || hierarquiajComboBox.getSelectedItem().equals("SELECIONE")){
            
          JOptionPane.showMessageDialog(null, "Atenção, preencher todos os campos!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);  
            
        }else{
            
            try {
                
            salvarjButton.setEnabled(false);
            novojButton.setEnabled(true);
            editarjButton.setEnabled(true);
            excluirjButton.setEnabled(false);
            salvarMaisjButton.setEnabled(false);
            
            oPessoaCampo.setCodigo_regional(codigo_regional);
            oPessoaCampo.setPessoa_campo(pessoajTextField.getText().trim().toUpperCase());
            oPessoaCampo.setTipo_pessoa(tipoPessoajComboBox.getSelectedItem().toString());
            oPessoaCampo.setStatus(statusjComboBox.getSelectedItem().toString());
            oPessoaCampo.setHierarquia(hierarquiajComboBox.getSelectedItem().toString());
            oPessoaCampo.setOfensor(ofensorjComboBox.getSelectedItem().toString());
            oPessoaCampo.setCadastrar();
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao cadastrar!\n"+e, "ATENÇÃO", JOptionPane.ERROR_MESSAGE); 
            }
            try {
                getGradePessoaCampo();
            } catch (Exception e) {
                 JOptionPane.showMessageDialog(null, "Erro ao atualizar grade!\n"+e, "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
            }
            // seleciona a ultima linha da grade
            gradePessoaCampojTable.changeSelection(gradePessoaCampojTable.getRowCount()-1,gradePessoaCampojTable.getRowCount(),false,false); 
            
            
        }
        
        
    }//GEN-LAST:event_salvarjButtonActionPerformed

    private void buscarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarjButtonActionPerformed
        // TODO add your handling code here:
        try {
            getGradePessoaCampo();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar grade!\n"+e, "ATENÇÃO", JOptionPane.ERROR_MESSAGE); 
        }
    }//GEN-LAST:event_buscarjButtonActionPerformed

    private void gradePessoaCampojTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gradePessoaCampojTableMouseClicked
        // TODO add your handling code here:
        editarjButton.setEnabled(true);
        
        telefonejButton.setEnabled(true);
        emailjButton.setEnabled(true);
        credenciadojButton.setEnabled(true);
        
        codigo_pessoa_campo = Integer.parseInt(gradePessoaCampojTable.getValueAt(gradePessoaCampojTable.getSelectedRow(), 0).toString());
        try {
            getFieldPessoaCampo(codigo_pessoa_campo);
        } catch (ParseException ex) {
            Logger.getLogger(PessoasCampo.class.getName()).log(Level.SEVERE, null, ex);
        }
        atualizaGradeTelefonejButtonActionPerformed(null);
    }//GEN-LAST:event_gradePessoaCampojTableMouseClicked

    private void editarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarjButtonActionPerformed
        // TODO add your handling code here:
        novojButton.setEnabled(false);
        salvarjButton.setEnabled(false);
        editarjButton.setEnabled(false);
        alterarjButton.setEnabled(true);
        salvarMaisjButton.setEnabled(false);
        excluirjButton.setEnabled(true);
        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_editarjButtonActionPerformed

    private void salvarMaisjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarMaisjButtonActionPerformed
        // TODO add your handling code here:
        salvarjButtonActionPerformed(null);
        novojButtonActionPerformed(null);
    }//GEN-LAST:event_salvarMaisjButtonActionPerformed

    private void limparjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparjButtonActionPerformed
        // TODO add your handling code here:
        pessoajTextField.setText("");
        tipoPessoajComboBox.setSelectedItem("SELECIONE");
        statusjComboBox.setSelectedItem("SELECIONE");
        hierarquiajComboBox.setSelectedItem("SELECIONE");
        
        telefonejButton.setEnabled(false);
        emailjButton.setEnabled(false);
        credenciadojButton.setEnabled(false);
    }//GEN-LAST:event_limparjButtonActionPerformed

    private void alterarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterarjButtonActionPerformed
        // TODO add your handling code here:
        PessoasCampo oPessoaCampo = new PessoasCampo();
        
        if(pessoajTextField.getText().equals("") || tipoPessoajComboBox.getSelectedItem().equals("SELECIONE") ||
           statusjComboBox.getSelectedItem().equals("SELECIONE") || hierarquiajComboBox.getSelectedItem().equals("SELECIONE")){
            
          JOptionPane.showMessageDialog(null, "Atenção, preencher todos os campos!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);  
            
        }else{
            
            try {
                alterarjButton.setEnabled(false);
                editarjButton.setEnabled(true);
                novojButton.setEnabled(true);
                excluirjButton.setEnabled(false);
                
                oPessoaCampo.setCodigo_pessoa_campo(codigo_pessoa_campo);
                oPessoaCampo.setCodigo_regional(codigo_regional);
                
                oPessoaCampo.setPessoa_campo(pessoajTextField.getText().trim().toUpperCase());
                oPessoaCampo.setTipo_pessoa(tipoPessoajComboBox.getSelectedItem().toString());
                oPessoaCampo.setStatus(statusjComboBox.getSelectedItem().toString());
                oPessoaCampo.setHierarquia(hierarquiajComboBox.getSelectedItem().toString());
                oPessoaCampo.setOfensor(ofensorjComboBox.getSelectedItem().toString());
                oPessoaCampo.setAlterar(conecta);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao alterar registro!\n"+e, "ATENÇÃO", JOptionPane.ERROR_MESSAGE); 
            }
            try {
                getGradePessoaCampo();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao atualizar grade!\n"+e, "ATENÇÃO", JOptionPane.ERROR_MESSAGE); 
            }
            
            // seleciona a ultima linha da grade
            gradePessoaCampojTable.changeSelection(gradePessoaCampojTable.getRowCount()-1,gradePessoaCampojTable.getRowCount(),false,false);
            telefonejButton.setEnabled(false);
            emailjButton.setEnabled(false);
            credenciadojButton.setEnabled(false);
        }
    }//GEN-LAST:event_alterarjButtonActionPerformed

    private void excluirjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirjButtonActionPerformed
        // TODO add your handling code here:
        Object[] options = {"Sim", "Não"};
        int sd =
                JOptionPane.showOptionDialog(
                null,
                "Deseja realmente EXCLUIR esse registro?",
                "Confirmação!",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.WARNING_MESSAGE,
                null,
                options,
                options[0]);

        if (sd != 0) {
            return;
        }
        alterarjButton.setEnabled(false);
        editarjButton.setEnabled(true);
        excluirjButton.setEnabled(false);
        novojButton.setEnabled(true);
        
        PessoasCampo oPessoasCampo = new PessoasCampo();
        
        oPessoasCampo.setCodigo_pessoa_campo(codigo_pessoa_campo);
        oPessoasCampo.setExcluir(conecta);
        
        try {
            getGradePessoaCampo();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar grade!\n"+e, "ATENÇÃO", JOptionPane.ERROR_MESSAGE); 
            
        }
        atualizaGradeTelefonejButtonActionPerformed(null);
    }//GEN-LAST:event_excluirjButtonActionPerformed

    private void telefonejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_telefonejButtonActionPerformed
        // TODO add your handling code here:
        jFTelefonesCampo oFormTelefonesCampo = new jFTelefonesCampo();
        
        oFormTelefonesCampo.recebe_usuario_logado = recebe_usuario_logado;
        oFormTelefonesCampo.recebe_codigo_pessoa = codigo_pessoa_campo;
        oFormTelefonesCampo.recebe_nivel_usuario = recebe_nivel_acesso;
        
        oFormTelefonesCampo.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        oFormTelefonesCampo.setLocationRelativeTo(null);
        oFormTelefonesCampo.setTitle("Cadastro de Telefones da regional: " + nome_regional);
        oFormTelefonesCampo.pack();
        oFormTelefonesCampo.setModal(true);
        oFormTelefonesCampo.setVisible(true);
        
        telefonejButton.setEnabled(false);
        emailjButton.setEnabled(false);
        credenciadojButton.setEnabled(false);
        
        try {
            getGradeTelefonesCampo();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar grade!\n"+e, "ATENÇÃO", JOptionPane.ERROR_MESSAGE); 
        }
    }//GEN-LAST:event_telefonejButtonActionPerformed

    private void atualizaGradeTelefonejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizaGradeTelefonejButtonActionPerformed
        // TODO add your handling code here:
        try {
            getGradeTelefonesCampo();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar grade!\n"+e, "ATENÇÃO", JOptionPane.ERROR_MESSAGE); 
        }
        try {
            getGradeEmails();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar grade!\n"+e, "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_atualizaGradeTelefonejButtonActionPerformed

    private void emailjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailjButtonActionPerformed
        // TODO add your handling code here:
        jFEmailsCampo oFormEmailsCampo = new jFEmailsCampo();
        
        oFormEmailsCampo.recebe_usuario_logado = recebe_usuario_logado;
        oFormEmailsCampo.recebe_codigo_pessoa = codigo_pessoa_campo;
        oFormEmailsCampo.recebe_nivel_usuario = recebe_nivel_acesso;
        
        oFormEmailsCampo.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        oFormEmailsCampo.setLocationRelativeTo(null);
        oFormEmailsCampo.setTitle("Cadastro de E-mails da regional: " + nome_regional);
        oFormEmailsCampo.pack();
        oFormEmailsCampo.setModal(true);
        oFormEmailsCampo.setVisible(true);
        
        telefonejButton.setEnabled(false);
        emailjButton.setEnabled(false);
        credenciadojButton.setEnabled(false);
        
        try {
            getGradeEmails();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar grade!\n"+e, "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_emailjButtonActionPerformed

    private void credenciadojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_credenciadojButtonActionPerformed
        // TODO add your handling code here:
        jFCrecenciados oFormCrecenciados = new jFCrecenciados();
        
        if(tipoPessoajComboBox.getSelectedItem().equals("JURÍDICA")){
        
        oFormCrecenciados.recebe_codigo_regional = codigo_regional;
        oFormCrecenciados.recebe_nome_regional = nome_regional;
        oFormCrecenciados.recebe_usuario_logado = recebe_usuario_logado;
        oFormCrecenciados.recebe_codigo_pessoa = codigo_pessoa_campo;
        oFormCrecenciados.recebe_nivel_usuario = recebe_nivel_acesso;
        
        oFormCrecenciados.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        oFormCrecenciados.setLocationRelativeTo(null);
        oFormCrecenciados.setTitle("Cadastro de credenciados da regional: " + nome_regional);
        oFormCrecenciados.pack();
        oFormCrecenciados.setModal(true);
        oFormCrecenciados.setVisible(true);
        
        telefonejButton.setEnabled(false);
        emailjButton.setEnabled(false);
        credenciadojButton.setEnabled(false);
            
        }else{
         JOptionPane.showMessageDialog(null, "Pessoa física não pode ser cadastrada como credenciado", "ATENÇÃO. Mensagem do sistema.", JOptionPane.INFORMATION_MESSAGE);   
            
        }
        
        
    }//GEN-LAST:event_credenciadojButtonActionPerformed

    private void operador_menujButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_operador_menujButtonActionPerformed
        // TODO add your handling code here:
        
        switch (operador_menu){
            
            case 1:
                
                operador_menu = 1;
                
                novojButtonActionPerformed(null);
                
                limparjButton.setEnabled(false);
                credenciadojButton.setVisible(false);
                tipoPessoajComboBox.setSelectedItem("FÍSICA");
                statusjComboBox.setSelectedItem("ATIVO");
                hierarquiajComboBox.setSelectedItem("SUPERV. REGIONAL OPERAÇÕES");
                
                tipoPessoajComboBox.setEnabled(false);
                statusjComboBox.setEnabled(false);
                hierarquiajComboBox.setEnabled(false);                
                break;
                
            case 2:
                
                operador_menu = 2;
                
                novojButtonActionPerformed(null);
                
                limparjButton.setEnabled(false);
                credenciadojButton.setVisible(false);
                tipoPessoajComboBox.setSelectedItem("FÍSICA");
                statusjComboBox.setSelectedItem("ATIVO");
                hierarquiajComboBox.setSelectedItem("GERENTE");
                
                tipoPessoajComboBox.setEnabled(false);
                statusjComboBox.setEnabled(false);
                hierarquiajComboBox.setEnabled(false);
            break;
                
            case 3:
                operador_menu = 3;
                
                novojButtonActionPerformed(null);
                
                limparjButton.setEnabled(false);
                credenciadojButton.setVisible(false);
                tipoPessoajComboBox.setSelectedItem("FÍSICA");
                statusjComboBox.setSelectedItem("ATIVO");
                hierarquiajComboBox.setSelectedItem("SUPERV. DE OPERAÇÕES");
                
                tipoPessoajComboBox.setEnabled(false);
                statusjComboBox.setEnabled(false);
                hierarquiajComboBox.setEnabled(false); 
                
                break;
                
                
            case 4:
                
                operador_menu = 4;
                
                novojButtonActionPerformed(null);
                
                limparjButton.setEnabled(false);
                credenciadojButton.setVisible(false);
                tipoPessoajComboBox.setSelectedItem("FÍSICA");
                statusjComboBox.setSelectedItem("ATIVO");
                hierarquiajComboBox.setSelectedItem("SUPERV. DE VENDAS");
                
                tipoPessoajComboBox.setEnabled(false);
                statusjComboBox.setEnabled(false);
                hierarquiajComboBox.setEnabled(false); 
                
            break;
                
            case 5:
                
                operador_menu = 4;
                
                novojButtonActionPerformed(null);
                
                limparjButton.setEnabled(false);
                credenciadojButton.setVisible(false);
                tipoPessoajComboBox.setSelectedItem("FÍSICA");
                statusjComboBox.setSelectedItem("ATIVO");
                hierarquiajComboBox.setSelectedItem("MONITOR DE CAMPO");
                
                tipoPessoajComboBox.setEnabled(false);
                statusjComboBox.setEnabled(false);
                hierarquiajComboBox.setEnabled(false); 
                
            break;
                
           case 6:
               
               operador_menu = 4;
                
                novojButtonActionPerformed(null);
                
                limparjButton.setEnabled(false);
                credenciadojButton.setVisible(false);
                tipoPessoajComboBox.setSelectedItem("FÍSICA");
                statusjComboBox.setSelectedItem("ATIVO");
                hierarquiajComboBox.setSelectedItem("CONSULTOR");
                
                tipoPessoajComboBox.setEnabled(false);
                statusjComboBox.setEnabled(false);
                hierarquiajComboBox.setEnabled(false);
               
           break;
        }
    }//GEN-LAST:event_operador_menujButtonActionPerformed

    private void pessoajTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pessoajTextFieldKeyReleased
        // TODO add your handling code here:
        if (!alterarjButton.isEnabled()){
            try {
                PessoasCampo oPessoasCampo = new PessoasCampo();
                oPessoasCampo.setPessoa_campo(pessoajTextField.getText());
                ResultSet rs = null;
                rs = oPessoasCampo.getConsultar(conecta);
                getGradePessoaCampo();
            } catch (    ParseException | SQLException ex) {
                Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
            }    
        }
    }//GEN-LAST:event_pessoajTextFieldKeyReleased

    private void hierarquiajComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hierarquiajComboBoxActionPerformed
        // TODO add your handling code here:
        if(hierarquiajComboBox.getSelectedItem().equals("CREDENCIADO")){
            
            ofensorjComboBox.setEnabled(true);
            ofensorjLabel.setEnabled(true);
        }else{
            ofensorjLabel.setEnabled(false);
            ofensorjComboBox.setEnabled(false);
            ofensorjComboBox.setSelectedItem("NÃO");
        }
    }//GEN-LAST:event_hierarquiajComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jFPessoasCampo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jFPessoasCampo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jFPessoasCampo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jFPessoasCampo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new jFPessoasCampo().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton alterarjButton;
    private javax.swing.JButton ativaRegionaljButton;
    private javax.swing.JButton atualizaGradeTelefonejButton;
    private javax.swing.JButton atualizaRegionaljButton;
    private javax.swing.JButton buscarjButton;
    private javax.swing.JButton credenciadojButton;
    private javax.swing.JButton editarjButton;
    private javax.swing.JButton emailjButton;
    private javax.swing.JButton excluirjButton;
    private javax.swing.JTable gradeEmailjTable;
    private javax.swing.JTable gradePessoaCampojTable;
    private javax.swing.JTable gradeTelefoneCampojTable;
    private javax.swing.JComboBox hierarquiajComboBox;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton limparjButton;
    private javax.swing.JPanel menujPanel;
    private javax.swing.JButton novojButton;
    private javax.swing.JComboBox ofensorjComboBox;
    private javax.swing.JLabel ofensorjLabel;
    private javax.swing.JButton operador_menujButton;
    private javax.swing.JTextField pessoajTextField;
    private javax.swing.JLabel regionaljLabel;
    private javax.swing.JButton sairjButton;
    private javax.swing.JButton salvarMaisjButton;
    private javax.swing.JButton salvarjButton;
    private javax.swing.JComboBox statusjComboBox;
    private javax.swing.JButton telefonejButton;
    private javax.swing.JComboBox tipoPessoajComboBox;
    // End of variables declaration//GEN-END:variables
}
