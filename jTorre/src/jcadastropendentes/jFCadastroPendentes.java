/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package jcadastropendentes;

import Classes.CadastroPendentes;
import Classes.ClassConecta;
import Classes.Funcoes;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lcbenfic
 */
public class jFCadastroPendentes extends javax.swing.JFrame {

    /**
     * Creates new form jFCadastroPendentes
     */
    public jFCadastroPendentes() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/resources/radio-tower-32.png")).getImage()); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        buscarjButton = new javax.swing.JButton();
        novojButton = new javax.swing.JButton();
        editarjButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        salvarjButton = new javax.swing.JButton();
        salvarMaisjButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        alterarjButton = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        limparjButton = new javax.swing.JButton();
        sairjButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        datajFormattedTextField = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        vencidojComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        protocoloAberturajTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        regionaljComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descricaojTextArea = new javax.swing.JTextArea();
        nomeClientejTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        customerjTextField = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        gradePendentesjTable = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastro de pendentes NÓHS");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        buscarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/buscar.png"))); // NOI18N
        buscarjButton.setText("Buscar");
        buscarjButton.setFocusable(false);
        buscarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buscarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buscarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(buscarjButton);

        novojButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/new2.png"))); // NOI18N
        novojButton.setText("Novo");
        novojButton.setFocusable(false);
        novojButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        novojButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        novojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novojButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(novojButton);

        editarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/edit.png"))); // NOI18N
        editarjButton.setText("Editar");
        editarjButton.setFocusable(false);
        editarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        editarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        editarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(editarjButton);
        jToolBar1.add(jSeparator1);

        salvarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/save.png"))); // NOI18N
        salvarjButton.setText("Salvar");
        salvarjButton.setFocusable(false);
        salvarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salvarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        salvarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(salvarjButton);

        salvarMaisjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/save_plus.png"))); // NOI18N
        salvarMaisjButton.setText("Salvar+");
        salvarMaisjButton.setToolTipText("Salva um registro e prepara o programa para cadastrar outro");
        salvarMaisjButton.setFocusable(false);
        salvarMaisjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salvarMaisjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        salvarMaisjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarMaisjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(salvarMaisjButton);
        jToolBar1.add(jSeparator2);

        alterarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/save2.png"))); // NOI18N
        alterarjButton.setText("Alterar");
        alterarjButton.setFocusable(false);
        alterarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        alterarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        alterarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(alterarjButton);
        jToolBar1.add(jSeparator3);

        limparjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/clear.png"))); // NOI18N
        limparjButton.setText("Limpar");
        limparjButton.setFocusable(false);
        limparjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        limparjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        limparjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(limparjButton);

        sairjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/exit.png"))); // NOI18N
        sairjButton.setText("Sair");
        sairjButton.setToolTipText("Sair do sistema");
        sairjButton.setFocusable(false);
        sairjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sairjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        sairjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(sairjButton);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        try {
            datajFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        datajFormattedTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                datajFormattedTextFieldMouseClicked(evt);
            }
        });

        jLabel5.setText("Regional");

        jLabel2.setText("Nome do Cliente");

        vencidojComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SELECIONE", "SIM", "NÃO" }));

        jLabel3.setText("Protocolo de abertura");

        protocoloAberturajTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                protocoloAberturajTextFieldKeyReleased(evt);
            }
        });

        jLabel6.setText("Vencido");

        regionaljComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SELECIONE", "RV01- CURITIBA", "RV02- CAMPINAS", "RV03- SP CAPITAL", "RV04- BRASILIA", "RV05- RIO CAPITAL", "RV06- BH", "RV07- SALVADOR", "RV08- FORTALEZA", "RV09- BRASIL", "RV10- BAURU", "RV11- RIO INTERIOR", "RV12- RECIFE", "RV13- PORTO ALEGRE", "RV14- SP ABC - VALE", "RV15- MANAUS / BELEM" }));

        jLabel1.setText("Customer");

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Descrição"));

        descricaojTextArea.setColumns(20);
        descricaojTextArea.setRows(5);
        jScrollPane1.setViewportView(descricaojTextArea);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 9, Short.MAX_VALUE))
        );

        nomeClientejTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nomeClientejTextFieldKeyReleased(evt);
            }
        });

        jLabel4.setText("Data");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(datajFormattedTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4)
                            .addComponent(customerjTextField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2)
                                .addComponent(regionaljComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(nomeClientejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3)
                            .addComponent(protocoloAberturajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vencidojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomeClientejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(protocoloAberturajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customerjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(datajFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(regionaljComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vencidojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        gradePendentesjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id#", "Customer", "Nome Cliente", "Protoclo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gradePendentesjTable.getTableHeader().setReorderingAllowed(false);
        gradePendentesjTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gradePendentesjTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(gradePendentesjTable);
        gradePendentesjTable.getColumnModel().getColumn(0).setResizable(false);
        gradePendentesjTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        gradePendentesjTable.getColumnModel().getColumn(1).setResizable(false);
        gradePendentesjTable.getColumnModel().getColumn(1).setPreferredWidth(50);
        gradePendentesjTable.getColumnModel().getColumn(2).setResizable(false);
        gradePendentesjTable.getColumnModel().getColumn(2).setPreferredWidth(200);
        gradePendentesjTable.getColumnModel().getColumn(3).setResizable(false);
        gradePendentesjTable.getColumnModel().getColumn(3).setPreferredWidth(100);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel7.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("Powered by: Luciano Carrafa Benfica");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel7)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

//    ClassConecta conecta = new ClassConecta();
    ClassConecta conecta = new ClassConecta();
       
   
    
    
    public void getGradePendentes() throws ParseException{
       //Consultar PENDENTES
        CadastroPendentes oCadastroPendentes = new CadastroPendentes();

        if ( nomeClientejTextField.getText().length() > 0 ){
            oCadastroPendentes.setNome_clientes(nomeClientejTextField.getText() +"%");
        }
        if ( protocoloAberturajTextField.getText().length() > 0 ){
            oCadastroPendentes.setProtocolo(protocoloAberturajTextField.getText() +"%");
        }
//        if (customerjTextField.getText().length() >0){
//            
//            oCadastroPendentes.setCustomer(Integer.valueOf(customerjTextField.getText() + "%"));
//        }


        ResultSet resultSet = null;

        String[] colunasTabela = new String[]{"Id#", "Customer", "Nome cliente", "Protocolo"};
        DefaultTableModel modeloTabela = new DefaultTableModel(null, colunasTabela) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        gradePendentesjTable.setModel(modeloTabela);
        gradePendentesjTable.getColumnModel().getColumn(0).setPreferredWidth(30);
        gradePendentesjTable.getColumnModel().getColumn(1).setPreferredWidth(50);
        gradePendentesjTable.getColumnModel().getColumn(2).setPreferredWidth(230);
        gradePendentesjTable.getColumnModel().getColumn(3).setPreferredWidth(50);

try {
            resultSet = oCadastroPendentes.getConsultar(conecta);
            if (resultSet.getRow() == 1){
             resultSet.first();
            }


        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {

            while (resultSet.next()) {

                modeloTabela.addRow(new String[]{
                    Funcoes.getCodigoFormat(resultSet.getInt("COD_CADASTROS")),
                    resultSet.getString("CUSTOMER"),
                    resultSet.getString("NOME_CLIENTE"),
                    resultSet.getString("PROTOCOLO_ABERTURA")
                });

            }

        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }

           }
    
    
    public void getFieldPendente(int codContatos) throws ParseException{
        //Buscar contato
        CadastroPendentes oCadastroPendentes = new CadastroPendentes();
        ResultSet rs = null;
        oCadastroPendentes.setCod_cadastro(codContatos);

        try {
            rs = oCadastroPendentes.getConsultar(conecta);
            rs.next();

            //Pegar campos
            customerjTextField.setText(rs.getString("CUSTOMER"));
            nomeClientejTextField.setText(rs.getString("NOME_CLIENTE"));
            protocoloAberturajTextField.setText(rs.getString("PROTOCOLO_ABERTURA"));
            datajFormattedTextField.setText(rs.getString("DATA_ABERTURA"));
            regionaljComboBox.setSelectedItem(rs.getString("REGIONAL"));
            vencidojComboBox.setSelectedItem(rs.getString("VENCIDO"));
            descricaojTextArea.setText(rs.getString("PROBLEMA"));

        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void sairjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairjButtonActionPerformed
           // TODO add your handling code here:
        if (!novojButton.isEnabled()){
            
            Object[] options = {"Sim", "Não"};
        int sd =
                JOptionPane.showOptionDialog(
                null,
                "Deseja realmente sair?",
                "Confirmação!",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.WARNING_MESSAGE,
                null,
                options,
                options[0]);

        if (sd != 0) {
            return;
        }
           this.dispose();
        }
        this.dispose();
    }//GEN-LAST:event_sairjButtonActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
            // TODO add your handling code here:
            novojButton.setEnabled(true);
            editarjButton.setEnabled(false);
            salvarjButton.setEnabled(false);
            salvarMaisjButton.setEnabled(false);
            alterarjButton.setEnabled(false);
            
            try {
            ClassConecta.getConnection();
        } catch (SQLException ex) {
            Logger.getLogger(jFCadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        buscarjButtonActionPerformed(null);

        descricaojTextArea.setWrapStyleWord(true);
        descricaojTextArea.setLineWrap(true);
        
    }//GEN-LAST:event_formWindowOpened

    private void novojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novojButtonActionPerformed
        // TODO add your handling code here:
        novojButton.setEnabled(false);
        editarjButton.setEnabled(false);
        buscarjButton.setEnabled(true);
        salvarjButton.setEnabled(true);
        salvarMaisjButton.setEnabled(true);
        customerjTextField.grabFocus();
        
        customerjTextField.setText("");
        nomeClientejTextField.setText("");
        protocoloAberturajTextField.setText("");
        datajFormattedTextField.setText("");
        regionaljComboBox.setSelectedItem("SELECIONE");
        vencidojComboBox.setSelectedItem("SELECIONE");
        descricaojTextArea.setText("");
        
    }//GEN-LAST:event_novojButtonActionPerformed

    private void salvarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarjButtonActionPerformed
        // TODO add your handling code here:       
            CadastroPendentes oPendentes = new CadastroPendentes();
            
            if(nomeClientejTextField.getText() == null ? protocoloAberturajTextField.getText() == null : nomeClientejTextField.getText().equals(protocoloAberturajTextField.getText())){
                
                JOptionPane.showMessageDialog(null, "O campo \"NOME\" não pode ser igual ao \"CUSTOMER\"!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
                
            }else{
            
            
            if (customerjTextField.getText().equals("") || nomeClientejTextField.getText().equals("") 
                    || protocoloAberturajTextField.getText().equals("") || datajFormattedTextField.getText().equals("  /  /    ")
                    || regionaljComboBox.getSelectedItem().equals("SELECIONE") || vencidojComboBox.getSelectedItem().equals("SELECIONE")
                    || descricaojTextArea.getText().equals("")){
                
                JOptionPane.showMessageDialog(null, "Todos os campos são obrigatórios", "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
            }else{

                try {
                    
            salvarjButton.setEnabled(false);
            novojButton.setEnabled(true);
            editarjButton.setEnabled(true);
            salvarMaisjButton.setEnabled(false);
            
            
                    
            oPendentes.setCustomer(Integer.parseInt(customerjTextField.getText()));
            oPendentes.setNome_clientes(nomeClientejTextField.getText().trim().toUpperCase());
            oPendentes.setProtocolo(protocoloAberturajTextField.getText());
            oPendentes.setData_abertura(datajFormattedTextField.getText());
            oPendentes.setRegional(regionaljComboBox.getSelectedItem().toString());
            oPendentes.setVencido(vencidojComboBox.getSelectedItem().toString());
            oPendentes.setDescricao(descricaojTextArea.getText());
            oPendentes.setCadastrar();
                    
                } catch (NumberFormatException e) {
                    System.out.println("Erro de entrada de dados, Campo customer só aceita numeros\n"+e);
                    JOptionPane.showMessageDialog(null, "Erro!\nDigite apenas números no campo \"CUSTOMER\".\n O registro não foi salvo. Cadastre novamente. ", "ATENÇÃO, MENSAGEM DO SISTEMA", JOptionPane.ERROR_MESSAGE);
                    novojButtonActionPerformed(null);
                }
            
            
            
        try {
            getGradePendentes();
        } catch (ParseException ex) {
            Logger.getLogger(jFCadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }
        
            customerjTextField.setText("");
            nomeClientejTextField.setText("");
            protocoloAberturajTextField.setText("");
            datajFormattedTextField.setText("");
            regionaljComboBox.setSelectedItem("SELECIONE");
            vencidojComboBox.setSelectedItem("SELECIONE");
            descricaojTextArea.setText("");
            
          }
        }        
    }//GEN-LAST:event_salvarjButtonActionPerformed

    private void buscarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarjButtonActionPerformed
        try {
            // TODO add your handling code here:
            getGradePendentes();
        } catch (ParseException ex) {
            Logger.getLogger(jFCadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buscarjButtonActionPerformed

    private void nomeClientejTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nomeClientejTextFieldKeyReleased
        // TODO add your handling code here:
        if (!alterarjButton.isEnabled()){
            try {
                CadastroPendentes oCadastroPendentes = new CadastroPendentes();
                oCadastroPendentes.setNome_clientes(nomeClientejTextField.getText());
                ResultSet rs = null;
                rs = oCadastroPendentes.getConsultar(conecta);
                getGradePendentes();
            } catch (ParseException ex) {
                Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
            }    
        }
        
    }//GEN-LAST:event_nomeClientejTextFieldKeyReleased

    private void protocoloAberturajTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_protocoloAberturajTextFieldKeyReleased
        // TODO add your handling code here:
        if (!alterarjButton.isEnabled()){
            try {
                CadastroPendentes oCadastroPendentes = new CadastroPendentes();
                oCadastroPendentes.setProtocolo(protocoloAberturajTextField.getText());
                ResultSet rs = null;
                rs = oCadastroPendentes.getConsultar(conecta);
                getGradePendentes();
            } catch (ParseException ex) {
                Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_protocoloAberturajTextFieldKeyReleased

    private void gradePendentesjTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gradePendentesjTableMouseClicked
        // TODO add your handling code here:
        editarjButton.setEnabled(true);

        int codContatos = 0;
        codContatos = Integer.parseInt(gradePendentesjTable.getValueAt(gradePendentesjTable.getSelectedRow(), 0).toString());
        try {
            getFieldPendente(codContatos);
        } catch (ParseException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_gradePendentesjTableMouseClicked

    private void editarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarjButtonActionPerformed
        // TODO add your handling code here:
        novojButton.setEnabled(false);
        salvarjButton.setEnabled(false);
        editarjButton.setEnabled(false);
        alterarjButton.setEnabled(true);
        salvarMaisjButton.setEnabled(false);
        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_editarjButtonActionPerformed

    private void alterarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterarjButtonActionPerformed
        // TODO add your handling code here:
        alterarjButton.setEnabled(false);
        editarjButton.setEnabled(true);
        novojButton.setEnabled(true);

         int codContato = 0;
        codContato = Integer.parseInt(gradePendentesjTable.getValueAt(gradePendentesjTable.getSelectedRow(), 0).toString());
        
        CadastroPendentes oCadastroPendentes = new CadastroPendentes();
        
        
        if (customerjTextField.getText().equals("") || nomeClientejTextField.getText().equals("") 
                    || protocoloAberturajTextField.getText().equals("") || datajFormattedTextField.getText().equals("")
                    || regionaljComboBox.getSelectedItem().equals("SELECIONE") || vencidojComboBox.getSelectedItem().equals("SELECIONE")
                    || descricaojTextArea.getText().equals("")){
                
                JOptionPane.showMessageDialog(null, "Todos os campos são obrigatórios", "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
                editarjButtonActionPerformed(null);
            }else{
        
        oCadastroPendentes.setCod_cadastro(codContato);
        oCadastroPendentes.setCustomer(Integer.parseInt(customerjTextField.getText().trim()));
        oCadastroPendentes.setNome_clientes(nomeClientejTextField.getText().trim().toUpperCase());
        oCadastroPendentes.setProtocolo(protocoloAberturajTextField.getText().trim());
        oCadastroPendentes.setData_abertura(datajFormattedTextField.getText());
        oCadastroPendentes.setRegional(regionaljComboBox.getSelectedItem().toString());
        oCadastroPendentes.setVencido(vencidojComboBox.getSelectedItem().toString());
        oCadastroPendentes.setDescricao(descricaojTextArea.getText());
        oCadastroPendentes.setAlterar(conecta);
        try {
            getGradePendentes();
        } catch (ParseException ex) {
            Logger.getLogger(jFCadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_alterarjButtonActionPerformed

    private void salvarMaisjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarMaisjButtonActionPerformed
        // TODO add your handling code here:
        salvarjButtonActionPerformed(null);
        novojButtonActionPerformed(null);
    }//GEN-LAST:event_salvarMaisjButtonActionPerformed

    private void limparjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparjButtonActionPerformed
        // TODO add your handling code here:
        customerjTextField.setText("");
        nomeClientejTextField.setText("");
        protocoloAberturajTextField.setText("");
        datajFormattedTextField.setText("");
        regionaljComboBox.setSelectedItem("SELECIONE");
        vencidojComboBox.setSelectedItem("SELECIONE");
        descricaojTextArea.setText("");
    }//GEN-LAST:event_limparjButtonActionPerformed

    private void datajFormattedTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_datajFormattedTextFieldMouseClicked
        // TODO add your handling code here:
        datajFormattedTextField.setText("");
    }//GEN-LAST:event_datajFormattedTextFieldMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jFCadastroPendentes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jFCadastroPendentes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jFCadastroPendentes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jFCadastroPendentes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new jFCadastroPendentes().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton alterarjButton;
    private javax.swing.JButton buscarjButton;
    private javax.swing.JTextField customerjTextField;
    private javax.swing.JFormattedTextField datajFormattedTextField;
    private javax.swing.JTextArea descricaojTextArea;
    private javax.swing.JButton editarjButton;
    private javax.swing.JTable gradePendentesjTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton limparjButton;
    private javax.swing.JTextField nomeClientejTextField;
    private javax.swing.JButton novojButton;
    private javax.swing.JTextField protocoloAberturajTextField;
    private javax.swing.JComboBox regionaljComboBox;
    private javax.swing.JButton sairjButton;
    private javax.swing.JButton salvarMaisjButton;
    private javax.swing.JButton salvarjButton;
    private javax.swing.JComboBox vencidojComboBox;
    // End of variables declaration//GEN-END:variables
}
