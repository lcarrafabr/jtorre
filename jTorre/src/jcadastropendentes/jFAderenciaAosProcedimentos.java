/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package jcadastropendentes;

import Classes.*;
import java.awt.Color;
import java.awt.HeadlessException;
import java.io.IOException;
import java.net.URL;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author lcbenfic
 */
public class jFAderenciaAosProcedimentos extends javax.swing.JFrame {

    /**
     * Creates new form jFAderenciaAosProcedimentos
     */
    public jFAderenciaAosProcedimentos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator11 = new javax.swing.JSeparator();
        jToolBar1 = new javax.swing.JToolBar();
        buscarjButton = new javax.swing.JButton();
        novojButton = new javax.swing.JButton();
        editarjButton = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JToolBar.Separator();
        salvarjButton = new javax.swing.JButton();
        alterarjButton = new javax.swing.JButton();
        excluirjButton = new javax.swing.JButton();
        cancelarjButton = new javax.swing.JButton();
        limparjButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        relatoriojButton = new javax.swing.JButton();
        relatorioGeralAderenciajButton = new javax.swing.JButton();
        jSeparator9 = new javax.swing.JToolBar.Separator();
        sairjButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        ativaRegionaljButton = new javax.swing.JButton();
        pegacodRegionaljButton = new javax.swing.JButton();
        calculaAderenciajButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        datajFormattedTextField = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        credenciadojComboBox = new javax.swing.JComboBox();
        jSeparator1 = new javax.swing.JSeparator();
        cadastraCredenciadojButton = new javax.swing.JButton();
        atualizaCredenciadojButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        gradeAderenciaAosProcessosjTable = new javax.swing.JTable();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        pergunta1jLabel = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        Pergunta2jLabel = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        pergunta3jLabel = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        pergunta4jLabel = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        pergunta1jTextField = new javax.swing.JTextField();
        pergunta2jTextField = new javax.swing.JTextField();
        pergunta3jTextField = new javax.swing.JTextField();
        pergunta4jTextField = new javax.swing.JTextField();
        totaljTextField = new javax.swing.JTextField();
        aderenciajTextField = new javax.swing.JTextField();
        listaabertajTabbedPane = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        gradeListaAbertajTable = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        dataInicialjFormattedTextField = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        dataFinaljFormattedTextField = new javax.swing.JFormattedTextField();
        statusjComboBox = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jToolBar = new javax.swing.JToolBar();
        buscarListajButton = new javax.swing.JButton();
        novaListajButton = new javax.swing.JButton();
        editarListajButton = new javax.swing.JButton();
        salvarListajButton = new javax.swing.JButton();
        alterarListajButton = new javax.swing.JButton();
        jSeparator10 = new javax.swing.JToolBar.Separator();
        jSeparator12 = new javax.swing.JToolBar.Separator();
        jSeparator13 = new javax.swing.JToolBar.Separator();
        jSeparator14 = new javax.swing.JToolBar.Separator();
        excluirListajButton = new javax.swing.JButton();
        cancelarListajButton = new javax.swing.JButton();
        abrirListajButton = new javax.swing.JButton();
        listaFechadajTabbedPane = new javax.swing.JTabbedPane();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        gradeListafechadajTable = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        dataInicialListaFechadajFormattedTextField = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        dataFinalListaFechadajFormattedTextField = new javax.swing.JFormattedTextField();
        statusListaFechadajComboBox = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        atualizaListFechadajButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        buscarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/buscar.png"))); // NOI18N
        buscarjButton.setText("Buscar");
        buscarjButton.setFocusable(false);
        buscarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buscarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buscarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(buscarjButton);

        novojButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/new2.png"))); // NOI18N
        novojButton.setText("Novo");
        novojButton.setFocusable(false);
        novojButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        novojButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        novojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novojButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(novojButton);

        editarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/edit.png"))); // NOI18N
        editarjButton.setText("Editar");
        editarjButton.setFocusable(false);
        editarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        editarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        editarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(editarjButton);
        jToolBar1.add(jSeparator8);

        salvarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/save.png"))); // NOI18N
        salvarjButton.setText("Salvar");
        salvarjButton.setFocusable(false);
        salvarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salvarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        salvarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(salvarjButton);

        alterarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/save2.png"))); // NOI18N
        alterarjButton.setText("Alterar");
        alterarjButton.setFocusable(false);
        alterarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        alterarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        alterarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(alterarjButton);

        excluirjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/delete.png"))); // NOI18N
        excluirjButton.setText("Excluir");
        excluirjButton.setFocusable(false);
        excluirjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        excluirjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        excluirjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(excluirjButton);

        cancelarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Cancel.png"))); // NOI18N
        cancelarjButton.setText("Cancelar");
        cancelarjButton.setFocusable(false);
        cancelarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cancelarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cancelarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(cancelarjButton);

        limparjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/clear.png"))); // NOI18N
        limparjButton.setText("Limpar");
        limparjButton.setFocusable(false);
        limparjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        limparjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        limparjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(limparjButton);
        jToolBar1.add(jSeparator2);

        relatoriojButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/print.png"))); // NOI18N
        relatoriojButton.setText("Relatório individual");
        relatoriojButton.setFocusable(false);
        relatoriojButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        relatoriojButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        relatoriojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                relatoriojButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(relatoriojButton);

        relatorioGeralAderenciajButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/print.png"))); // NOI18N
        relatorioGeralAderenciajButton.setText("Relatório Geral de aderencia");
        relatorioGeralAderenciajButton.setFocusable(false);
        relatorioGeralAderenciajButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        relatorioGeralAderenciajButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        relatorioGeralAderenciajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                relatorioGeralAderenciajButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(relatorioGeralAderenciajButton);
        jToolBar1.add(jSeparator9);

        sairjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/exit.png"))); // NOI18N
        sairjButton.setText("Sair");
        sairjButton.setFocusable(false);
        sairjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sairjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        sairjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(sairjButton);

        ativaRegionaljButton.setText("ativaRegional");
        ativaRegionaljButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ativaRegionaljButtonActionPerformed(evt);
            }
        });

        pegacodRegionaljButton.setText("PegaRegional");
        pegacodRegionaljButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pegacodRegionaljButtonActionPerformed(evt);
            }
        });

        calculaAderenciajButton.setText("calcula_aderencia");
        calculaAderenciajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculaAderenciajButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ativaRegionaljButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pegacodRegionaljButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(calculaAderenciajButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(277, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ativaRegionaljButton)
                    .addComponent(pegacodRegionaljButton)
                    .addComponent(calculaAderenciajButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jToolBar1.add(jPanel3);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("Data");

        try {
            datajFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        datajFormattedTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                datajFormattedTextFieldMouseClicked(evt);
            }
        });

        jLabel1.setText("Credenciado");

        credenciadojComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                credenciadojComboBoxActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        cadastraCredenciadojButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/add_small.png"))); // NOI18N
        cadastraCredenciadojButton.setContentAreaFilled(false);
        cadastraCredenciadojButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cadastraCredenciadojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastraCredenciadojButtonActionPerformed(evt);
            }
        });

        atualizaCredenciadojButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/refresh.png"))); // NOI18N
        atualizaCredenciadojButton.setContentAreaFilled(false);
        atualizaCredenciadojButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        atualizaCredenciadojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizaCredenciadojButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(datajFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(credenciadojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cadastraCredenciadojButton, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(atualizaCredenciadojButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(datajFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(atualizaCredenciadojButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(credenciadojComboBox)
                            .addComponent(cadastraCredenciadojButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        gradeAderenciaAosProcessosjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id#", "Data", "Pergunta 1", "Pergunta 2", "Pergunta 3", "Pergunta 4", "%", "Aderencia"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gradeAderenciaAosProcessosjTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gradeAderenciaAosProcessosjTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(gradeAderenciaAosProcessosjTable);
        gradeAderenciaAosProcessosjTable.getColumnModel().getColumn(0).setResizable(false);
        gradeAderenciaAosProcessosjTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        gradeAderenciaAosProcessosjTable.getColumnModel().getColumn(1).setResizable(false);
        gradeAderenciaAosProcessosjTable.getColumnModel().getColumn(1).setPreferredWidth(20);
        gradeAderenciaAosProcessosjTable.getColumnModel().getColumn(2).setResizable(false);
        gradeAderenciaAosProcessosjTable.getColumnModel().getColumn(2).setPreferredWidth(50);
        gradeAderenciaAosProcessosjTable.getColumnModel().getColumn(3).setResizable(false);
        gradeAderenciaAosProcessosjTable.getColumnModel().getColumn(3).setPreferredWidth(50);
        gradeAderenciaAosProcessosjTable.getColumnModel().getColumn(4).setResizable(false);
        gradeAderenciaAosProcessosjTable.getColumnModel().getColumn(4).setPreferredWidth(50);
        gradeAderenciaAosProcessosjTable.getColumnModel().getColumn(5).setResizable(false);
        gradeAderenciaAosProcessosjTable.getColumnModel().getColumn(5).setPreferredWidth(50);
        gradeAderenciaAosProcessosjTable.getColumnModel().getColumn(6).setResizable(false);
        gradeAderenciaAosProcessosjTable.getColumnModel().getColumn(6).setPreferredWidth(50);
        gradeAderenciaAosProcessosjTable.getColumnModel().getColumn(7).setResizable(false);
        gradeAderenciaAosProcessosjTable.getColumnModel().getColumn(7).setPreferredWidth(200);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator6.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("% Total");

        jSeparator7.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Aderencia");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pergunta1jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Pergunta2jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pergunta3jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pergunta4jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pergunta1jLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(Pergunta2jLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(pergunta3jLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator5, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(pergunta4jLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator6, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
            .addComponent(jSeparator7, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel7.setBackground(new java.awt.Color(165, 207, 249));

        pergunta1jTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pergunta1jTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                pergunta1jTextFieldFocusLost(evt);
            }
        });
        pergunta1jTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pergunta1jTextFieldKeyTyped(evt);
            }
        });

        pergunta2jTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pergunta2jTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                pergunta2jTextFieldFocusLost(evt);
            }
        });
        pergunta2jTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pergunta2jTextFieldKeyTyped(evt);
            }
        });

        pergunta3jTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pergunta3jTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                pergunta3jTextFieldFocusLost(evt);
            }
        });
        pergunta3jTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pergunta3jTextFieldKeyTyped(evt);
            }
        });

        pergunta4jTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pergunta4jTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                pergunta4jTextFieldFocusLost(evt);
            }
        });
        pergunta4jTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pergunta4jTextFieldKeyTyped(evt);
            }
        });

        totaljTextField.setEditable(false);
        totaljTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        totaljTextField.setFocusable(false);

        aderenciajTextField.setEditable(false);
        aderenciajTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aderenciajTextField.setFocusable(false);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pergunta1jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pergunta2jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pergunta3jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pergunta4jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(totaljTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(aderenciajTextField)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pergunta1jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pergunta2jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pergunta3jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pergunta4jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totaljTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aderenciajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 17, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Controle diário", jPanel5);

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        gradeListaAbertajTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id#", "Nome da lista"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gradeListaAbertajTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gradeListaAbertajTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(gradeListaAbertajTable);
        gradeListaAbertajTable.getColumnModel().getColumn(0).setResizable(false);
        gradeListaAbertajTable.getColumnModel().getColumn(0).setPreferredWidth(20);
        gradeListaAbertajTable.getColumnModel().getColumn(1).setResizable(false);
        gradeListaAbertajTable.getColumnModel().getColumn(1).setPreferredWidth(250);

        jPanel9.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel5.setText("Data inicial");

        try {
            dataInicialjFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        dataInicialjFormattedTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataInicialjFormattedTextFieldMouseClicked(evt);
            }
        });

        jLabel6.setText("De:");

        jLabel7.setText("até");

        try {
            dataFinaljFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        dataFinaljFormattedTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataFinaljFormattedTextFieldMouseClicked(evt);
            }
        });

        statusjComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ABERTA", "FECHADO" }));

        jLabel8.setText("Status");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(dataInicialjFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dataFinaljFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(statusjComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dataInicialjFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(dataFinaljFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statusjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jToolBar.setFloatable(false);
        jToolBar.setRollover(true);

        buscarListajButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/buscar.png"))); // NOI18N
        buscarListajButton.setText("Buscar");
        buscarListajButton.setFocusable(false);
        buscarListajButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buscarListajButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buscarListajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarListajButtonActionPerformed(evt);
            }
        });
        jToolBar.add(buscarListajButton);

        novaListajButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/new2.png"))); // NOI18N
        novaListajButton.setText("Novo");
        novaListajButton.setFocusable(false);
        novaListajButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        novaListajButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        novaListajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novaListajButtonActionPerformed(evt);
            }
        });
        jToolBar.add(novaListajButton);

        editarListajButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/edit.png"))); // NOI18N
        editarListajButton.setText("Editar");
        editarListajButton.setFocusable(false);
        editarListajButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        editarListajButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        editarListajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarListajButtonActionPerformed(evt);
            }
        });
        jToolBar.add(editarListajButton);

        salvarListajButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/save.png"))); // NOI18N
        salvarListajButton.setText("Salvar");
        salvarListajButton.setFocusable(false);
        salvarListajButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salvarListajButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        salvarListajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarListajButtonActionPerformed(evt);
            }
        });
        jToolBar.add(salvarListajButton);

        alterarListajButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/save2.png"))); // NOI18N
        alterarListajButton.setText("Alterar");
        alterarListajButton.setFocusable(false);
        alterarListajButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        alterarListajButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        alterarListajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterarListajButtonActionPerformed(evt);
            }
        });
        jToolBar.add(alterarListajButton);
        jToolBar.add(jSeparator10);
        jToolBar.add(jSeparator12);
        jToolBar.add(jSeparator13);
        jToolBar.add(jSeparator14);

        excluirListajButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/delete.png"))); // NOI18N
        excluirListajButton.setText("Excluir");
        excluirListajButton.setFocusable(false);
        excluirListajButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        excluirListajButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        excluirListajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirListajButtonActionPerformed(evt);
            }
        });
        jToolBar.add(excluirListajButton);

        cancelarListajButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Cancel.png"))); // NOI18N
        cancelarListajButton.setText("Cancelar");
        cancelarListajButton.setFocusable(false);
        cancelarListajButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cancelarListajButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cancelarListajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarListajButtonActionPerformed(evt);
            }
        });
        jToolBar.add(cancelarListajButton);

        abrirListajButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/abrir.png"))); // NOI18N
        abrirListajButton.setText("Abrir listas fechadas");
        abrirListajButton.setFocusable(false);
        abrirListajButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        abrirListajButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        abrirListajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirListajButtonActionPerformed(evt);
            }
        });
        jToolBar.add(abrirListajButton);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, 427, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(147, 147, 147))
        );

        listaabertajTabbedPane.addTab("Lista semanal", jPanel8);

        jPanel10.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        gradeListafechadajTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id#", "Nome da lista (FECHADA)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gradeListafechadajTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gradeListafechadajTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(gradeListafechadajTable);
        gradeListafechadajTable.getColumnModel().getColumn(0).setResizable(false);
        gradeListafechadajTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        gradeListafechadajTable.getColumnModel().getColumn(1).setResizable(false);
        gradeListafechadajTable.getColumnModel().getColumn(1).setPreferredWidth(250);

        jPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel9.setText("Data inicial");

        jLabel10.setText("De:");

        try {
            dataInicialListaFechadajFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel11.setText("até");

        try {
            dataFinalListaFechadajFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        statusListaFechadajComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ABERTA", "FECHADO" }));

        jLabel12.setText("Status");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(dataInicialListaFechadajFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dataFinalListaFechadajFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(statusListaFechadajComboBox, 0, 141, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(dataInicialListaFechadajFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(dataFinalListaFechadajFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statusListaFechadajComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        atualizaListFechadajButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/save2.png"))); // NOI18N
        atualizaListFechadajButton.setText("Atualizar");
        atualizaListFechadajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizaListFechadajButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(atualizaListFechadajButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(74, 74, 74))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(atualizaListFechadajButton)
                .addContainerGap(65, Short.MAX_VALUE))
        );

        listaFechadajTabbedPane.addTab("Listas fechadas", jPanel10);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jTabbedPane1)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(listaabertajTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(listaFechadajTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(listaabertajTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(listaFechadajTabbedPane))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    ClassConecta conecta = new ClassConecta();
    
    String nome_regional = null; // usado para pegar a regional na funçao switch
    int codigo_regional = 0;     //CODIGODO PK DA REGIONAL NO BANCO DE DADOS USADO PARA SETAR O COD REGIONAL
    int operador_regional = -1; 
    
    int item1 = 0;
    int item2 = 0;
    int item3 = 0;
    int item4 = 0;
    int total;
    
    int somaLinhas; // CONTA AS LINHAS DA GRADE ADERENCIA PARA BLOQUEAR O BOTÃO NOVO
    
    
    ComboItem combo_credenciado;// usado para enviar o codigo do credenciado e associar o controle diário a um credenciado
    
    
    int codigo_click_lista;
    
    int codigo_click_lista_fechada;
    int codigo_click_aderencia;
    
    
    public void getGradeAderenciaAosProcessos() throws ParseException{
       //Consultar Pessoas
        AderenciaAosProcedimentos oAderencia = new AderenciaAosProcedimentos();

        ResultSet resultSet = null;

        String[] colunasTabela = new String[]{"Id#", "Data", "Pergunta 1", "Pergunta 2", "Pergunta 3", "Pergunta 4", "Total", "Aderencia"};
        DefaultTableModel modeloTabela = new DefaultTableModel(null, colunasTabela) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        gradeAderenciaAosProcessosjTable.setModel(modeloTabela);
        gradeAderenciaAosProcessosjTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        gradeAderenciaAosProcessosjTable.getColumnModel().getColumn(1).setPreferredWidth(10);
        gradeAderenciaAosProcessosjTable.getColumnModel().getColumn(2).setPreferredWidth(30);
        gradeAderenciaAosProcessosjTable.getColumnModel().getColumn(3).setPreferredWidth(30);
        gradeAderenciaAosProcessosjTable.getColumnModel().getColumn(4).setPreferredWidth(30);
        gradeAderenciaAosProcessosjTable.getColumnModel().getColumn(5).setPreferredWidth(30);
        gradeAderenciaAosProcessosjTable.getColumnModel().getColumn(6).setPreferredWidth(50);
        gradeAderenciaAosProcessosjTable.getColumnModel().getColumn(7).setPreferredWidth(150);
        

try {
            //seta as configurações para filtrar somente os dados por lista, por credenciado e por regional
            combo_credenciado = (ComboItem)credenciadojComboBox.getSelectedItem();
            oAderencia.setCodigo_lista_semanal(codigo_click_lista);
            oAderencia.setCodigo_credenciado(combo_credenciado.getId());
            oAderencia.setCodigo_regional(codigo_regional);
            
            //consulta com as configurações ja setadas
            resultSet = oAderencia.getConsultar(conecta);
            if (resultSet.getRow() == 1){
             resultSet.first();
            }


        } catch (SQLException ex) {
            Logger.getLogger(PessoasCampo.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {

            while (resultSet.next()) {    
                

                modeloTabela.addRow(new String[]{
                    Funcoes.getCodigoFormat(resultSet.getInt("CODIGO_CONTROLE_ACOMPANHAMENTO")),
                    resultSet.getString("DATA"),
                    resultSet.getString("PERGUNTA1"),
                    resultSet.getString("PERGUNTA2"),
                    resultSet.getString("PERGUNTA3"),
                    resultSet.getString("PERGUNTA4"),
                    resultSet.getString("VALOR").concat("%"),
                    resultSet.getString("ADERENCIA")
                });

            }

        } catch (SQLException ex) {
            Logger.getLogger(PessoasCampo.class.getName()).log(Level.SEVERE, null, ex);
        }

           }
    
    
    
    public void getFieldListaAderencia(int codigo_click_aderencia) throws ParseException{
        //Buscar contato
        AderenciaAosProcedimentos oAderencia = new AderenciaAosProcedimentos();
        ResultSet rs;
        
        oAderencia.setCodigo_controle_acompanhamento(codigo_click_aderencia);
        oAderencia.setCodigo_regional(codigo_regional);

        
        try {
            rs = oAderencia.getConsultar(conecta);
            rs.next();

            //Pegar campos
            datajFormattedTextField.setText(rs.getString("DATA"));
            pergunta1jTextField.setText(rs.getString("PERGUNTA1"));
            pergunta2jTextField.setText(rs.getString("PERGUNTA2"));
            pergunta3jTextField.setText(rs.getString("PERGUNTA3"));
            pergunta4jTextField.setText(rs.getString("PERGUNTA4"));
            
        } catch (SQLException ex) {
            Logger.getLogger(ListasAderenciaAosProcedimentos.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Erro ao preencher os campos\n"+ex, "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
        }
    }
    
//*********************************************************************************************************************************************    
    
    
    public void getGradeListaSemanal() throws ParseException{
       //Consultar Pessoas
        ListasAderenciaAosProcedimentos oListAdProcedimentos = new ListasAderenciaAosProcedimentos();
        

        ResultSet resultSet = null;

        String[] colunasTabela = new String[]{"Id#", "Nome da lista"};
        DefaultTableModel modeloTabela = new DefaultTableModel(null, colunasTabela) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        gradeListaAbertajTable.setModel(modeloTabela);
        gradeListaAbertajTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        gradeListaAbertajTable.getColumnModel().getColumn(1).setPreferredWidth(250);

try {
            oListAdProcedimentos.setStatus("ABERTA");
            oListAdProcedimentos.setCodigo_regional(codigo_regional);
            resultSet = oListAdProcedimentos.getConsultar(conecta);
            if (resultSet.getRow() == 1){
             resultSet.first();
            }


        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {

            while (resultSet.next()) {

                modeloTabela.addRow(new String[]{
                    Funcoes.getCodigoFormat(resultSet.getInt("CODIGO_LISTA_SEMANAL")),
                    "LISTA DE: " + resultSet.getString("DATA_INICIAL")+ " "+ "até: " + resultSet.getString("DATA_FINAL")
                });

            }

        } catch (SQLException ex) {
            Logger.getLogger(Telefones.class.getName()).log(Level.SEVERE, null, ex);
        }

           }
    
    
    public void getFieldListaSemanal(int codigo_click_lista) throws ParseException{
        //Buscar contato
        ListasAderenciaAosProcedimentos oListAdProcedimentos = new ListasAderenciaAosProcedimentos();
        ResultSet rs;
        oListAdProcedimentos.setCodigo_lista_semanal(codigo_click_lista);
        oListAdProcedimentos.setCodigo_regional(codigo_regional);
        try {
            rs = oListAdProcedimentos.getConsultar(conecta);
            rs.next();

            //Pegar campos            
            dataInicialjFormattedTextField.setText(rs.getString("DATA_INICIAL"));
            dataFinaljFormattedTextField.setText(rs.getString("DATA_FINAL"));
            statusjComboBox.setSelectedItem(rs.getString("STATUS"));
            
        } catch (SQLException ex) {
            Logger.getLogger(ListasAderenciaAosProcedimentos.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Erro ao preencher os campos\n"+ex, "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
        }
    }
    
//******************************************************************************************************************************************
    
    
    
    
    public void getGradeListaFechada() throws ParseException{
       //Consultar Pessoas
        ListasAderenciaAosProcedimentos oListAdProcedimentos = new ListasAderenciaAosProcedimentos();
        

        ResultSet resultSet = null;

        String[] colunasTabela = new String[]{"Id#", "Nome da lista"};
        DefaultTableModel modeloTabela = new DefaultTableModel(null, colunasTabela) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        gradeListafechadajTable.setModel(modeloTabela);
        gradeListafechadajTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        gradeListafechadajTable.getColumnModel().getColumn(1).setPreferredWidth(250);

try {
            oListAdProcedimentos.setStatus("FECHADO");
            oListAdProcedimentos.setCodigo_regional(codigo_regional);
            resultSet = oListAdProcedimentos.getConsultarListaFechada(conecta);
            if (resultSet.getRow() == 1){
             resultSet.first();
            }


        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {

            while (resultSet.next()) {

                modeloTabela.addRow(new String[]{
                    Funcoes.getCodigoFormat(resultSet.getInt("CODIGO_LISTA_SEMANAL")),
                    "LISTA DE: " + resultSet.getString("DATA_INICIAL")+ " "+ "até: " + resultSet.getString("DATA_FINAL").concat(" (FECHADA)")
                });

            }

        } catch (SQLException ex) {
            Logger.getLogger(Telefones.class.getName()).log(Level.SEVERE, null, ex);
        }

           }
    
    public void getFieldListaFechada(int codigo_click_lista_fechada) throws ParseException{
        //Buscar contato
        ListasAderenciaAosProcedimentos oListAdProcedimentos = new ListasAderenciaAosProcedimentos();
        ResultSet rs;
        oListAdProcedimentos.setCodigo_regional(codigo_click_lista_fechada);
        oListAdProcedimentos.setCodigo_regional(codigo_regional);
        try {
            rs = oListAdProcedimentos.getConsultarListaFechada(conecta);
            rs.next();

            //Pegar campos            
            dataInicialListaFechadajFormattedTextField.setText(rs.getString("DATA_INICIAL"));
            dataFinalListaFechadajFormattedTextField.setText(rs.getString("DATA_FINAL"));
            statusListaFechadajComboBox.setSelectedItem(rs.getString("STATUS"));
            
        } catch (SQLException ex) {
            Logger.getLogger(ListasAderenciaAosProcedimentos.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Erro ao preencher os campos\n"+ex, "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
        }
    }
    private void sairjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairjButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_sairjButtonActionPerformed

    private void cadastraCredenciadojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastraCredenciadojButtonActionPerformed
        // TODO add your handling code here:
        jFCredenciados oFormCredenciados = new jFCredenciados();
        
        oFormCredenciados.recebe_codigo_regional = codigo_regional;
        
        oFormCredenciados.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        oFormCredenciados.setTitle("Cadastro de credenciados");
        oFormCredenciados.setLocationRelativeTo(null);
        oFormCredenciados.setModal(true);
        oFormCredenciados.setVisible(true);
        atualizaCredenciadojButtonActionPerformed(evt);
    }//GEN-LAST:event_cadastraCredenciadojButtonActionPerformed

    private void ativaRegionaljButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ativaRegionaljButtonActionPerformed
        // TODO add your handling code here:
        switch (operador_regional){
            case 1:
                nome_regional = "RV01- CURITIBA";               
            break;    
            case 2: 
                nome_regional = "RV02- CAMPINAS";                
            break;  
           case 3:
               nome_regional = "RV03- SP CAPITAL";
               break;
           case 4:
               nome_regional = "RV04- BRASILIA";
               break;
           case 5:
               nome_regional = "RV05- RIO CAPITAL";
               break;
           case 6:
               nome_regional = "RV06- BH";
               break;
           case 7:
               nome_regional = "RV07- SALVADOR";
               break;
           case 8:
               nome_regional = "RV08- FORTALEZA";
               break;
           case 9:
               nome_regional = "RV09- BRASIL";
               break;
           case 10:
               nome_regional = "RV10- BAURU";
               break;
           case 11:
               nome_regional = "RV11- RIO INTERIOR";
               break;
           case 12:
               nome_regional = "RV12- RECIFE";
               break;
           case 13:
               nome_regional = "RV13- PORTO ALEGRE";
               break;
           case 14:
               nome_regional = "RV14- SP ABC - VALE";
               break;
           case 15:
               nome_regional = "RV15- MANAUS / BELEM";
               break;           
            }
    }//GEN-LAST:event_ativaRegionaljButtonActionPerformed

    private void pegacodRegionaljButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pegacodRegionaljButtonActionPerformed
        // TODO add your handling code here:
        Regionais oRegional = new Regionais();
        
        ResultSet rs = null;
        oRegional.setRegional(nome_regional);
        try {
            rs = oRegional.getConsultar(conecta);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro na consulta de pessoa!\n"+e, "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
        }
        try {
            while (rs.next()){
                this.setTitle("Você está na regional: " + rs.getString("REGIONAL"));
                codigo_regional = rs.getInt("CODIGO_REGIONAL");
            }
        } catch (SQLException | HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Erro ao preencher o nome da pessoa!\n"+e, "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_pegacodRegionaljButtonActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        novaListajButton.setVisible(true);
        editarListajButton.setVisible(false);
        salvarListajButton.setVisible(false);
        alterarListajButton.setVisible(false);
        excluirListajButton.setVisible(false);
        cancelarListajButton.setVisible(false);
//*************************************************
        
        novojButton.setVisible(false);
        editarjButton.setVisible(false);
        salvarjButton.setVisible(false);
        alterarjButton.setVisible(false);
        excluirjButton.setVisible(false);
        cancelarjButton.setVisible(false);
        limparjButton.setVisible(false);
        relatoriojButton.setEnabled(false);
        relatorioGeralAderenciajButton.setEnabled(false);
        cadastraCredenciadojButton.setEnabled(false);
        atualizaCredenciadojButton.setEnabled(false);
//*************************************************
        
        
        
        pergunta1jLabel.setText("<html><center>"
                + "TODAS AS OSs NÃO<br> "
                + "FINALIZADAS NO DIA<br> "
                + "ANTERIOR, OS CLIENTES<br> "
                + "RECEBERAM CONTATO?</center></html>");
        
        Pergunta2jLabel.setText("<html><center>"
                + "OSs AGENDADAS<br> PARA O DIA ESTÃO<br> ALOCADAS PARA OS<br> TÉCNICOS?"
                + "</center></html>");
        
        pergunta3jLabel.setText("<html><center>"
                + "OSs COM CONTADOR<br> DE VISITAS >3, ESTÃO<br> COM TÉCNICOS COM<br> NIVEL >3."
                + "</center></html>");
        
        pergunta4jLabel.setText("<html><center>"
                + "TODOS OS ALERTAS<br> ESTÃO DIRECIONADOS<br> PARA ANTENDIMENTO?"
                + "</center></html>");
        
        totaljTextField.setText("0%");
        
        listaFechadajTabbedPane.setVisible(false);
        calculaAderenciajButton.setVisible(false);
        ativaRegionaljButton.setVisible(false);
        pegacodRegionaljButton.setVisible(false);
        
        
        try {
            ClassConecta.conectaAderenciaAosprocedimentos();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao conecat com o banco de dados\n"+e, "mensagem do sistema", JOptionPane.ERROR_MESSAGE);
        }
        
        try {
            datajFormattedTextField.setText(Funcoes.getNowBR());
        } catch (Exception e) {
        }
        
        
        calculaAderenciajButtonActionPerformed(null);
        ativaRegionaljButtonActionPerformed(null);
        pegacodRegionaljButtonActionPerformed(null);
        atualizaCredenciadojButtonActionPerformed(null);
        
        
        
        buscarListajButtonActionPerformed(null);
    }//GEN-LAST:event_formWindowOpened

    private void atualizaCredenciadojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizaCredenciadojButtonActionPerformed
        // TODO add your handling code here:
        try {
            CredenciadosAderenciaAosProcediementos oCredAosProcediementos = new CredenciadosAderenciaAosProcediementos();
            ResultSet rs;
            oCredAosProcediementos.setCodigo_regional(codigo_regional);
            rs = oCredAosProcediementos.getConsultarCredenciadoAtivo(conecta);
            credenciadojComboBox.removeAllItems();
            while (rs.next()) {
                credenciadojComboBox.addItem(new ComboItem(rs.getInt("CODIGO_CREDENCIADO"), rs.getString("CREDENCIADO")));
            }
            credenciadojComboBox.updateUI();
        } catch (SQLException ex) {
            Logger.getLogger(jFTelefones.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_atualizaCredenciadojButtonActionPerformed

    private void datajFormattedTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_datajFormattedTextFieldMouseClicked
        // TODO add your handling code here:
        datajFormattedTextField.setText("");
    }//GEN-LAST:event_datajFormattedTextFieldMouseClicked

    private void calculaAderenciajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculaAderenciajButtonActionPerformed
        // TODO add your handling code here:
        if(pergunta1jTextField.getText().isEmpty()){
            
            item1 = 0;
        }else{
            item1 = 25;
        }
        if(pergunta2jTextField.getText().isEmpty()){
            item2 = 0;
        }else{
            item2 = 25;
        }
        if(pergunta3jTextField.getText().isEmpty()){
            item3 = 0;
        }else{
            item3 = 25;
        }
        if(pergunta4jTextField.getText().isEmpty()){
            item4 = 0;
        }else{
            item4 = 25;
        }
        total = item1 + item2 + item3 + item4;
        
        
        System.out.println(item1 + " "+item2+" "+item3+" "+item4+ " valor total "+total);
        System.out.println(total);
        
        totaljTextField.setText(String.valueOf(total) + "%");
        
        Color cor_nao_aderiu = new Color(230,184,183);
        Color cor_fonte_naoAderiu = new Color(192,0,0);
        
        Color cor_fundo_aderiuParc = new Color(255,255,153);
        Color cor_fonte_Aderiuparc = new Color(168,145,4);
        
        Color cor_fundo_aderiu = new Color(162,231,157);
        Color cor_fonte_Aderiu = new Color(40,97,25);
        
        switch (totaljTextField.getText()) {
            case "25%":
                aderenciajTextField.setText("NÃO ADERIU");
                aderenciajTextField.setBackground(cor_nao_aderiu);
                aderenciajTextField.setForeground(cor_fonte_naoAderiu);
                break;
                
            case "50%":
            case "75%":
                aderenciajTextField.setText("ADERIU PARCIALMENTE");
                aderenciajTextField.setBackground(cor_fundo_aderiuParc);
                aderenciajTextField.setForeground(cor_fonte_Aderiuparc);
                break;
                
            case "100%":
                aderenciajTextField.setText("ADERIU");
                aderenciajTextField.setBackground(cor_fundo_aderiu);
                aderenciajTextField.setForeground(cor_fonte_Aderiu);
                break;
            
            default:
                aderenciajTextField.setText("NÃO ADERIU");
                aderenciajTextField.setBackground(cor_nao_aderiu);
                aderenciajTextField.setForeground(cor_fonte_naoAderiu);
        }
    }//GEN-LAST:event_calculaAderenciajButtonActionPerformed

    private void pergunta1jTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pergunta1jTextFieldFocusLost
        // TODO add your handling code here:
        calculaAderenciajButtonActionPerformed(null);
    }//GEN-LAST:event_pergunta1jTextFieldFocusLost

    private void pergunta2jTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pergunta2jTextFieldFocusLost
        // TODO add your handling code here:
        calculaAderenciajButtonActionPerformed(null);
    }//GEN-LAST:event_pergunta2jTextFieldFocusLost

    private void pergunta3jTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pergunta3jTextFieldFocusLost
        // TODO add your handling code here:
        calculaAderenciajButtonActionPerformed(null);
    }//GEN-LAST:event_pergunta3jTextFieldFocusLost

    private void pergunta4jTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pergunta4jTextFieldFocusLost
        // TODO add your handling code here:
        calculaAderenciajButtonActionPerformed(null);
    }//GEN-LAST:event_pergunta4jTextFieldFocusLost

    private void pergunta1jTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pergunta1jTextFieldKeyTyped
        // TODO add your handling code here:
        String caracteres="Xx";
        if(!caracteres.contains(evt.getKeyChar()+"")){
        evt.consume();
        }
    }//GEN-LAST:event_pergunta1jTextFieldKeyTyped

    private void pergunta2jTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pergunta2jTextFieldKeyTyped
        // TODO add your handling code here:
        String caracteres="Xx";
        if(!caracteres.contains(evt.getKeyChar()+"")){
        evt.consume();
        }
    }//GEN-LAST:event_pergunta2jTextFieldKeyTyped

    private void pergunta3jTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pergunta3jTextFieldKeyTyped
        // TODO add your handling code here:
        String caracteres="Xx";
        if(!caracteres.contains(evt.getKeyChar()+"")){
        evt.consume();
        }
    }//GEN-LAST:event_pergunta3jTextFieldKeyTyped

    private void pergunta4jTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pergunta4jTextFieldKeyTyped
        // TODO add your handling code here:
        String caracteres="Xx";
        if(!caracteres.contains(evt.getKeyChar()+"")){
        evt.consume();
        }
    }//GEN-LAST:event_pergunta4jTextFieldKeyTyped

    private void abrirListajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirListajButtonActionPerformed
        // TODO add your handling code here:
        listaFechadajTabbedPane.setVisible(true);
    }//GEN-LAST:event_abrirListajButtonActionPerformed

    private void novaListajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novaListajButtonActionPerformed
        // TODO add your handling code here:
        novaListajButton.setVisible(false);
        editarListajButton.setVisible(false);
        buscarListajButton.setVisible(true);
        salvarListajButton.setVisible(true);
        excluirListajButton.setVisible(false);
        cancelarListajButton.setVisible(true);
        dataInicialjFormattedTextField.grabFocus();
        
        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_novaListajButtonActionPerformed

    private void dataInicialjFormattedTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataInicialjFormattedTextFieldMouseClicked
        // TODO add your handling code here:
        dataInicialjFormattedTextField.setText("");
    }//GEN-LAST:event_dataInicialjFormattedTextFieldMouseClicked

    private void dataFinaljFormattedTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataFinaljFormattedTextFieldMouseClicked
        // TODO add your handling code here:
        dataFinaljFormattedTextField.setText("");
    }//GEN-LAST:event_dataFinaljFormattedTextFieldMouseClicked

    private void salvarListajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarListajButtonActionPerformed
        // TODO add your handling code here:
        ListasAderenciaAosProcedimentos oListAdProcedimentos = new ListasAderenciaAosProcedimentos();
        
        if(dataInicialjFormattedTextField.getText().equals("  /  /    ")){
            
        JOptionPane.showMessageDialog(null, "Coloque uma DATA INICIAL", "mensagem do sistema", JOptionPane.INFORMATION_MESSAGE);    
        }else if(dataFinaljFormattedTextField.getText().equals("  /  /    ")){
            
        JOptionPane.showMessageDialog(null, "Coloque uma DATA FINAL", "mensagem do sistema", JOptionPane.INFORMATION_MESSAGE);    
        }else{
            
            try {
                
                salvarListajButton.setVisible(false);
                novaListajButton.setVisible(true);
                editarListajButton.setVisible(true);
                excluirListajButton.setVisible(false);
                cancelarListajButton.setVisible(false);
                
                oListAdProcedimentos.setCodigo_regional(codigo_regional);
                
                oListAdProcedimentos.setData_inicial(dataInicialjFormattedTextField.getText());
                oListAdProcedimentos.setData_final(dataFinaljFormattedTextField.getText());
                oListAdProcedimentos.setStatus(statusListaFechadajComboBox.getSelectedItem().toString());
                oListAdProcedimentos.setCadastrar();           
            } catch (Exception e) {
              JOptionPane.showMessageDialog(null, "Erro ao cadastrar\n"+e, "mensagem do sistema", JOptionPane.ERROR_MESSAGE);    
            }
            try {
            getGradeListaSemanal();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar grade\n"+e, "mensagem do sistema", JOptionPane.ERROR_MESSAGE);  
        }
            
        }
    }//GEN-LAST:event_salvarListajButtonActionPerformed

    private void buscarListajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarListajButtonActionPerformed
        // TODO add your handling code here:
        try {
            getGradeListaSemanal();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar grade\n"+e, "mensagem do sistema", JOptionPane.ERROR_MESSAGE);  
        }
        try {
            getGradeListaFechada();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar grade\n"+e, "mensagem do sistema", JOptionPane.ERROR_MESSAGE);  
        }
    }//GEN-LAST:event_buscarListajButtonActionPerformed

    private void gradeListaAbertajTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gradeListaAbertajTableMouseClicked
        // TODO add your handling code here:
        editarListajButton.setVisible(true);
        relatoriojButton.setEnabled(true);
        relatorioGeralAderenciajButton.setEnabled(true);
        cadastraCredenciadojButton.setEnabled(true);
        atualizaCredenciadojButton.setEnabled(true);
        
        codigo_click_lista = Integer.parseInt(gradeListaAbertajTable.getValueAt(gradeListaAbertajTable.getSelectedRow(), 0).toString());
        try {
            getFieldListaSemanal(codigo_click_lista);
        } catch (ParseException ex) {
            Logger.getLogger(ListasAderenciaAosProcedimentos.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(credenciadojComboBox.getItemCount() == 0){
            JOptionPane.showMessageDialog(null, "Atenção, cadastre um credenciado", "Mensagem do sistema", JOptionPane.INFORMATION_MESSAGE);
        }else{
         novojButton.setVisible(true);
         buscarjButtonActionPerformed(null);   
        }
    }//GEN-LAST:event_gradeListaAbertajTableMouseClicked

    private void alterarListajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterarListajButtonActionPerformed
        // TODO add your handling code here:
        ListasAderenciaAosProcedimentos oListAdProcedimentos = new ListasAderenciaAosProcedimentos();
        
        if(dataInicialjFormattedTextField.getText().equals("  /  /    ")){
        JOptionPane.showMessageDialog(null, "Coloque uma DATA INICIAL", "mensagem do sistema", JOptionPane.INFORMATION_MESSAGE);    
            
        }else if (dataFinaljFormattedTextField.getText().equals("  /  /    ")){
         JOptionPane.showMessageDialog(null, "Coloque uma DATA FINAL", "mensagem do sistema", JOptionPane.INFORMATION_MESSAGE);   
            
        }else{
            
                
                try {
                    alterarListajButton.setVisible(false);
                    editarListajButton.setVisible(true);
                    novaListajButton.setVisible(true);
                    excluirListajButton.setVisible(false);
                    cancelarListajButton.setVisible(false);
                
                    oListAdProcedimentos.setCodigo_regional(codigo_regional);
                    oListAdProcedimentos.setCodigo_lista_semanal(codigo_click_lista);
                
                    oListAdProcedimentos.setData_inicial(dataInicialjFormattedTextField.getText());
                    oListAdProcedimentos.setData_final(dataFinaljFormattedTextField.getText());
                    oListAdProcedimentos.setStatus(statusjComboBox.getSelectedItem().toString());
                    oListAdProcedimentos.setAlterar(conecta);     
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao atualizar\n"+e, "mensagem do sistema", JOptionPane.ERROR_MESSAGE);  
            }
                try {
            getGradeListaSemanal();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar grade\n"+e, "mensagem do sistema", JOptionPane.ERROR_MESSAGE);  
        }
                buscarListajButtonActionPerformed(evt);
  
        }    
    }//GEN-LAST:event_alterarListajButtonActionPerformed

    private void editarListajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarListajButtonActionPerformed
        // TODO add your handling code here:
        novaListajButton.setVisible(false);
        salvarListajButton.setVisible(false);
        editarListajButton.setVisible(false);
        alterarListajButton.setVisible(true);
        excluirListajButton.setVisible(true);
        cancelarListajButton.setVisible(true);
        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_editarListajButtonActionPerformed

    private void excluirListajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirListajButtonActionPerformed
        // TODO add your handling code here:
        Object[] options = {"Sim", "Não"};
        int sd =
                JOptionPane.showOptionDialog(
                null,
                "Atenção!\n<html>Deseja realmente <b>EXCLUIR</b> esse registro?</html>",
                "Confirmação!",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.WARNING_MESSAGE,
                null,
                options,
                options[0]);

        if (sd != 0) {
            return;
        }
        ListasAderenciaAosProcedimentos oList = new ListasAderenciaAosProcedimentos();
        
        try {
            
            oList.setCodigo_lista_semanal(codigo_click_lista);
            oList.setExcluir(conecta);     
        } catch (Exception e) {
         JOptionPane.showMessageDialog(null, "Erro ao excluir registro\n"+e, "mensagem do sistema", JOptionPane.ERROR_MESSAGE);     
        }
        try {
            getGradeListaSemanal();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar grade\n"+e, "mensagem do sistema", JOptionPane.ERROR_MESSAGE);  
        }
        cancelarListajButtonActionPerformed(evt);
        dataInicialjFormattedTextField.setText("");
        dataFinaljFormattedTextField.setText("");
        statusjComboBox.setSelectedItem("ABERTA");
    }//GEN-LAST:event_excluirListajButtonActionPerformed

    private void cancelarListajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarListajButtonActionPerformed
        // TODO add your handling code here:
        novaListajButton.setVisible(true);
        editarListajButton.setVisible(false);
        salvarListajButton.setVisible(false);
        alterarListajButton.setVisible(false);
        excluirListajButton.setVisible(false);
        cancelarListajButton.setVisible(false);
    }//GEN-LAST:event_cancelarListajButtonActionPerformed

    private void atualizaListFechadajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizaListFechadajButtonActionPerformed
        // TODO add your handling code here:
         ListasAderenciaAosProcedimentos oListAdProcedimentos = new ListasAderenciaAosProcedimentos();
        
        if(dataInicialListaFechadajFormattedTextField.getText().equals("  /  /    ")){
        JOptionPane.showMessageDialog(null, "Coloque uma DATA INICIAL", "mensagem do sistema", JOptionPane.INFORMATION_MESSAGE);    
            
        }else if (dataFinalListaFechadajFormattedTextField.getText().equals("  /  /    ")){
         JOptionPane.showMessageDialog(null, "Coloque uma DATA FINAL", "mensagem do sistema", JOptionPane.INFORMATION_MESSAGE);   
            
        }else{
            
                
                try {
                    alterarListajButton.setVisible(false);
                    editarListajButton.setVisible(true);
                    novaListajButton.setVisible(true);
                    excluirListajButton.setVisible(false);
                    cancelarListajButton.setVisible(false);
                
                    oListAdProcedimentos.setCodigo_regional(codigo_regional);
                    oListAdProcedimentos.setCodigo_lista_semanal(codigo_click_lista_fechada);
                
                    oListAdProcedimentos.setData_inicial(dataInicialListaFechadajFormattedTextField.getText());
                    oListAdProcedimentos.setData_final(dataFinalListaFechadajFormattedTextField.getText());
                    oListAdProcedimentos.setStatus(statusListaFechadajComboBox.getSelectedItem().toString());
                    oListAdProcedimentos.setAlterar(conecta);     
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao atualizar\n"+e, "mensagem do sistema", JOptionPane.ERROR_MESSAGE);  
            }
                try {
            getGradeListaFechada();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar grade\n"+e, "mensagem do sistema", JOptionPane.ERROR_MESSAGE);  
        }
                buscarListajButtonActionPerformed(evt);
  
        }    
    }//GEN-LAST:event_atualizaListFechadajButtonActionPerformed

    private void gradeListafechadajTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gradeListafechadajTableMouseClicked
        // TODO add your handling code here:
        codigo_click_lista_fechada = Integer.parseInt(gradeListafechadajTable.getValueAt(gradeListafechadajTable.getSelectedRow(), 0).toString());
        try {
            getFieldListaFechada(codigo_click_lista_fechada);
        } catch (ParseException ex) {
            Logger.getLogger(ListasAderenciaAosProcedimentos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_gradeListafechadajTableMouseClicked

    private void novojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novojButtonActionPerformed
        // TODO add your handling code here:
        novojButton.setVisible(false);
        editarjButton.setVisible(false);
        buscarjButton.setVisible(true);
        salvarjButton.setVisible(true);
        excluirjButton.setVisible(false);
        cancelarjButton.setVisible(true);
        pergunta1jTextField.grabFocus();
        
        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (Exception e) {
        }
        limparjButtonActionPerformed(evt);
    }//GEN-LAST:event_novojButtonActionPerformed

    private void limparjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparjButtonActionPerformed
        // TODO add your handling code here:
        pergunta1jTextField.setText("");
        pergunta2jTextField.setText("");
        pergunta3jTextField.setText("");
        pergunta4jTextField.setText("");
        totaljTextField.setText("0%");
        calculaAderenciajButtonActionPerformed(evt);
    }//GEN-LAST:event_limparjButtonActionPerformed

    private void salvarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarjButtonActionPerformed
        // TODO add your handling code here:
        AderenciaAosProcedimentos oAderencia = new AderenciaAosProcedimentos();
        
        if(datajFormattedTextField.getText().equals("  /  /    ")){
            
        JOptionPane.showMessageDialog(null, "Coloque uma data", "Mensagem do sistema", JOptionPane.INFORMATION_MESSAGE);
        }else{
            
            try {
                
                novojButton.setVisible(true);
                editarjButton.setVisible(false);
                salvarjButton.setVisible(false);
                alterarjButton.setVisible(false);
                excluirjButton.setVisible(false);
                cancelarjButton.setVisible(false);
                
                datajFormattedTextField.grabFocus();
                calculaAderenciajButtonActionPerformed(evt);
                
                combo_credenciado = (ComboItem)credenciadojComboBox.getSelectedItem();
            
                oAderencia.setCodigo_credenciado(combo_credenciado.getId());
                oAderencia.setCodigo_regional(codigo_regional);
                oAderencia.setCodigo_lista_semanal(codigo_click_lista);
            
                oAderencia.setData(datajFormattedTextField.getText());
                oAderencia.setPergunta1(pergunta1jTextField.getText().trim().toUpperCase());
                oAderencia.setPergunta2(pergunta2jTextField.getText().trim().toUpperCase());
                oAderencia.setPergunta3(pergunta3jTextField.getText().trim().toUpperCase());
                oAderencia.setPergunta4(pergunta4jTextField.getText().trim().toUpperCase());
                oAderencia.setValor(total);
                oAderencia.setAderencia(aderenciajTextField.getText());
                oAderencia.setCadastrar(); 
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao cadastrar\n"+e, "mensagem do sistema", JOptionPane.ERROR_MESSAGE);
            }
            try {
            getGradeAderenciaAosProcessos();
        } catch (Exception e) {
          JOptionPane.showMessageDialog(null, "Erro ao carregar a grade\n"+e, "Mensagem do sistema", JOptionPane.ERROR_MESSAGE);
        }  
        }
        buscarjButtonActionPerformed(evt);
    }//GEN-LAST:event_salvarjButtonActionPerformed

    private void buscarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarjButtonActionPerformed
        // TODO add your handling code here:
        try {
            getGradeAderenciaAosProcessos();
        } catch (Exception e) {
//          JOptionPane.showMessageDialog(null, "Erro ao carregar a grade\n"+e, "Mensagem do sistema", JOptionPane.ERROR_MESSAGE);
        }
        
        somaLinhas = gradeAderenciaAosProcessosjTable.getModel().getRowCount();
        if(somaLinhas == 0){
            limparjButton.setVisible(false);
        }
        if(somaLinhas == 6){
            novojButton.setVisible(false);
            limparjButton.setVisible(true);
        }else{
        novojButton.setVisible(true);
        limparjButton.setVisible(true);
        }
    }//GEN-LAST:event_buscarjButtonActionPerformed

    private void credenciadojComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_credenciadojComboBoxActionPerformed
        // TODO add your handling code here:
        buscarjButtonActionPerformed(evt);
    }//GEN-LAST:event_credenciadojComboBoxActionPerformed

    private void editarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarjButtonActionPerformed
        // TODO add your handling code here:
        novojButton.setVisible(false);
        salvarjButton.setVisible(false);
        editarjButton.setVisible(false);
        alterarjButton.setVisible(true);
        excluirjButton.setVisible(true);
        cancelarjButton.setVisible(true);
        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_editarjButtonActionPerformed

    private void alterarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterarjButtonActionPerformed
        // TODO add your handling code here:
        AderenciaAosProcedimentos oAderencia = new AderenciaAosProcedimentos();
        
        if(datajFormattedTextField.getText().equals("  /  /    ")){
        JOptionPane.showMessageDialog(null, "Coloque uma data", "mensagem do sistema", JOptionPane.INFORMATION_MESSAGE);    
        }else{
            try {
                
                datajFormattedTextField.grabFocus();
                calculaAderenciajButtonActionPerformed(null);
                
                alterarjButton.setVisible(false);
                editarjButton.setVisible(true);
                novojButton.setVisible(true);
                excluirjButton.setVisible(false);
                cancelarjButton.setVisible(false);
                
                combo_credenciado = (ComboItem)credenciadojComboBox.getSelectedItem();
                
                oAderencia.setCodigo_controle_acompanhamento(codigo_click_aderencia);
                oAderencia.setCodigo_regional(codigo_regional);
                oAderencia.setCodigo_lista_semanal(codigo_click_lista);
                oAderencia.setCodigo_credenciado(combo_credenciado.getId());
                
                oAderencia.setPergunta1(pergunta1jTextField.getText().trim().toUpperCase());
                oAderencia.setPergunta2(pergunta2jTextField.getText().trim().toUpperCase());
                oAderencia.setPergunta3(pergunta3jTextField.getText().trim().toUpperCase());
                oAderencia.setPergunta4(pergunta4jTextField.getText().trim().toUpperCase());
                oAderencia.setValor(total);
                oAderencia.setAderencia(aderenciajTextField.getText());
                oAderencia.setData(datajFormattedTextField.getText());
                oAderencia.setAlterar(conecta);  
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao alterar registro\n"+e, "mensagem do sistema", JOptionPane.ERROR_MESSAGE);
            }
            try {
            getGradeAderenciaAosProcessos();
            } catch (Exception e) {
          JOptionPane.showMessageDialog(null, "Erro ao carregar a grade\n"+e, "Mensagem do sistema", JOptionPane.ERROR_MESSAGE);
        } 
        }
        buscarjButtonActionPerformed(evt);
    }//GEN-LAST:event_alterarjButtonActionPerformed

    private void gradeAderenciaAosProcessosjTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gradeAderenciaAosProcessosjTableMouseClicked
        // TODO add your handling code here:
        editarjButton.setVisible(true);
        codigo_click_aderencia = Integer.parseInt(gradeAderenciaAosProcessosjTable.getValueAt(gradeAderenciaAosProcessosjTable.getSelectedRow(), 0).toString());
        try {
            getFieldListaAderencia(codigo_click_aderencia);
        } catch (ParseException ex) {
            Logger.getLogger(PessoasCampo.class.getName()).log(Level.SEVERE, null, ex);
        }
        calculaAderenciajButtonActionPerformed(null);
    }//GEN-LAST:event_gradeAderenciaAosProcessosjTableMouseClicked

    private void excluirjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirjButtonActionPerformed
        // TODO add your handling code here:
        Object[] options = {"Sim", "Não"};
        int sd =
                JOptionPane.showOptionDialog(
                null,
                "Deseja realmente EXCLUIR esse registro?",
                "Confirmação!",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.WARNING_MESSAGE,
                null,
                options,
                options[0]);

        if (sd != 0) {
            return;
        }
        AderenciaAosProcedimentos oAderencia = new AderenciaAosProcedimentos();
        
        try {
            
            oAderencia.setCodigo_controle_acompanhamento(codigo_click_aderencia);
            oAderencia.setExcluir(conecta);            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao excluir registro\n"+e, "Mensagem do sistema", JOptionPane.ERROR_MESSAGE);
        }
        try {
            getGradeAderenciaAosProcessos();
        } catch (Exception e) {
         JOptionPane.showMessageDialog(null, "Erro ao atualizar a grade\n"+e, "Mensagem do sistema", JOptionPane.ERROR_MESSAGE);
        }
        cancelarjButtonActionPerformed(evt);
        limparjButtonActionPerformed(evt);
        buscarjButtonActionPerformed(evt);
    }//GEN-LAST:event_excluirjButtonActionPerformed

    private void cancelarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarjButtonActionPerformed
        // TODO add your handling code here:
        novojButton.setVisible(true);
        editarjButton.setVisible(false);
        salvarjButton.setVisible(false);
        alterarjButton.setVisible(false);
        excluirjButton.setVisible(false);
        cancelarjButton.setVisible(false);
        buscarjButtonActionPerformed(evt);
    }//GEN-LAST:event_cancelarjButtonActionPerformed

    private void relatoriojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_relatoriojButtonActionPerformed
        // TODO add your handling code here:
        try {
            String caminhoRelJasper = "/Relatorios/AderenciaAosProcedimentos2.jasper";  
            
            ImageIcon logo = new ImageIcon(getClass().getResource("/resources/SKY.png"));
            String nome_credenciado = credenciadojComboBox.getSelectedItem().toString();
           
            
                Map parametros = new HashMap();
                parametros.put("CODIGO_REGIONAL", codigo_regional);
                parametros.put("CODIGO_LISTA_SEMANAL", codigo_click_lista);
                parametros.put("NOME_CREDENCIADO", nome_credenciado);
                parametros.put("CODIGO_CREDENCIADO", combo_credenciado.getId());
                parametros.put("LOGO", logo);
                URL arquivo = getClass().getResource(caminhoRelJasper);
                if (arquivo == null) {
                    JOptionPane.showMessageDialog(null, "Arquivo jasper não encontrado");
                }
                JasperReport report;
                report = JasperManager.loadReport(arquivo.openStream());
                JasperPrint jasperPrint = JasperFillManager.fillReport(report, parametros, ClassConecta.conectaAderenciaAosprocedimentos());
                JasperViewer jrviewer = new JasperViewer(jasperPrint, false);
                jrviewer.setVisible(true);
        } catch (SQLException | JRException | IOException ex) {
            Logger.getLogger(jFPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Erro ao gerar relatório\n"+ex, "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_relatoriojButtonActionPerformed

    private void relatorioGeralAderenciajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_relatorioGeralAderenciajButtonActionPerformed
        // TODO add your handling code here:
        
        try {
            String caminhoRelJasper = "/Relatorios/RRelatorioGeralAderencia.jasper";  
            
            ImageIcon logo = new ImageIcon(getClass().getResource("/resources/SKY.png"));           
            
                Map parametros = new HashMap();
                parametros.put("CODIGO_REGIONAL", codigo_regional);
                parametros.put("CODIGO_LISTA_SEMANAL", codigo_click_lista);
                parametros.put("LOGO", logo);
                URL arquivo = getClass().getResource(caminhoRelJasper);
                if (arquivo == null) {
                    JOptionPane.showMessageDialog(null, "Arquivo jasper não encontrado");
                }
                JasperReport report;
                report = JasperManager.loadReport(arquivo.openStream());
                JasperPrint jasperPrint = JasperFillManager.fillReport(report, parametros, ClassConecta.conectaAderenciaAosprocedimentos());
                JasperViewer jrviewer = new JasperViewer(jasperPrint, false);
                jrviewer.setVisible(true);
        } catch (SQLException | JRException | IOException ex) {
            Logger.getLogger(jFPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Erro ao gerar relatório\n"+ex, "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_relatorioGeralAderenciajButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jFAderenciaAosProcedimentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new jFAderenciaAosProcedimentos().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Pergunta2jLabel;
    private javax.swing.JButton abrirListajButton;
    private javax.swing.JTextField aderenciajTextField;
    private javax.swing.JButton alterarListajButton;
    private javax.swing.JButton alterarjButton;
    private javax.swing.JButton ativaRegionaljButton;
    private javax.swing.JButton atualizaCredenciadojButton;
    private javax.swing.JButton atualizaListFechadajButton;
    private javax.swing.JButton buscarListajButton;
    private javax.swing.JButton buscarjButton;
    private javax.swing.JButton cadastraCredenciadojButton;
    private javax.swing.JButton calculaAderenciajButton;
    private javax.swing.JButton cancelarListajButton;
    private javax.swing.JButton cancelarjButton;
    private javax.swing.JComboBox credenciadojComboBox;
    private javax.swing.JFormattedTextField dataFinalListaFechadajFormattedTextField;
    private javax.swing.JFormattedTextField dataFinaljFormattedTextField;
    private javax.swing.JFormattedTextField dataInicialListaFechadajFormattedTextField;
    private javax.swing.JFormattedTextField dataInicialjFormattedTextField;
    private javax.swing.JFormattedTextField datajFormattedTextField;
    private javax.swing.JButton editarListajButton;
    private javax.swing.JButton editarjButton;
    private javax.swing.JButton excluirListajButton;
    private javax.swing.JButton excluirjButton;
    private javax.swing.JTable gradeAderenciaAosProcessosjTable;
    private javax.swing.JTable gradeListaAbertajTable;
    private javax.swing.JTable gradeListafechadajTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JToolBar.Separator jSeparator12;
    private javax.swing.JToolBar.Separator jSeparator13;
    private javax.swing.JToolBar.Separator jSeparator14;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JToolBar.Separator jSeparator8;
    private javax.swing.JToolBar.Separator jSeparator9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton limparjButton;
    private javax.swing.JTabbedPane listaFechadajTabbedPane;
    private javax.swing.JTabbedPane listaabertajTabbedPane;
    private javax.swing.JButton novaListajButton;
    private javax.swing.JButton novojButton;
    private javax.swing.JButton pegacodRegionaljButton;
    private javax.swing.JLabel pergunta1jLabel;
    private javax.swing.JTextField pergunta1jTextField;
    private javax.swing.JTextField pergunta2jTextField;
    private javax.swing.JLabel pergunta3jLabel;
    private javax.swing.JTextField pergunta3jTextField;
    private javax.swing.JLabel pergunta4jLabel;
    private javax.swing.JTextField pergunta4jTextField;
    private javax.swing.JButton relatorioGeralAderenciajButton;
    private javax.swing.JButton relatoriojButton;
    private javax.swing.JButton sairjButton;
    private javax.swing.JButton salvarListajButton;
    private javax.swing.JButton salvarjButton;
    private javax.swing.JComboBox statusListaFechadajComboBox;
    private javax.swing.JComboBox statusjComboBox;
    private javax.swing.JTextField totaljTextField;
    // End of variables declaration//GEN-END:variables
}
