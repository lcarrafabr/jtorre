/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package jcadastropendentes;

import Classes.*;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lcbenfic
 */
public class jFPessoas extends javax.swing.JFrame {

    /**
     * Creates new form jFPessoas
     */
    public jFPessoas() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/resources/radio-tower-32.png")).getImage()); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar2 = new javax.swing.JToolBar();
        buscarjButton = new javax.swing.JButton();
        novojButton = new javax.swing.JButton();
        editarjButton = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        salvarjButton = new javax.swing.JButton();
        salvarMaisjButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        alterarjButton = new javax.swing.JButton();
        excluirjButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        limparjButton = new javax.swing.JButton();
        sairjButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        cargosjButton = new javax.swing.JButton();
        subsetoresjButton = new javax.swing.JButton();
        usuariosjButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        gradePessoasjTable = new javax.swing.JTable();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nomePessoajTextField = new javax.swing.JTextField();
        loginjTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        statusjComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        datacadastrojFormattedTextField = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        tipoPessoajComboBox = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        observacaojTextArea = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        cadastraRamal_telefonejButton = new javax.swing.JButton();
        atualizaGradeTelefonejButton = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        gradeTelefonejTable = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        cadastraEnderecoEletronicojButton = new javax.swing.JButton();
        atualizaGradeEderecoEletronicojButton = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        gradeEnderecoEletronicojTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Cadastro pessoas");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jToolBar2.setFloatable(false);
        jToolBar2.setRollover(true);

        buscarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/buscar.png"))); // NOI18N
        buscarjButton.setText("Buscar");
        buscarjButton.setFocusable(false);
        buscarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buscarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buscarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarjButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(buscarjButton);

        novojButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/new2.png"))); // NOI18N
        novojButton.setText("Novo");
        novojButton.setFocusable(false);
        novojButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        novojButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        novojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novojButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(novojButton);

        editarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/edit.png"))); // NOI18N
        editarjButton.setText("Editar");
        editarjButton.setFocusable(false);
        editarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        editarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        editarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarjButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(editarjButton);
        jToolBar2.add(jSeparator3);

        salvarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/save.png"))); // NOI18N
        salvarjButton.setText("Salvar");
        salvarjButton.setFocusable(false);
        salvarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salvarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        salvarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarjButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(salvarjButton);

        salvarMaisjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/save_plus.png"))); // NOI18N
        salvarMaisjButton.setText("Salvar+");
        salvarMaisjButton.setFocusable(false);
        salvarMaisjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salvarMaisjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        salvarMaisjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarMaisjButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(salvarMaisjButton);
        jToolBar2.add(jSeparator2);

        alterarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/save2.png"))); // NOI18N
        alterarjButton.setText("Alterar");
        alterarjButton.setFocusable(false);
        alterarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        alterarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        alterarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterarjButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(alterarjButton);

        excluirjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/delete.png"))); // NOI18N
        excluirjButton.setText("Excluir");
        excluirjButton.setFocusable(false);
        excluirjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        excluirjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        excluirjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirjButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(excluirjButton);
        jToolBar2.add(jSeparator1);

        limparjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/clear.png"))); // NOI18N
        limparjButton.setText("Limpar");
        limparjButton.setFocusable(false);
        limparjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        limparjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        limparjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparjButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(limparjButton);

        sairjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/exit.png"))); // NOI18N
        sairjButton.setText("Sair");
        sairjButton.setFocusable(false);
        sairjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sairjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        sairjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairjButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(sairjButton);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cargosjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/cargos.png"))); // NOI18N
        cargosjButton.setText("Cargos");
        cargosjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargosjButtonActionPerformed(evt);
            }
        });

        subsetoresjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/employee.png"))); // NOI18N
        subsetoresjButton.setText("Funcionários");
        subsetoresjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subsetoresjButtonActionPerformed(evt);
            }
        });

        usuariosjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/user2.png"))); // NOI18N
        usuariosjButton.setText("Usuários");
        usuariosjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usuariosjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cargosjButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(subsetoresjButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(usuariosjButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cargosjButton)
                    .addComponent(subsetoresjButton)
                    .addComponent(usuariosjButton))
                .addContainerGap())
        );

        gradePessoasjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id#", "Nome Pessoa", "Login", "Data Cadastro"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gradePessoasjTable.getTableHeader().setReorderingAllowed(false);
        gradePessoasjTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gradePessoasjTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(gradePessoasjTable);
        gradePessoasjTable.getColumnModel().getColumn(0).setResizable(false);
        gradePessoasjTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        gradePessoasjTable.getColumnModel().getColumn(1).setResizable(false);
        gradePessoasjTable.getColumnModel().getColumn(1).setPreferredWidth(200);
        gradePessoasjTable.getColumnModel().getColumn(2).setResizable(false);
        gradePessoasjTable.getColumnModel().getColumn(2).setPreferredWidth(80);
        gradePessoasjTable.getColumnModel().getColumn(3).setResizable(false);
        gradePessoasjTable.getColumnModel().getColumn(3).setPreferredWidth(80);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Nome Pessoa");

        nomePessoajTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nomePessoajTextFieldKeyReleased(evt);
            }
        });

        loginjTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                loginjTextFieldKeyReleased(evt);
            }
        });

        jLabel2.setText("Login");

        statusjComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SELECIONE", "ATIVO", "INATIVO" }));

        jLabel3.setText("Status");

        datacadastrojFormattedTextField.setEditable(false);
        try {
            datacadastrojFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        datacadastrojFormattedTextField.setFocusable(false);

        jLabel4.setText("Data cadastro");

        tipoPessoajComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Física", "Jurídica" }));

        jLabel5.setText("Tipo pessoa");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nomePessoajTextField)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(loginjTextField)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(statusjComboBox, 0, 114, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tipoPessoajComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(datacadastrojFormattedTextField))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomePessoajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loginjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statusjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(datacadastrojFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tipoPessoajComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Cadastro Pessoa", jPanel3);

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        observacaojTextArea.setColumns(20);
        observacaojTextArea.setRows(5);
        jScrollPane2.setViewportView(observacaojTextArea);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 703, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Observação", jPanel4);

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cadastraRamal_telefonejButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/add_small.png"))); // NOI18N
        cadastraRamal_telefonejButton.setToolTipText("Cadastra Ramal ou Telefones");
        cadastraRamal_telefonejButton.setContentAreaFilled(false);
        cadastraRamal_telefonejButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cadastraRamal_telefonejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastraRamal_telefonejButtonActionPerformed(evt);
            }
        });

        atualizaGradeTelefonejButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/refresh.png"))); // NOI18N
        atualizaGradeTelefonejButton.setToolTipText("Atualiza grade telefone");
        atualizaGradeTelefonejButton.setContentAreaFilled(false);
        atualizaGradeTelefonejButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        atualizaGradeTelefonejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizaGradeTelefonejButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cadastraRamal_telefonejButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(atualizaGradeTelefonejButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cadastraRamal_telefonejButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizaGradeTelefonejButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        gradeTelefonejTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id#", "Pessoa", "Tipo telefone", "Telefone", "Ramal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gradeTelefonejTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(gradeTelefonejTable);
        gradeTelefonejTable.getColumnModel().getColumn(0).setResizable(false);
        gradeTelefonejTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        gradeTelefonejTable.getColumnModel().getColumn(1).setResizable(false);
        gradeTelefonejTable.getColumnModel().getColumn(1).setPreferredWidth(150);
        gradeTelefonejTable.getColumnModel().getColumn(2).setResizable(false);
        gradeTelefonejTable.getColumnModel().getColumn(2).setPreferredWidth(50);
        gradeTelefonejTable.getColumnModel().getColumn(3).setResizable(false);
        gradeTelefonejTable.getColumnModel().getColumn(3).setPreferredWidth(50);
        gradeTelefonejTable.getColumnModel().getColumn(4).setResizable(false);
        gradeTelefonejTable.getColumnModel().getColumn(4).setPreferredWidth(50);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cadastraEnderecoEletronicojButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/add_small.png"))); // NOI18N
        cadastraEnderecoEletronicojButton.setToolTipText("Cadastra endereços eletronicos");
        cadastraEnderecoEletronicojButton.setContentAreaFilled(false);
        cadastraEnderecoEletronicojButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cadastraEnderecoEletronicojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastraEnderecoEletronicojButtonActionPerformed(evt);
            }
        });

        atualizaGradeEderecoEletronicojButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/refresh.png"))); // NOI18N
        atualizaGradeEderecoEletronicojButton.setContentAreaFilled(false);
        atualizaGradeEderecoEletronicojButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        atualizaGradeEderecoEletronicojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizaGradeEderecoEletronicojButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cadastraEnderecoEletronicojButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(atualizaGradeEderecoEletronicojButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cadastraEnderecoEletronicojButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizaGradeEderecoEletronicojButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        gradeEnderecoEletronicojTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id#", "Email", "Site"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gradeEnderecoEletronicojTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(gradeEnderecoEletronicojTable);
        gradeEnderecoEletronicojTable.getColumnModel().getColumn(0).setResizable(false);
        gradeEnderecoEletronicojTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        gradeEnderecoEletronicojTable.getColumnModel().getColumn(1).setResizable(false);
        gradeEnderecoEletronicojTable.getColumnModel().getColumn(1).setPreferredWidth(180);
        gradeEnderecoEletronicojTable.getColumnModel().getColumn(2).setResizable(false);
        gradeEnderecoEletronicojTable.getColumnModel().getColumn(2).setPreferredWidth(180);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jTabbedPane1)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    ClassConecta conecta = new ClassConecta();
    
    int codigo_pessoa;
    
    String click_nome_pessoa;
    
    String click_login;
    
    public void getGradePessoas() throws ParseException{
       //Consultar Pessoas
        PESSOAS oPessoa = new PESSOAS();

        if ( nomePessoajTextField.getText().length() > 0 ){
            oPessoa.setNome_pessoa(nomePessoajTextField.getText() +"%");
        }
        if ( loginjTextField.getText().length() > 0 ){
            oPessoa.setLogin(loginjTextField.getText() +"%");
        }

        ResultSet resultSet = null;

        String[] colunasTabela = new String[]{"Id#", "Nome Pessoa", "Login", "Data cadastro"};
        DefaultTableModel modeloTabela = new DefaultTableModel(null, colunasTabela) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        gradePessoasjTable.setModel(modeloTabela);
        gradePessoasjTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        gradePessoasjTable.getColumnModel().getColumn(1).setPreferredWidth(200);
        gradePessoasjTable.getColumnModel().getColumn(2).setPreferredWidth(80);
        gradePessoasjTable.getColumnModel().getColumn(3).setPreferredWidth(80);

try {
            resultSet = oPessoa.getConsultar(conecta);
            if (resultSet.getRow() == 1){
             resultSet.first();
            }


        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {

            while (resultSet.next()) {

                modeloTabela.addRow(new String[]{
                    Funcoes.getCodigoFormat(resultSet.getInt("CODIGO_PESSOA")),
                    resultSet.getString("NOME_PESSOA"),
                    resultSet.getString("LOGIN"),
                    resultSet.getString("DATA_CADASTRO")
                });

            }

        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }

           }
    
    //***********************************************************************************************************************************
    //                        =============== GRADE TELEFONES =============
    
    public void getGradeTelefones() throws ParseException{
       //Consultar Pessoas
        Telefones oTelefone = new Telefones();

//        if ( nomePessoajTextField.getText().length() > 0 ){
//            oPessoa.setNome_pessoa(nomePessoajTextField.getText() +"%");
//        }
//        if ( loginjTextField.getText().length() > 0 ){
//            oPessoa.setLogin(loginjTextField.getText() +"%");
//        }

        ResultSet resultSet = null;

        String[] colunasTabela = new String[]{"Id#", "Pessoa", "Tipo telefone", "Telefone", "Ramal"};
        DefaultTableModel modeloTabela = new DefaultTableModel(null, colunasTabela) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        gradeTelefonejTable.setModel(modeloTabela);
        gradeTelefonejTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        gradeTelefonejTable.getColumnModel().getColumn(1).setPreferredWidth(150);
        gradeTelefonejTable.getColumnModel().getColumn(2).setPreferredWidth(50);
        gradeTelefonejTable.getColumnModel().getColumn(3).setPreferredWidth(50);
        gradeTelefonejTable.getColumnModel().getColumn(4).setPreferredWidth(50);

try {
            oTelefone.setCodigo_pessoa(codigo_pessoa);
            resultSet = oTelefone.getConsultar(conecta);
            if (resultSet.getRow() == 1){
             resultSet.first();
            }


        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {

            while (resultSet.next()) {

                modeloTabela.addRow(new String[]{
                    Funcoes.getCodigoFormat(resultSet.getInt("CODIGO_TELEFONE")),
                    resultSet.getString("NOME_PESSOA"),
                    resultSet.getString("TIPO_TELEFONE"),
                    resultSet.getString("NUMERO"),
                    resultSet.getString("RAMAL")
                });

            }

        } catch (SQLException ex) {
            Logger.getLogger(Telefones.class.getName()).log(Level.SEVERE, null, ex);
        }

           }
    
    //***************************************************************************************************************************************
       //               ================== grade endereço eletronico ===========================
    
    
    public void getGradeEnderecosEletronicos() throws ParseException{
       //Consultar Pessoas
        EnderecosEletronicos oEnderecoEletronico = new EnderecosEletronicos();

        ResultSet resultSet = null;

        String[] colunasTabela = new String[]{"Id#", "E-mail", "Site"};
        DefaultTableModel modeloTabela = new DefaultTableModel(null, colunasTabela) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        gradeEnderecoEletronicojTable.setModel(modeloTabela);
        gradeEnderecoEletronicojTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        gradeEnderecoEletronicojTable.getColumnModel().getColumn(1).setPreferredWidth(180);
        gradeEnderecoEletronicojTable.getColumnModel().getColumn(2).setPreferredWidth(180);

try {
            oEnderecoEletronico.setCodigo_pessoa(codigo_pessoa);
            resultSet = oEnderecoEletronico.getConsultar(conecta);
            if (resultSet.getRow() == 1){
             resultSet.first();
            }


        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {

            while (resultSet.next()) {

                modeloTabela.addRow(new String[]{
                    Funcoes.getCodigoFormat(resultSet.getInt("CODIGO_ENDERECO_ELETRONICO")),
                    resultSet.getString("EMAIL"),
                    resultSet.getString("SITE")
                });

            }

        } catch (SQLException ex) {
            Logger.getLogger(Telefones.class.getName()).log(Level.SEVERE, null, ex);
        }

           }
    
    public void getFieldPessoa(int codigo_pessoa) throws ParseException{
        //Buscar contato
        PESSOAS oPessoa = new PESSOAS();
        ResultSet rs = null;
        oPessoa.setCodigo_pessoa(codigo_pessoa);

        try {
            rs = oPessoa.getConsultar(conecta);
            rs.next();

            //Pegar campos
            nomePessoajTextField.setText(rs.getString("NOME_PESSOA"));
            loginjTextField.setText(rs.getString("LOGIN"));
            statusjComboBox.setSelectedItem(rs.getString("STATUS"));
            datacadastrojFormattedTextField.setText(rs.getString("DATA_CADASTRO"));
            tipoPessoajComboBox.setSelectedItem(rs.getString("TIPO_PESSOA"));
            observacaojTextArea.setText(rs.getString("OBSERVACAO"));
            
            click_nome_pessoa = nomePessoajTextField.getText();
            click_login = loginjTextField.getText();
            
        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Erro ao preencher os campos\n"+ex, "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        novojButton.setEnabled(true);
        editarjButton.setEnabled(false);
        salvarjButton.setEnabled(false);
        salvarMaisjButton.setEnabled(false);
        alterarjButton.setEnabled(false);
        excluirjButton.setEnabled(false);
        nomePessoajTextField.grabFocus();
        
        cadastraRamal_telefonejButton.setEnabled(false);
        atualizaGradeTelefonejButton.setEnabled(false);
        cadastraEnderecoEletronicojButton.setEnabled(false);
        atualizaGradeEderecoEletronicojButton.setEnabled(false);
        cargosjButton.setEnabled(false);
        subsetoresjButton.setEnabled(false);
        usuariosjButton.setEnabled(false);
        
        try {
            ClassConecta.conectajTorre();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao conectar banco\n"+e, "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
        }
        try {
            datacadastrojFormattedTextField.setText(Funcoes.getNowBR());
        } catch (Exception e) {
        }
        
        buscarjButtonActionPerformed(null);
        
        observacaojTextArea.setWrapStyleWord(true);
        observacaojTextArea.setLineWrap(true);
    }//GEN-LAST:event_formWindowOpened

    private void sairjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairjButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_sairjButtonActionPerformed

    private void novojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novojButtonActionPerformed
        // TODO add your handling code here:
        novojButton.setEnabled(false);
        editarjButton.setEnabled(false);
        buscarjButton.setEnabled(true);
        salvarjButton.setEnabled(true);
        salvarMaisjButton.setEnabled(true);
        excluirjButton.setEnabled(false);
        nomePessoajTextField.grabFocus();
        
        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (Exception e) {
        }
        limparjButtonActionPerformed(null);
    }//GEN-LAST:event_novojButtonActionPerformed

    private void salvarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarjButtonActionPerformed
        // TODO add your handling code here:
        salvarjButton.setEnabled(false);
        novojButton.setEnabled(true);
        editarjButton.setEnabled(true);
        salvarMaisjButton.setEnabled(false);
        excluirjButton.setEnabled(false);
        
        PESSOAS oPessoa = new PESSOAS();
        
        if(nomePessoajTextField.getText().equals("") || statusjComboBox.getSelectedItem().equals("SELECIONE")){
            
            JOptionPane.showMessageDialog(null, "Todos os campos são obrigatórios!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
        }else{
        try {
            oPessoa.setNome_pessoa(nomePessoajTextField.getText().trim().toUpperCase());
            oPessoa.setLogin(loginjTextField.getText().trim().toUpperCase());
            oPessoa.setStatus(statusjComboBox.getSelectedItem().toString());
            oPessoa.setData_cadastro(datacadastrojFormattedTextField.getText().toString());
            oPessoa.setTipo_pessoa(tipoPessoajComboBox.getSelectedItem().toString());
            oPessoa.setObservacao(observacaojTextArea.getText());
            oPessoa.setCadastrar();            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao cadastrar\n"+e, "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
        }
            try {
                getGradePessoas();
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_salvarjButtonActionPerformed

    private void buscarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarjButtonActionPerformed
        // TODO add your handling code here:
        try {
            getGradePessoas();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao preencher a grade!\n"+e, "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_buscarjButtonActionPerformed

    private void editarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarjButtonActionPerformed
        // TODO add your handling code here:
        novojButton.setEnabled(false);
        salvarjButton.setEnabled(false);
        editarjButton.setEnabled(false);
        alterarjButton.setEnabled(true);
        salvarMaisjButton.setEnabled(false);
        excluirjButton.setEnabled(true);
        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_editarjButtonActionPerformed

    private void gradePessoasjTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gradePessoasjTableMouseClicked
        // TODO add your handling code here:
        editarjButton.setEnabled(true);
        cadastraRamal_telefonejButton.setEnabled(true);
        atualizaGradeTelefonejButton.setEnabled(true);
        cadastraEnderecoEletronicojButton.setEnabled(true);
        atualizaGradeEderecoEletronicojButton.setEnabled(true);
        cargosjButton.setEnabled(true);
        subsetoresjButton.setEnabled(true);
        usuariosjButton.setEnabled(true);
        
        codigo_pessoa = Integer.parseInt(gradePessoasjTable.getValueAt(gradePessoasjTable.getSelectedRow(), 0).toString());       
        try {
            getFieldPessoa(codigo_pessoa);
        } catch (ParseException ex) {
            Logger.getLogger(PESSOAS.class.getName()).log(Level.SEVERE, null, ex);
        }
        atualizaGradeTelefonejButtonActionPerformed(null);
        atualizaGradeEderecoEletronicojButtonActionPerformed(null);
        
    }//GEN-LAST:event_gradePessoasjTableMouseClicked

    private void alterarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterarjButtonActionPerformed
        // TODO add your handling code here:
        alterarjButton.setEnabled(false);
        editarjButton.setEnabled(true);
        novojButton.setEnabled(true);
        excluirjButton.setEnabled(false);
        
        PESSOAS oPessoa = new PESSOAS();
        
        if(nomePessoajTextField.getText().equals("") || statusjComboBox.getSelectedItem().equals("SELECIONE")){
            
          JOptionPane.showMessageDialog(null, "Todos os campos são obrigatórios!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);  
        }else{
            
            try {
                oPessoa.setCodigo_pessoa(codigo_pessoa);
                oPessoa.setNome_pessoa(nomePessoajTextField.getText().trim().toUpperCase());
                oPessoa.setLogin(loginjTextField.getText().trim().toUpperCase());
                oPessoa.setStatus(statusjComboBox.getSelectedItem().toString());
                oPessoa.setData_cadastro(datacadastrojFormattedTextField.getText().toString());
                oPessoa.setTipo_pessoa(tipoPessoajComboBox.getSelectedItem().toString());
                oPessoa.setObservacao(observacaojTextArea.getText());
                oPessoa.setAlterar(conecta);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao alterar dados!\n"+e, "ATENÇÃO", JOptionPane.ERROR_MESSAGE); 
            }
            try {
                getGradePessoas();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao carregar grade!\n"+e, "ATENÇÃO", JOptionPane.ERROR_MESSAGE); 
            }
            
        }
    }//GEN-LAST:event_alterarjButtonActionPerformed

    private void limparjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparjButtonActionPerformed
        // TODO add your handling code here:
        nomePessoajTextField.setText("");
        loginjTextField.setText("");
        statusjComboBox.setSelectedItem("SELECIONE");
        observacaojTextArea.setText("");
        codigo_pessoa = 0;
        
        cadastraRamal_telefonejButton.setEnabled(false);
        atualizaGradeTelefonejButton.setEnabled(false);
        cadastraEnderecoEletronicojButton.setEnabled(false);
        atualizaGradeEderecoEletronicojButton.setEnabled(false);
        
        try {
            datacadastrojFormattedTextField.setText(Funcoes.getNowBR());
        } catch (Exception e) {
        }
        atualizaGradeEderecoEletronicojButtonActionPerformed(null);
        atualizaGradeTelefonejButtonActionPerformed(null);
    }//GEN-LAST:event_limparjButtonActionPerformed

    private void excluirjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirjButtonActionPerformed
        // TODO add your handling code here:
         Object[] options = {"Sim", "Não"};
        int sd =
                JOptionPane.showOptionDialog(
                null,
                "Deseja realmente EXCLUIR esse registro?",
                "Confirmação!",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.WARNING_MESSAGE,
                null,
                options,
                options[0]);

        if (sd != 0) {
            return;
        }
        alterarjButton.setEnabled(false);
        editarjButton.setEnabled(true);
        excluirjButton.setEnabled(false);
        novojButton.setEnabled(true);
        
        PESSOAS oPessoa = new PESSOAS();
        
        oPessoa.setCodigo_pessoa(codigo_pessoa);
        oPessoa.setExcluir(conecta);
        
        try {
            getGradePessoas();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar grade!\n"+e, "ATENÇÃO", JOptionPane.ERROR_MESSAGE); 
        }
        
        limparjButtonActionPerformed(null);
    }//GEN-LAST:event_excluirjButtonActionPerformed

    private void salvarMaisjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarMaisjButtonActionPerformed
        // TODO add your handling code here:
        salvarjButtonActionPerformed(null);
        novojButtonActionPerformed(null);
    }//GEN-LAST:event_salvarMaisjButtonActionPerformed

    private void nomePessoajTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nomePessoajTextFieldKeyReleased
        // TODO add your handling code here:
        if (!alterarjButton.isEnabled()){
            try {
                PESSOAS oPessoa = new PESSOAS();
                oPessoa.setNome_pessoa(nomePessoajTextField.getText());
                ResultSet rs = null;
                rs = oPessoa.getConsultar(conecta);
                getGradePessoas();
            } catch (    ParseException | SQLException ex) {
                Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
            }    
        }
    }//GEN-LAST:event_nomePessoajTextFieldKeyReleased

    private void loginjTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_loginjTextFieldKeyReleased
        // TODO add your handling code here:
        if (!alterarjButton.isEnabled()){
            try {
                PESSOAS oPessoa = new PESSOAS();
                oPessoa.setLogin(loginjTextField.getText());
                ResultSet rs = null;
                rs = oPessoa.getConsultar(conecta);
                getGradePessoas();
            } catch (    ParseException | SQLException ex) {
                Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
            }    
        }
    }//GEN-LAST:event_loginjTextFieldKeyReleased

    private void cadastraRamal_telefonejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastraRamal_telefonejButtonActionPerformed
        // TODO add your handling code here:
        jFTelefones oFormTelefone = new jFTelefones();
        
        oFormTelefone.recebe_codigo_pessoa = codigo_pessoa;
        
        oFormTelefone.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        oFormTelefone.setLocationRelativeTo(null);
        oFormTelefone.pack();
        oFormTelefone.setModal(true);
        oFormTelefone.setVisible(true);
        
        try {
            getGradeTelefones();
        } catch (Exception e) {
             JOptionPane.showMessageDialog(null, "Erro ao carregar grade!\n"+e, "ATENÇÃO", JOptionPane.ERROR_MESSAGE); 
        }
    }//GEN-LAST:event_cadastraRamal_telefonejButtonActionPerformed

    private void atualizaGradeTelefonejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizaGradeTelefonejButtonActionPerformed
        // TODO add your handling code here:
        try {
            getGradeTelefones();
        } catch (Exception e) {
             JOptionPane.showMessageDialog(null, "Erro ao carregar grade!\n"+e, "ATENÇÃO", JOptionPane.ERROR_MESSAGE); 
        }
    }//GEN-LAST:event_atualizaGradeTelefonejButtonActionPerformed

    private void cadastraEnderecoEletronicojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastraEnderecoEletronicojButtonActionPerformed
        // TODO add your handling code here:
        jFEnderecosEletronicos oFormEnderecosEletronicos = new jFEnderecosEletronicos();
        
        oFormEnderecosEletronicos.recebe_codigo_pessoa = codigo_pessoa;
        
        oFormEnderecosEletronicos.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        oFormEnderecosEletronicos.setLocationRelativeTo(null);
        oFormEnderecosEletronicos.pack();
        oFormEnderecosEletronicos.setModal(true);
        oFormEnderecosEletronicos.setVisible(true);
        
        try {
            getGradeEnderecosEletronicos();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar grade!\n"+e, "ATENÇÃO", JOptionPane.ERROR_MESSAGE); 
        }
    }//GEN-LAST:event_cadastraEnderecoEletronicojButtonActionPerformed

    private void atualizaGradeEderecoEletronicojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizaGradeEderecoEletronicojButtonActionPerformed
        // TODO add your handling code here:
        try {
            getGradeEnderecosEletronicos();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar grade!\n"+e, "ATENÇÃO", JOptionPane.ERROR_MESSAGE); 
        }
    }//GEN-LAST:event_atualizaGradeEderecoEletronicojButtonActionPerformed

    private void cargosjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargosjButtonActionPerformed
        // TODO add your handling code here:
        jFCargos oCargos = new jFCargos();
        
        oCargos.recebe_codigo_pessoa = codigo_pessoa;
        
        oCargos.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        oCargos.setLocationRelativeTo(null);
        oCargos.pack();
        oCargos.setModal(true);
        oCargos.setVisible(true);
    }//GEN-LAST:event_cargosjButtonActionPerformed

    private void subsetoresjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subsetoresjButtonActionPerformed
        // TODO add your handling code here:
        jFFuncionarios oFormFuncionarios = new jFFuncionarios();

        oFormFuncionarios.recebe_codigo_pessoa = codigo_pessoa;
        oFormFuncionarios.nome_pessoa = click_nome_pessoa;
        
        oFormFuncionarios.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        oFormFuncionarios.setLocationRelativeTo(null);
        oFormFuncionarios.pack();
        oFormFuncionarios.setModal(true);
        oFormFuncionarios.setVisible(true);
    }//GEN-LAST:event_subsetoresjButtonActionPerformed

    private void usuariosjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usuariosjButtonActionPerformed
        // TODO add your handling code here:
        jFUsuarios oFormUsuarios = new jFUsuarios();
        
        oFormUsuarios.recebe_codigo_pessoa = codigo_pessoa;
        oFormUsuarios.nome_pessoa = click_nome_pessoa;
        oFormUsuarios.login = click_login;
        
        oFormUsuarios.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        oFormUsuarios.setLocationRelativeTo(null);
        oFormUsuarios.pack();
        oFormUsuarios.setModal(true);
        oFormUsuarios.setVisible(true);
    }//GEN-LAST:event_usuariosjButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jFPessoas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jFPessoas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jFPessoas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jFPessoas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new jFPessoas().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton alterarjButton;
    private javax.swing.JButton atualizaGradeEderecoEletronicojButton;
    private javax.swing.JButton atualizaGradeTelefonejButton;
    private javax.swing.JButton buscarjButton;
    private javax.swing.JButton cadastraEnderecoEletronicojButton;
    private javax.swing.JButton cadastraRamal_telefonejButton;
    private javax.swing.JButton cargosjButton;
    private javax.swing.JFormattedTextField datacadastrojFormattedTextField;
    private javax.swing.JButton editarjButton;
    private javax.swing.JButton excluirjButton;
    private javax.swing.JTable gradeEnderecoEletronicojTable;
    private javax.swing.JTable gradePessoasjTable;
    private javax.swing.JTable gradeTelefonejTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JButton limparjButton;
    private javax.swing.JTextField loginjTextField;
    private javax.swing.JTextField nomePessoajTextField;
    private javax.swing.JButton novojButton;
    private javax.swing.JTextArea observacaojTextArea;
    private javax.swing.JButton sairjButton;
    private javax.swing.JButton salvarMaisjButton;
    private javax.swing.JButton salvarjButton;
    private javax.swing.JComboBox statusjComboBox;
    private javax.swing.JButton subsetoresjButton;
    private javax.swing.JComboBox tipoPessoajComboBox;
    private javax.swing.JButton usuariosjButton;
    // End of variables declaration//GEN-END:variables
}
