/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package jcadastropendentes;

import Classes.*;
import java.awt.Color;
import java.awt.HeadlessException;
import java.io.IOException;
import java.net.URL;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author lcbenfic
 */
public class jFControlesDiarios extends javax.swing.JFrame {

    /**
     * Creates new form jFControlesDiarios
     */
    public jFControlesDiarios() {
        initComponents();
        
        this.setIconImage(new ImageIcon(getClass().getResource("/resources/radio-tower-32.png")).getImage()); 
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        buscarjButton = new javax.swing.JButton();
        novojButton = new javax.swing.JButton();
        editarjButton = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        salvarjButton = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        alterarjButton = new javax.swing.JButton();
        excluirjButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        limparjButton = new javax.swing.JButton();
        relatoriojButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        sairjButton = new javax.swing.JButton();
        ativaRegionaljButton = new javax.swing.JButton();
        pegaCodigoRegionaljButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        datajFormattedTextField = new javax.swing.JFormattedTextField();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        credenciadojComboBox = new javax.swing.JComboBox();
        atualizaCredenciadojButton = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        entradaDiariajTextField = new javax.swing.JTextField();
        canceladajTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        devolvidajTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        executadajTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        finalizadajTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        vencidajTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        reagendadajTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        totalGeraljTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        atualizaCalculosjButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        gradeControleDiariojTable = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        gradeTotaldaSemanajTable = new javax.swing.JTable();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        gradeListasjTable = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        dataInicialjFormattedTextField = new javax.swing.JFormattedTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        dataFinaljFormattedTextField = new javax.swing.JFormattedTextField();
        statusjComboBox = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        jToolBar2 = new javax.swing.JToolBar();
        buscarListajButton = new javax.swing.JButton();
        novaListajButton = new javax.swing.JButton();
        editarListajButton = new javax.swing.JButton();
        salvarListajButton = new javax.swing.JButton();
        alterarListajButton = new javax.swing.JButton();
        excluirListajButton = new javax.swing.JButton();
        abrirListaFechadajButton = new javax.swing.JButton();
        ListaFechadajPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        gradeListasFechadasjTable = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        datainicial2jFormattedTextField = new javax.swing.JFormattedTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        dataFinal2jFormattedTextField = new javax.swing.JFormattedTextField();
        status2jComboBox = new javax.swing.JComboBox();
        jLabel19 = new javax.swing.JLabel();
        alterarStatusjButton = new javax.swing.JButton();
        atualizaGradefechadajButton = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        totalListaAbertajLabel = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        totalListafechadajLabel = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        totalOfensoresjLabel = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        totalEntradaDiariajLabel = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        totalOSCanceladajLabel = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        totalOSDevolvidajLabel = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        totalOSExecutadajLabel = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        totalOSFinalizadajLabel = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        totalOSVencidajLabel = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        totalReagendadajLabel = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        jLabel31 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        buscarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/buscar.png"))); // NOI18N
        buscarjButton.setText("Buscar");
        buscarjButton.setFocusable(false);
        buscarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buscarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buscarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(buscarjButton);

        novojButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/new2.png"))); // NOI18N
        novojButton.setText("Novo");
        novojButton.setFocusable(false);
        novojButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        novojButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        novojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novojButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(novojButton);

        editarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/edit.png"))); // NOI18N
        editarjButton.setText("Editar");
        editarjButton.setFocusable(false);
        editarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        editarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        editarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(editarjButton);
        jToolBar1.add(jSeparator4);

        salvarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/save.png"))); // NOI18N
        salvarjButton.setText("Salvar");
        salvarjButton.setFocusable(false);
        salvarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salvarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        salvarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(salvarjButton);
        jToolBar1.add(jSeparator3);

        alterarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/save2.png"))); // NOI18N
        alterarjButton.setText("Alterar");
        alterarjButton.setFocusable(false);
        alterarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        alterarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        alterarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(alterarjButton);

        excluirjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/delete.png"))); // NOI18N
        excluirjButton.setText("Excluir");
        excluirjButton.setFocusable(false);
        excluirjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        excluirjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        excluirjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(excluirjButton);
        jToolBar1.add(jSeparator2);

        limparjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/clear.png"))); // NOI18N
        limparjButton.setText("Limpar");
        limparjButton.setFocusable(false);
        limparjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        limparjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        limparjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(limparjButton);

        relatoriojButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/print.png"))); // NOI18N
        relatoriojButton.setText("Relatório");
        relatoriojButton.setFocusable(false);
        relatoriojButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        relatoriojButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        relatoriojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                relatoriojButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(relatoriojButton);
        jToolBar1.add(jSeparator1);

        sairjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/exit.png"))); // NOI18N
        sairjButton.setText("Sair");
        sairjButton.setFocusable(false);
        sairjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sairjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        sairjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(sairjButton);

        ativaRegionaljButton.setContentAreaFilled(false);
        ativaRegionaljButton.setFocusable(false);
        ativaRegionaljButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ativaRegionaljButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ativaRegionaljButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ativaRegionaljButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(ativaRegionaljButton);

        pegaCodigoRegionaljButton.setContentAreaFilled(false);
        pegaCodigoRegionaljButton.setFocusable(false);
        pegaCodigoRegionaljButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pegaCodigoRegionaljButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        pegaCodigoRegionaljButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pegaCodigoRegionaljButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(pegaCodigoRegionaljButton);

        jPanel2.setBackground(new java.awt.Color(153, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Data");

        try {
            datajFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        datajFormattedTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                datajFormattedTextFieldMouseClicked(evt);
            }
        });

        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel2.setText("Credenciado");

        credenciadojComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                credenciadojComboBoxActionPerformed(evt);
            }
        });

        atualizaCredenciadojButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/refresh.png"))); // NOI18N
        atualizaCredenciadojButton.setContentAreaFilled(false);
        atualizaCredenciadojButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        atualizaCredenciadojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizaCredenciadojButtonActionPerformed(evt);
            }
        });

        jSeparator6.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/aderencia_meta.png"))); // NOI18N
        jButton1.setText("Aderência a meta");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(datajFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(credenciadojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(atualizaCredenciadojButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator5, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator6)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(datajFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(credenciadojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(atualizaCredenciadojButton))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        entradaDiariajTextField.setEditable(false);
        entradaDiariajTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        entradaDiariajTextField.setFocusable(false);

        canceladajTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        canceladajTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                canceladajTextFieldMouseClicked(evt);
            }
        });
        canceladajTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                canceladajTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                canceladajTextFieldFocusLost(evt);
            }
        });
        canceladajTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                canceladajTextFieldKeyTyped(evt);
            }
        });

        jLabel3.setText("Entrada diária");

        jLabel4.setText("Cancelada");

        devolvidajTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        devolvidajTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                devolvidajTextFieldMouseClicked(evt);
            }
        });
        devolvidajTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                devolvidajTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                devolvidajTextFieldFocusLost(evt);
            }
        });
        devolvidajTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                devolvidajTextFieldKeyTyped(evt);
            }
        });

        jLabel5.setText("Devolvida");

        executadajTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        executadajTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                executadajTextFieldMouseClicked(evt);
            }
        });
        executadajTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                executadajTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                executadajTextFieldFocusLost(evt);
            }
        });
        executadajTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                executadajTextFieldKeyTyped(evt);
            }
        });

        jLabel6.setText("Executada");

        finalizadajTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        finalizadajTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                finalizadajTextFieldMouseClicked(evt);
            }
        });
        finalizadajTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                finalizadajTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                finalizadajTextFieldFocusLost(evt);
            }
        });
        finalizadajTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                finalizadajTextFieldKeyTyped(evt);
            }
        });

        jLabel7.setText("Finalizada");

        vencidajTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        vencidajTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vencidajTextFieldMouseClicked(evt);
            }
        });
        vencidajTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                vencidajTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                vencidajTextFieldFocusLost(evt);
            }
        });
        vencidajTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                vencidajTextFieldKeyTyped(evt);
            }
        });

        jLabel8.setText("Vencida");

        reagendadajTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        reagendadajTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reagendadajTextFieldMouseClicked(evt);
            }
        });
        reagendadajTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                reagendadajTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                reagendadajTextFieldFocusLost(evt);
            }
        });
        reagendadajTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                reagendadajTextFieldKeyTyped(evt);
            }
        });

        jLabel9.setText("Reagendada");

        totalGeraljTextField.setEditable(false);
        totalGeraljTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        totalGeraljTextField.setFocusable(false);

        jLabel10.setText("Total geral");

        atualizaCalculosjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/refresh.png"))); // NOI18N
        atualizaCalculosjButton.setContentAreaFilled(false);
        atualizaCalculosjButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        atualizaCalculosjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizaCalculosjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(entradaDiariajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(12, 12, 12)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(canceladajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(devolvidajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(executadajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(finalizadajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(vencidajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(reagendadajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(totalGeraljTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(atualizaCalculosjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(187, Short.MAX_VALUE))
        );

        jPanel7Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {canceladajTextField, devolvidajTextField, entradaDiariajTextField, executadajTextField, finalizadajTextField, reagendadajTextField, totalGeraljTextField, vencidajTextField});

        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(atualizaCalculosjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(entradaDiariajTextField)
                    .addComponent(canceladajTextField)
                    .addComponent(devolvidajTextField)
                    .addComponent(executadajTextField)
                    .addComponent(finalizadajTextField)
                    .addComponent(vencidajTextField)
                    .addComponent(reagendadajTextField)
                    .addComponent(totalGeraljTextField))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 17, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Controle diário", jPanel3);

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        gradeControleDiariojTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id#", "Data", "Entrada diária", "Canceladas", "Devolvidas", "Executadas", "Finalizadas", "vencidas", "Reagendadas", "Total geral"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gradeControleDiariojTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gradeControleDiariojTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(gradeControleDiariojTable);
        gradeControleDiariojTable.getColumnModel().getColumn(0).setResizable(false);
        gradeControleDiariojTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        gradeControleDiariojTable.getColumnModel().getColumn(1).setResizable(false);
        gradeControleDiariojTable.getColumnModel().getColumn(1).setPreferredWidth(40);
        gradeControleDiariojTable.getColumnModel().getColumn(2).setResizable(false);
        gradeControleDiariojTable.getColumnModel().getColumn(2).setPreferredWidth(60);
        gradeControleDiariojTable.getColumnModel().getColumn(3).setResizable(false);
        gradeControleDiariojTable.getColumnModel().getColumn(3).setPreferredWidth(60);
        gradeControleDiariojTable.getColumnModel().getColumn(4).setResizable(false);
        gradeControleDiariojTable.getColumnModel().getColumn(4).setPreferredWidth(60);
        gradeControleDiariojTable.getColumnModel().getColumn(5).setResizable(false);
        gradeControleDiariojTable.getColumnModel().getColumn(5).setPreferredWidth(60);
        gradeControleDiariojTable.getColumnModel().getColumn(6).setResizable(false);
        gradeControleDiariojTable.getColumnModel().getColumn(6).setPreferredWidth(60);
        gradeControleDiariojTable.getColumnModel().getColumn(7).setResizable(false);
        gradeControleDiariojTable.getColumnModel().getColumn(7).setPreferredWidth(60);
        gradeControleDiariojTable.getColumnModel().getColumn(8).setResizable(false);
        gradeControleDiariojTable.getColumnModel().getColumn(8).setPreferredWidth(60);
        gradeControleDiariojTable.getColumnModel().getColumn(9).setResizable(false);
        gradeControleDiariojTable.getColumnModel().getColumn(9).setPreferredWidth(60);

        gradeTotaldaSemanajTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Total geral da semana", "Tot. Entrada diária", "Tot. Cancelada", "Tot. Devolvida", "Tot. Executada", "Tot. Finalizada", "Tot. Vencida", "Tot. Reagendada", "Tot. geral"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gradeTotaldaSemanajTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(gradeTotaldaSemanajTable);
        gradeTotaldaSemanajTable.getColumnModel().getColumn(0).setResizable(false);
        gradeTotaldaSemanajTable.getColumnModel().getColumn(0).setPreferredWidth(165);
        gradeTotaldaSemanajTable.getColumnModel().getColumn(1).setResizable(false);
        gradeTotaldaSemanajTable.getColumnModel().getColumn(1).setPreferredWidth(60);
        gradeTotaldaSemanajTable.getColumnModel().getColumn(2).setResizable(false);
        gradeTotaldaSemanajTable.getColumnModel().getColumn(2).setPreferredWidth(60);
        gradeTotaldaSemanajTable.getColumnModel().getColumn(3).setResizable(false);
        gradeTotaldaSemanajTable.getColumnModel().getColumn(3).setPreferredWidth(60);
        gradeTotaldaSemanajTable.getColumnModel().getColumn(4).setResizable(false);
        gradeTotaldaSemanajTable.getColumnModel().getColumn(4).setPreferredWidth(60);
        gradeTotaldaSemanajTable.getColumnModel().getColumn(5).setResizable(false);
        gradeTotaldaSemanajTable.getColumnModel().getColumn(5).setPreferredWidth(60);
        gradeTotaldaSemanajTable.getColumnModel().getColumn(6).setResizable(false);
        gradeTotaldaSemanajTable.getColumnModel().getColumn(6).setPreferredWidth(60);
        gradeTotaldaSemanajTable.getColumnModel().getColumn(7).setResizable(false);
        gradeTotaldaSemanajTable.getColumnModel().getColumn(7).setPreferredWidth(60);
        gradeTotaldaSemanajTable.getColumnModel().getColumn(8).setResizable(false);
        gradeTotaldaSemanajTable.getColumnModel().getColumn(8).setPreferredWidth(60);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane4))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        gradeListasjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id#", "Nome da Lista"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gradeListasjTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gradeListasjTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(gradeListasjTable);
        gradeListasjTable.getColumnModel().getColumn(0).setResizable(false);
        gradeListasjTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        gradeListasjTable.getColumnModel().getColumn(1).setResizable(false);
        gradeListasjTable.getColumnModel().getColumn(1).setPreferredWidth(200);

        jPanel9.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel11.setText("Data inicial");

        try {
            dataInicialjFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        dataInicialjFormattedTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataInicialjFormattedTextFieldActionPerformed(evt);
            }
        });

        jLabel12.setText("até");

        jLabel13.setText("Data Final");

        jLabel14.setText("De");

        try {
            dataFinaljFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        dataFinaljFormattedTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataFinaljFormattedTextFieldActionPerformed(evt);
            }
        });

        statusjComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SELECIONE", "ABERTA", "FECHADA" }));

        jLabel15.setText("Status");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(dataInicialjFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12))
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dataFinaljFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(statusjComboBox, 0, 117, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel13)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dataInicialjFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel14)
                    .addComponent(dataFinaljFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statusjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jToolBar2.setFloatable(false);
        jToolBar2.setRollover(true);

        buscarListajButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/buscar.png"))); // NOI18N
        buscarListajButton.setText("Buscar");
        buscarListajButton.setFocusable(false);
        buscarListajButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buscarListajButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buscarListajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarListajButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(buscarListajButton);

        novaListajButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/new2.png"))); // NOI18N
        novaListajButton.setText("Novo");
        novaListajButton.setFocusable(false);
        novaListajButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        novaListajButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        novaListajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novaListajButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(novaListajButton);

        editarListajButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/edit.png"))); // NOI18N
        editarListajButton.setText("Editar");
        editarListajButton.setFocusable(false);
        editarListajButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        editarListajButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        editarListajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarListajButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(editarListajButton);

        salvarListajButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/save.png"))); // NOI18N
        salvarListajButton.setText("Salvar");
        salvarListajButton.setFocusable(false);
        salvarListajButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salvarListajButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        salvarListajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarListajButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(salvarListajButton);

        alterarListajButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/save2.png"))); // NOI18N
        alterarListajButton.setText("Alterar");
        alterarListajButton.setFocusable(false);
        alterarListajButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        alterarListajButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        alterarListajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterarListajButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(alterarListajButton);

        excluirListajButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/delete.png"))); // NOI18N
        excluirListajButton.setText("Excluir");
        excluirListajButton.setFocusable(false);
        excluirListajButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        excluirListajButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        excluirListajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirListajButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(excluirListajButton);

        abrirListaFechadajButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/abrir.png"))); // NOI18N
        abrirListaFechadajButton.setText("Abrir listas fechadas");
        abrirListaFechadajButton.setFocusable(false);
        abrirListaFechadajButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        abrirListaFechadajButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        abrirListaFechadajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirListaFechadajButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(abrirListaFechadajButton);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jToolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(107, Short.MAX_VALUE))
        );

        ListaFechadajPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        gradeListasFechadasjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id#", "Listas fechadas"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gradeListasFechadasjTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gradeListasFechadasjTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(gradeListasFechadasjTable);
        gradeListasFechadasjTable.getColumnModel().getColumn(0).setResizable(false);
        gradeListasFechadasjTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        gradeListasFechadasjTable.getColumnModel().getColumn(1).setResizable(false);
        gradeListasFechadasjTable.getColumnModel().getColumn(1).setPreferredWidth(200);

        jPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel16.setText("Data inicial");

        try {
            datainicial2jFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel17.setText("De");

        jLabel18.setText("Até");

        try {
            dataFinal2jFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        status2jComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "FECHADA", "ABERTA" }));

        jLabel19.setText("Status");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(datainicial2jFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dataFinal2jFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(status2jComboBox, 0, 114, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(datainicial2jFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18)
                    .addComponent(dataFinal2jFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(status2jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        alterarStatusjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/save2.png"))); // NOI18N
        alterarStatusjButton.setText("Alterar status");
        alterarStatusjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterarStatusjButtonActionPerformed(evt);
            }
        });

        atualizaGradefechadajButton.setText("Atualizar grade");
        atualizaGradefechadajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizaGradefechadajButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ListaFechadajPanelLayout = new javax.swing.GroupLayout(ListaFechadajPanel);
        ListaFechadajPanel.setLayout(ListaFechadajPanelLayout);
        ListaFechadajPanelLayout.setHorizontalGroup(
            ListaFechadajPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ListaFechadajPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ListaFechadajPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ListaFechadajPanelLayout.createSequentialGroup()
                        .addComponent(atualizaGradefechadajButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(alterarStatusjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(56, 56, 56))
        );
        ListaFechadajPanelLayout.setVerticalGroup(
            ListaFechadajPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ListaFechadajPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ListaFechadajPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(alterarStatusjButton)
                    .addComponent(atualizaGradefechadajButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel20.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("INFORMAÇÕES");

        jLabel21.setText("Total de listas abertas:");

        jLabel22.setText("Total de listas fechadas:");

        jLabel23.setText("Total de credenciados:");

        jPanel12.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel24.setText("Total entrada diária:");

        jLabel25.setText("Total O.S's canceladas:");

        jLabel26.setText("Total O.S's devolvidas:");

        jLabel27.setText("Total O.S's executadas:");

        jLabel28.setText("Total O.S's finalizadas:");

        jLabel29.setText("Total O.S's vencida:");

        jLabel30.setText("Total O.S's reagendada:");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel30, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                    .addComponent(jLabel29, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(totalEntradaDiariajLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 12, Short.MAX_VALUE)
                    .addComponent(totalOSCanceladajLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(totalOSDevolvidajLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(totalOSExecutadajLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(totalOSFinalizadajLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(totalOSVencidajLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(totalReagendadajLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(47, 47, 47))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(totalEntradaDiariajLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(totalOSCanceladajLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(totalOSDevolvidajLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(totalOSExecutadajLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(totalOSFinalizadajLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(totalOSVencidajLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(totalReagendadajLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel31.setText("Informações da semana");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator7)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(totalListaAbertajLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(totalListafechadajLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(totalOfensoresjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)))
                            .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel31))
                        .addGap(0, 66, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(totalListaAbertajLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(totalListafechadajLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(totalOfensoresjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel31)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ListaFechadajPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ListaFechadajPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane2.addTab("Listas", jPanel6);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addComponent(jTabbedPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel5.setBackground(new java.awt.Color(153, 204, 255));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 9, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    ClassConecta conecta = new ClassConecta();
    
    //variaveis usados para calcular os dados
    Integer entrada_diaria = 0;
    Integer cancelada = 0;
    Integer devolvida = 0;
    Integer executada = 0;
    Integer finalizada = 0;
    Integer vencida = 0;
    Integer reagendada = 0;
    Integer total_geral = 0;
    

    //variaveis usados para guardar as informações noquando um campo estiver com foco
    String guarda_cancelada;
    String guarda_devolvida;
    String guarda_executada;
    String guarda_finalizada;
    String guarda_vencida;
    String guarda_reagendada;
    
    
    //variaveis usados para guardar os totais para gerar o relatório
    Integer total_cancelada = 0;
    Integer total_devolvida = 0;
    Integer total_executada = 0;
    Integer total_finalizada = 0;
    Integer total_vencida = 0;
    Integer total_reagendada = 0;
    Integer total_geral_relatorio = 0;
    Integer atendimento_realizado = 0;
    Integer atendimento_nao_realizado = 0;
    Integer entrada_diaria_relatorio = 0;
    
    
    //variaveis para verificar regional / usuario logado e nivel de acesso
    String recebe_usuario_logado;
    int operador_regional = -1;
    String recebe_nivel_acesso;
    
    String nome_regional = null; // usado para pegar a regional na funçao switch
    int codigo_regional = 0;
    
    
    int codigo_click_lista = 0;// usado para pegar o codigo da grade lista quando clicar com o mouse
    int codigo_click_listaFechada;
    
    int codigo_click_controle_diario;
    
    ComboItem combo_credenciado;// usado para enviar o codigo do credenciado e associar o controle diário a um credenciado
    
    
    
    
    
    //**************************************** GRADE CONTROLES DIÁRIOS **********************************************************************************
    
    public void getGradeControlesDiarios() throws ParseException{
       //Consultar Pessoas
        ControlesDiarios oControlesDiarios = new ControlesDiarios();

        ResultSet resultSet = null;

        String[] colunasTabela = new String[]{"Id#", "Data", "Entrada Diária", "Canceladas", "Devolvidas", "Executadas",
                                              "Finalizadas", "Vencidas", "Reagendadas", "Total Geral"};
        DefaultTableModel modeloTabela = new DefaultTableModel(null, colunasTabela) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        gradeControleDiariojTable.setModel(modeloTabela);
        gradeControleDiariojTable.getColumnModel().getColumn(0).setPreferredWidth(50);
        gradeControleDiariojTable.getColumnModel().getColumn(1).setPreferredWidth(40);
        gradeControleDiariojTable.getColumnModel().getColumn(2).setPreferredWidth(60);
        gradeControleDiariojTable.getColumnModel().getColumn(3).setPreferredWidth(60);
        gradeControleDiariojTable.getColumnModel().getColumn(4).setPreferredWidth(60);
        gradeControleDiariojTable.getColumnModel().getColumn(5).setPreferredWidth(60);
        gradeControleDiariojTable.getColumnModel().getColumn(6).setPreferredWidth(60);
        gradeControleDiariojTable.getColumnModel().getColumn(7).setPreferredWidth(60);
        gradeControleDiariojTable.getColumnModel().getColumn(8).setPreferredWidth(60);
        gradeControleDiariojTable.getColumnModel().getColumn(9).setPreferredWidth(60);
       

try {
    
            combo_credenciado = (ComboItem)credenciadojComboBox.getSelectedItem();
            oControlesDiarios.setCodigo_pessoa_campo_credenciado(combo_credenciado.getId());
            oControlesDiarios.setCodigo_lista_relatorio(codigo_click_lista);
            oControlesDiarios.setCodigo_regional(codigo_regional);
            resultSet = oControlesDiarios.getConsultar(conecta);
            if (resultSet.getRow() == 1){
             resultSet.first();
            }


        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {

            while (resultSet.next()) {
                
                Date dataPagamento = resultSet.getDate("DATA");
                String dataLanc = null;
                SimpleDateFormat formatoDataLanc = new SimpleDateFormat("dd/MM/yyyy");
                dataLanc = formatoDataLanc.format(dataPagamento);
                
                 
                int canceladas_tabela = resultSet.getInt("CANCELADAS");
                int devolvidas_tabela = resultSet.getInt("DEVOLVIDAS");
                int executada_tabela = resultSet.getInt("EXECUTADAS");
                int finalizadas_tabela = resultSet.getInt("FINALIZADAS");
                int vencidas_tabela = resultSet.getInt("VENCIDAS");
                int total_geral_tabela;
 
                int entrada_diaria_tabela = canceladas_tabela + devolvidas_tabela + executada_tabela +
                    finalizadas_tabela;
                
                total_geral_tabela = entrada_diaria_tabela;
                

                modeloTabela.addRow(new String[]{
                    
                    Funcoes.getCodigoFormat(resultSet.getInt("CODIGO_CONTROLE_DIARIO")),
                    dataLanc,
                    String.valueOf(entrada_diaria_tabela),
                    String.valueOf(canceladas_tabela),
                    String.valueOf(devolvidas_tabela),
                    String.valueOf(executada_tabela),
                    String.valueOf(finalizadas_tabela),
                    String.valueOf(vencidas_tabela),
                    resultSet.getString(String.valueOf("REAGENDADAS")),// reagendadas não entra na contagem de total geral e entrada diária
                    String.valueOf(total_geral_tabela)  
                });

            
                
            }

        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }

           }
    
// ************************************************* FIM DA GRADE LISTAS FECHADAS *******************************************************************
 
    public void getFieldListaControleDiario(int codigo_click_controle_diario) throws ParseException{
        //Buscar contato
        ControlesDiarios oControlesDiarios = new ControlesDiarios();
        ResultSet rs;
        oControlesDiarios.setCodigo_controle_diario(codigo_click_controle_diario);

        try {
            oControlesDiarios.setCodigo_regional(codigo_regional);
            rs = oControlesDiarios.getConsultar(conecta);
            rs.next();

            //Pegar campos
            
               
            
            datajFormattedTextField.setValue(Funcoes.getDataFormat(rs.getDate("DATA")));
            canceladajTextField.setText(rs.getString("CANCELADAS"));
            devolvidajTextField.setText(rs.getString("DEVOLVIDAS"));
            executadajTextField.setText(rs.getString("EXECUTADAS"));
            finalizadajTextField.setText(rs.getString("FINALIZADAS"));
            vencidajTextField.setText(rs.getString("VENCIDAS"));
            reagendadajTextField.setText(rs.getString("REAGENDADAS"));
            
            
            atualizaCalculosjButtonActionPerformed(null);
            
        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Erro ao preencher os campos\n"+ex, "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
        }
    }
 
//**************************************** GRADE LISTAS **********************************************************************************
    
    public void getGradeListas() throws ParseException{
       //Consultar Pessoas
        ListasRelatorios oListasRelatorios = new ListasRelatorios();

        ResultSet resultSet = null;

        String[] colunasTabela = new String[]{"Id#", "Nome da lista"};
        DefaultTableModel modeloTabela = new DefaultTableModel(null, colunasTabela) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        gradeListasjTable.setModel(modeloTabela);
        gradeListasjTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        gradeListasjTable.getColumnModel().getColumn(1).setPreferredWidth(200);

try {
            oListasRelatorios.setStatus("ABERTA");
            oListasRelatorios.setCodigo_regional(codigo_regional);
            resultSet = oListasRelatorios.getConsultar(conecta);
            if (resultSet.getRow() == 1){
             resultSet.first();
            }


        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {

            while (resultSet.next()) {

                modeloTabela.addRow(new String[]{
                    Funcoes.getCodigoFormat(resultSet.getInt("CODIGO_LISTA_RELATORIO")),
                    "LISTA DE: " + resultSet.getString("DATA_INICIAL")+ " "+ "até: " + resultSet.getString("DATA_FINAL")
                });

            }

        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }

           }
    
// ************************************************* FIM DA GRADE LISTAS *******************************************************************
    
    
    public void getFieldLista(int codigo_click_lista) throws ParseException{
        //Buscar contato
        ListasRelatorios oListasRelatorios = new ListasRelatorios();
        ResultSet rs = null;
        oListasRelatorios.setCodigo_lista_relatorio(codigo_click_lista);

        try {
            oListasRelatorios.setCodigo_regional(codigo_regional);
            rs = oListasRelatorios.getConsultar(conecta);
            rs.next();

            //Pegar campos
            dataInicialjFormattedTextField.setText(rs.getString("DATA_INICIAL"));
            dataFinaljFormattedTextField.setText(rs.getString("DATA_FINAL"));
            statusjComboBox.setSelectedItem(rs.getString("STATUS"));
            
        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Erro ao preencher os campos\n"+ex, "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    
    
    //**************************************** GRADE LISTAS FECHADAS **********************************************************************************
    
    public void getGradeListasFechadas() throws ParseException{
       //Consultar Pessoas
        ListasRelatorios oListasRelatorios = new ListasRelatorios();

        ResultSet resultSet = null;

        String[] colunasTabela = new String[]{"Id#", "Nome da lista"};
        DefaultTableModel modeloTabela = new DefaultTableModel(null, colunasTabela) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        gradeListasFechadasjTable.setModel(modeloTabela);
        gradeListasFechadasjTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        gradeListasFechadasjTable.getColumnModel().getColumn(1).setPreferredWidth(200);

try {
            oListasRelatorios.setStatus("FECHADA");
            oListasRelatorios.setCodigo_regional(codigo_regional);
            resultSet = oListasRelatorios.getConsultar(conecta);
            if (resultSet.getRow() == 1){
             resultSet.first();
            }


        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {

            while (resultSet.next()) {

                modeloTabela.addRow(new String[]{
                    Funcoes.getCodigoFormat(resultSet.getInt("CODIGO_LISTA_RELATORIO")),
                    "LISTA DE: " + resultSet.getString("DATA_INICIAL")+ " "+ "até: " + resultSet.getString("DATA_FINAL") + " closed"
                });

            }

        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }

           }
    
// ************************************************* FIM DA GRADE LISTAS FECHADAS *******************************************************************
    
    
    public void getFieldListaFechada(int codigo_click_listaFechada) throws ParseException{
        //Buscar contato
        ListasRelatorios oListasRelatorios = new ListasRelatorios();
        ResultSet rs = null;
        oListasRelatorios.setCodigo_lista_relatorio(codigo_click_listaFechada);

        try {
            oListasRelatorios.setCodigo_regional(codigo_regional);
            rs = oListasRelatorios.getConsultar(conecta);
            rs.next();

            //Pegar campos
            datainicial2jFormattedTextField.setText(rs.getString("DATA_INICIAL"));
            dataFinal2jFormattedTextField.setText(rs.getString("DATA_FINAL"));
            status2jComboBox.setSelectedItem(rs.getString("STATUS"));
            
        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Erro ao preencher os campos\n"+ex, "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    
    
    //**************************************** GRADE TOTAL GERAL **********************************************************************************
    
    public void getGradeTotalSemana() throws ParseException{
       //Consultar Pessoas
        ControlesDiarios oControlesDiarios = new ControlesDiarios();

        ResultSet resultSet = null;

        String[] colunasTabela = new String[]{"", "Entrada Diária", "Canceladas", "Devolvidas", "Executadas",
                                              "Finalizadas", "Vencidas", "Reagendadas", "Total Geral"};
        DefaultTableModel modeloTabela = new DefaultTableModel(null, colunasTabela) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        gradeTotaldaSemanajTable.setModel(modeloTabela);
        gradeTotaldaSemanajTable.getColumnModel().getColumn(0).setPreferredWidth(165);
        gradeTotaldaSemanajTable.getColumnModel().getColumn(1).setPreferredWidth(40);
        gradeTotaldaSemanajTable.getColumnModel().getColumn(2).setPreferredWidth(60);
        gradeTotaldaSemanajTable.getColumnModel().getColumn(3).setPreferredWidth(60);
        gradeTotaldaSemanajTable.getColumnModel().getColumn(4).setPreferredWidth(60);
        gradeTotaldaSemanajTable.getColumnModel().getColumn(5).setPreferredWidth(60);
        gradeTotaldaSemanajTable.getColumnModel().getColumn(6).setPreferredWidth(60);
        gradeTotaldaSemanajTable.getColumnModel().getColumn(7).setPreferredWidth(60);
        gradeTotaldaSemanajTable.getColumnModel().getColumn(8).setPreferredWidth(60);
       

try {
    
            combo_credenciado = (ComboItem)credenciadojComboBox.getSelectedItem();
            oControlesDiarios.setCodigo_pessoa_campo_credenciado(combo_credenciado.getId());
            oControlesDiarios.setCodigo_lista_relatorio(codigo_click_lista);
            oControlesDiarios.setCodigo_regional(codigo_regional);
            resultSet = oControlesDiarios.getConsultarTotalGeraldaSemana(conecta);
            if (resultSet.getRow() == 1){
             resultSet.first();
            }


        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {

            while (resultSet.next()) {
                
                 
                int canceladas_tabela = resultSet.getInt("TOTAL_CANCELADAS");
                int devolvidas_tabela = resultSet.getInt("TOTAL_DEVOLVIDA");
                int executada_tabela = resultSet.getInt("TOTAL_EXECUTADA");
                int finalizadas_tabela = resultSet.getInt("TOTAL_FINALIZADAS");
                int vencidas_tabela = resultSet.getInt("TOTAL_VENCIDA");
                int total_geral_tabela = resultSet.getInt("TOTAL_GERAL");
                int reagendadas_tabela = resultSet.getInt("TOTAL_REAGENDADAS");
 
                int entrada_diaria_tabela = canceladas_tabela + devolvidas_tabela + executada_tabela +
                    finalizadas_tabela;
                

                modeloTabela.addRow(new String[]{
//                    Funcoes.getCodigoFormat(resultSet.getInt("CODIGO_CONTROLE_DIARIO")),
                    "Total geral da semana",
                    String.valueOf(entrada_diaria_tabela),
                    String.valueOf(canceladas_tabela),
                    String.valueOf(devolvidas_tabela),
                    String.valueOf(executada_tabela),
                    String.valueOf(finalizadas_tabela),
                    String.valueOf(vencidas_tabela),// reagendadas não entra na contagem de total geral e entrada diária
                    String.valueOf(reagendadas_tabela),// reagendadas não entra na contagem de total geral e entrada diária
                    String.valueOf(total_geral_tabela)  
                });
                
                //ATUALIZA LISTA DE INFORMAÇÕES DA SEMANA
                totalEntradaDiariajLabel.setText(String.valueOf(entrada_diaria_tabela));
                totalOSCanceladajLabel.setText(String.valueOf(canceladas_tabela));
                totalOSDevolvidajLabel.setText(String.valueOf(devolvidas_tabela));
                totalOSExecutadajLabel.setText(String.valueOf(executada_tabela));
                totalOSFinalizadajLabel.setText(String.valueOf(finalizadas_tabela));
                totalOSVencidajLabel.setText(String.valueOf(vencidas_tabela));
                totalReagendadajLabel.setText(String.valueOf(reagendadas_tabela));
                
            }

        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }

           }
    
// ************************************************* FIM DA GRADE TOTAL GERAL *******************************************************************
 
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        ListaFechadajPanel.setVisible(false);
        
        novojButton.setEnabled(false);
        editarjButton.setEnabled(false);
        salvarjButton.setEnabled(false);
        alterarjButton.setEnabled(false);
        excluirjButton.setEnabled(false);
        
        novaListajButton.setEnabled(true);
        editarListajButton.setEnabled(false);
        salvarListajButton.setEnabled(false);
        alterarListajButton.setEnabled(false);
        excluirListajButton.setEnabled(false);
        
        entradaDiariajTextField.setText("0");
        canceladajTextField.setText("0");
        devolvidajTextField.setText("0");
        executadajTextField.setText("0");
        finalizadajTextField.setText("0");
        vencidajTextField.setText("0");
        reagendadajTextField.setText("0");
        totalGeraljTextField.setText("0");
        
        ativaRegionaljButton.setVisible(false);
        pegaCodigoRegionaljButton.setVisible(false);
        
        if ("SUPERVISOR".equals(recebe_nivel_acesso)){
            excluirjButton.setVisible(true);
            
        }else{
            excluirjButton.setVisible(false);
            excluirListajButton.setVisible(false);
            abrirListaFechadajButton.setEnabled(false);
        }
        
        
        try {
            ClassConecta.getConectaContatosTorreDB();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao conectar no banco\n"+e, "Mensagem do sistema", JOptionPane.ERROR_MESSAGE);
        }
        ativaRegionaljButtonActionPerformed(null);
        pegaCodigoRegionaljButtonActionPerformed(null);
        
        try {
            datajFormattedTextField.setText(Funcoes.getNowBR());
        } catch (Exception e) {
        }
        
        atualizaCredenciadojButtonActionPerformed(null);
        buscarListajButtonActionPerformed(null);
        atualizaGradefechadajButtonActionPerformed(null);
        

         novojButton.setEnabled(false);
        
        
        System.out.println(codigo_regional);
    }//GEN-LAST:event_formWindowOpened

    private void atualizaCalculosjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizaCalculosjButtonActionPerformed
        // TODO add your handling code here:
        try {
            
        cancelada = Integer.parseInt(canceladajTextField.getText().trim());
        devolvida = Integer.parseInt(devolvidajTextField.getText().trim());
        executada = Integer.parseInt(executadajTextField.getText().trim());
        finalizada = Integer.parseInt(finalizadajTextField.getText().trim());
        vencida = Integer.parseInt(vencidajTextField.getText().trim());
        reagendada = Integer.parseInt(reagendadajTextField.getText().trim());
        
        total_geral = cancelada + devolvida + executada + finalizada;
        entrada_diaria = total_geral;
        
        totalGeraljTextField.setText(String.valueOf(total_geral));
        entradaDiariajTextField.setText(String.valueOf(entrada_diaria));
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Por favor, digitar apenas números\nRealize o cadastro novamente"+e, "mensagem do sistema", JOptionPane.ERROR_MESSAGE);
        }   
    }//GEN-LAST:event_atualizaCalculosjButtonActionPerformed

    private void canceladajTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canceladajTextFieldMouseClicked
        // TODO add your handling code here:
        canceladajTextField.setText("");
    }//GEN-LAST:event_canceladajTextFieldMouseClicked

    private void devolvidajTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_devolvidajTextFieldMouseClicked
        // TODO add your handling code here:
        devolvidajTextField.setText("");
    }//GEN-LAST:event_devolvidajTextFieldMouseClicked

    private void executadajTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_executadajTextFieldMouseClicked
        // TODO add your handling code here:
        executadajTextField.setText("");
    }//GEN-LAST:event_executadajTextFieldMouseClicked

    private void finalizadajTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_finalizadajTextFieldMouseClicked
        // TODO add your handling code here:
        finalizadajTextField.setText("");
    }//GEN-LAST:event_finalizadajTextFieldMouseClicked

    private void vencidajTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vencidajTextFieldMouseClicked
        // TODO add your handling code here:
        vencidajTextField.setText("");
    }//GEN-LAST:event_vencidajTextFieldMouseClicked

    private void reagendadajTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reagendadajTextFieldMouseClicked
        // TODO add your handling code here:
        reagendadajTextField.setText("");
    }//GEN-LAST:event_reagendadajTextFieldMouseClicked

    private void canceladajTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_canceladajTextFieldFocusLost
        // TODO add your handling code here:
        if(canceladajTextField.getText().isEmpty()){
            canceladajTextField.setText(guarda_cancelada);
            atualizaCalculosjButtonActionPerformed(null);
        }else{
            atualizaCalculosjButtonActionPerformed(null);
        }
        canceladajTextField.setBackground(Color.white);
    }//GEN-LAST:event_canceladajTextFieldFocusLost

    private void canceladajTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_canceladajTextFieldFocusGained
        // TODO add your handling code here:
        guarda_cancelada = canceladajTextField.getText().trim();
        canceladajTextField.setText("");
        canceladajTextField.setBackground(Color.lightGray);
    }//GEN-LAST:event_canceladajTextFieldFocusGained

    private void devolvidajTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_devolvidajTextFieldFocusGained
        // TODO add your handling code here:
        guarda_devolvida = devolvidajTextField.getText().trim();
        devolvidajTextField.setText("");
        devolvidajTextField.setBackground(Color.lightGray);
    }//GEN-LAST:event_devolvidajTextFieldFocusGained

    private void devolvidajTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_devolvidajTextFieldFocusLost
        // TODO add your handling code here:
        if(devolvidajTextField.getText().isEmpty()){
            devolvidajTextField.setText(guarda_devolvida);
            atualizaCalculosjButtonActionPerformed(null);
        }else{
            atualizaCalculosjButtonActionPerformed(null);
        }
        devolvidajTextField.setBackground(Color.white);
    }//GEN-LAST:event_devolvidajTextFieldFocusLost

    private void executadajTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_executadajTextFieldFocusGained
        // TODO add your handling code here:
        guarda_executada = executadajTextField.getText().trim();
        executadajTextField.setText("");
        executadajTextField.setBackground(Color.lightGray);
    }//GEN-LAST:event_executadajTextFieldFocusGained

    private void executadajTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_executadajTextFieldFocusLost
        // TODO add your handling code here:
        if(executadajTextField.getText().isEmpty()){
            executadajTextField.setText(guarda_executada);
            atualizaCalculosjButtonActionPerformed(null);
        }else{
            atualizaCalculosjButtonActionPerformed(null);
        }
        executadajTextField.setBackground(Color.white);
    }//GEN-LAST:event_executadajTextFieldFocusLost

    private void finalizadajTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_finalizadajTextFieldFocusGained
        // TODO add your handling code here:
        guarda_finalizada = finalizadajTextField.getText().trim();
        finalizadajTextField.setText("");
        finalizadajTextField.setBackground(Color.lightGray);
    }//GEN-LAST:event_finalizadajTextFieldFocusGained

    private void finalizadajTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_finalizadajTextFieldFocusLost
        // TODO add your handling code here:
        if(finalizadajTextField.getText().isEmpty()){
            finalizadajTextField.setText(guarda_finalizada);
            atualizaCalculosjButtonActionPerformed(null);
        }else{
            atualizaCalculosjButtonActionPerformed(null);
        }
        finalizadajTextField.setBackground(Color.white);
    }//GEN-LAST:event_finalizadajTextFieldFocusLost

    private void vencidajTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_vencidajTextFieldFocusGained
        // TODO add your handling code here:
        guarda_vencida = vencidajTextField.getText().trim();
        vencidajTextField.setText("");
        vencidajTextField.setBackground(Color.lightGray);
    }//GEN-LAST:event_vencidajTextFieldFocusGained

    private void vencidajTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_vencidajTextFieldFocusLost
        // TODO add your handling code here:
        if(vencidajTextField.getText().isEmpty()){
            vencidajTextField.setText(guarda_vencida);
            atualizaCalculosjButtonActionPerformed(null);
        }else{
            atualizaCalculosjButtonActionPerformed(null);
        }
        vencidajTextField.setBackground(Color.white);
    }//GEN-LAST:event_vencidajTextFieldFocusLost

    private void reagendadajTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_reagendadajTextFieldFocusGained
        // TODO add your handling code here:
        guarda_reagendada = reagendadajTextField.getText().trim();
        reagendadajTextField.setText("");
        reagendadajTextField.setBackground(Color.lightGray);
    }//GEN-LAST:event_reagendadajTextFieldFocusGained

    private void reagendadajTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_reagendadajTextFieldFocusLost
        // TODO add your handling code here:
        if(reagendadajTextField.getText().isEmpty()){
            reagendadajTextField.setText(guarda_reagendada);
            atualizaCalculosjButtonActionPerformed(null);
        }else{
            atualizaCalculosjButtonActionPerformed(null);
        }
        reagendadajTextField.setBackground(Color.white);
    }//GEN-LAST:event_reagendadajTextFieldFocusLost

    private void atualizaCredenciadojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizaCredenciadojButtonActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            PessoasCampo oPessoasCampo = new PessoasCampo(); 
            ResultSet rs = null;
            oPessoasCampo.setCodigo_regional(codigo_regional);
            rs = oPessoasCampo.getConsultarCredenciadoAtivo(conecta);
            credenciadojComboBox.removeAllItems();
//            credenciadojComboBox.addItem("SELECIONE");
            while (rs.next()) {
                credenciadojComboBox.addItem(new ComboItem(rs.getInt("CODIGO_PESSOA_CAMPO"), rs.getString("PESSOA_CAMPO")));
                
            }
            credenciadojComboBox.updateUI();
        } catch (SQLException ex) {
            Logger.getLogger(jFControlesDiarios.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        int quantidade_crecenciado = credenciadojComboBox.getItemCount();
        
        totalOfensoresjLabel.setText(String.valueOf(quantidade_crecenciado));
        
    }//GEN-LAST:event_atualizaCredenciadojButtonActionPerformed

    private void sairjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairjButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_sairjButtonActionPerformed

    private void ativaRegionaljButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ativaRegionaljButtonActionPerformed
        // TODO add your handling code here:
        switch (operador_regional){
            case 1:
                nome_regional = "RV01- CURITIBA";               
            break;    
            case 2: 
                nome_regional = "RV02- CAMPINAS";                
            break;  
           case 3:
               nome_regional = "RV03- SP CAPITAL";
               break;
           case 4:
               nome_regional = "RV04- BRASILIA";
               break;
           case 5:
               nome_regional = "RV05- RIO CAPITAL";
               break;
           case 6:
               nome_regional = "RV06- BH";
               break;
           case 7:
               nome_regional = "RV07- SALVADOR";
               break;
           case 8:
               nome_regional = "RV08- FORTALEZA";
               break;
           case 9:
               nome_regional = "RV09- BRASIL";
               break;
           case 10:
               nome_regional = "RV10- BAURU";
               break;
           case 11:
               nome_regional = "RV11- RIO INTERIOR";
               break;
           case 12:
               nome_regional = "RV12- RECIFE";
               break;
           case 13:
               nome_regional = "RV13- PORTO ALEGRE";
               break;
           case 14:
               nome_regional = "RV14- SP ABC - VALE";
               break;
           case 15:
               nome_regional = "RV15- MANAUS / BELEM";
               break;           
            }
    }//GEN-LAST:event_ativaRegionaljButtonActionPerformed

    private void pegaCodigoRegionaljButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pegaCodigoRegionaljButtonActionPerformed
        /* ESTE BOTÃO PEGA O CODIGO DA REGIONAL SELECIONADA GUARDA NA VARIAVEL CODIGO REGIONAL PARA USAR NO PROGRAMA
         E INSERIR E MOSTRAR DADOS APENAS DA REGIONAL SELECIONADA*/
        Regionais oRegional = new Regionais();
        
        ResultSet rs = null;
        oRegional.setRegional(nome_regional);
        try {
            rs = oRegional.getConsultar(conecta);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro na consulta de pessoa!\n"+e, "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
        }
        try {
            while (rs.next()){
                this.setTitle("Você está na regional: " + rs.getString("REGIONAL"));
                codigo_regional = rs.getInt("CODIGO_REGIONAL");
            }
        } catch (SQLException | HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Erro ao preencher o nome da pessoa!\n"+e, "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_pegaCodigoRegionaljButtonActionPerformed

    private void novojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novojButtonActionPerformed
        // TODO add your handling code here:
        novojButton.setEnabled(false);
        editarjButton.setEnabled(false);
        buscarjButton.setEnabled(true);
        salvarjButton.setEnabled(true);
        excluirjButton.setEnabled(false);
        datajFormattedTextField.grabFocus();
        
        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (Exception e) {
        }
        limparjButtonActionPerformed(null);
    }//GEN-LAST:event_novojButtonActionPerformed

    private void abrirListaFechadajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirListaFechadajButtonActionPerformed
        // TODO add your handling code here:
        ListaFechadajPanel.setVisible(true);
    }//GEN-LAST:event_abrirListaFechadajButtonActionPerformed

    private void novaListajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novaListajButtonActionPerformed
        // TODO add your handling code here:
        novaListajButton.setEnabled(false);
        editarListajButton.setEnabled(false);
        buscarListajButton.setEnabled(true);
        salvarListajButton.setEnabled(true);
        excluirListajButton.setEnabled(false);
        dataInicialjFormattedTextField.grabFocus();
        
        novojButton.setEnabled(false);
        editarjButton.setEnabled(false);
        salvarjButton.setEnabled(false);
        alterarjButton.setEnabled(false);
        excluirjButton.setEnabled(false);
        
        statusjComboBox.setSelectedItem("ABERTA");
        statusjComboBox.setEnabled(false);
        
        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (Exception e) {
        }
        dataInicialjFormattedTextField.setText("");
        dataFinaljFormattedTextField.setText("");
    }//GEN-LAST:event_novaListajButtonActionPerformed

    private void salvarListajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarListajButtonActionPerformed
        // TODO add your handling code here:
        ListasRelatorios oListasRelatorios = new ListasRelatorios();
        
        if(dataInicialjFormattedTextField.getText().equals("  /  /    ") || 
           dataFinaljFormattedTextField.getText().equals("  /  /    ")){
            
            JOptionPane.showMessageDialog(null, "Os campos data \"INICIAL\" e \"FINAL\" não obrigatórios", "mensahem do sistema", JOptionPane.WARNING_MESSAGE);    
            
        }else if (statusjComboBox.getSelectedItem().equals("SELECIONE")){
            
            JOptionPane.showMessageDialog(null, "Escolha um STATUS", "mensahem do sistema", JOptionPane.WARNING_MESSAGE);
        }else{
            
            try {
                novaListajButton.setEnabled(true);
                editarListajButton.setEnabled(false);
                buscarListajButton.setEnabled(true);
                salvarListajButton.setEnabled(false);
                statusjComboBox.setEnabled(true);                
                
                oListasRelatorios.setCodigo_regional(codigo_regional);
                
                oListasRelatorios.setData_inicial(dataInicialjFormattedTextField.getText());
                oListasRelatorios.setDatafinal(dataFinaljFormattedTextField.getText());
                oListasRelatorios.setStatus(statusjComboBox.getSelectedItem().toString());
                oListasRelatorios.setCadastrar();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao cadastrar\n"+e, "Mensagem do sistema", JOptionPane.ERROR_MESSAGE);
            }
            try {
            getGradeListas();
            buscarListajButtonActionPerformed(null);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar grade\n"+e, "mensagem do sistenma", JOptionPane.ERROR_MESSAGE);
        }
        }
            
            
        
    }//GEN-LAST:event_salvarListajButtonActionPerformed

    private void buscarListajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarListajButtonActionPerformed
        // TODO add your handling code here:
        try {
            getGradeListas();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar grade\n"+e, "mensagem do sistenma", JOptionPane.ERROR_MESSAGE);
        }
        int somaLinhas = gradeListasjTable.getModel().getRowCount();     
        totalListaAbertajLabel.setText(Integer.toString(somaLinhas));
        
    }//GEN-LAST:event_buscarListajButtonActionPerformed

    private void gradeListasjTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gradeListasjTableMouseClicked
        // TODO add your handling code here:
        editarListajButton.setEnabled(true);
        codigo_click_lista = Integer.parseInt(gradeListasjTable.getValueAt(gradeListasjTable.getSelectedRow(), 0).toString());       
        try {
            getFieldLista(codigo_click_lista);
        } catch (ParseException ex) {
            Logger.getLogger(ListasRelatorios.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Erro ao preencher dados", "Mensagem do sistema", JOptionPane.INFORMATION_MESSAGE);
        }
        if(credenciadojComboBox.getItemCount() == 0){
            JOptionPane.showMessageDialog(null, "Atenção, cadastre um credenciado ofensor", "Mensagem do sistema", JOptionPane.INFORMATION_MESSAGE);
        }else{
         novojButton.setEnabled(true);
         buscarjButtonActionPerformed(null);   
        }
        
    }//GEN-LAST:event_gradeListasjTableMouseClicked

    private void editarListajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarListajButtonActionPerformed
        // TODO add your handling code here:
        novaListajButton.setEnabled(false);
        salvarListajButton.setEnabled(false);
        editarListajButton.setEnabled(false);
        alterarListajButton.setEnabled(true);
        excluirListajButton.setEnabled(true);
        
        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_editarListajButtonActionPerformed

    private void alterarListajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterarListajButtonActionPerformed
        // TODO add your handling code here:
        ListasRelatorios oListasRelatorios = new ListasRelatorios();
        
        if(dataInicialjFormattedTextField.getText().equals("  /  /    ") ||
           dataFinaljFormattedTextField.getText().equals("  /  /    ")){
       JOptionPane.showMessageDialog(null, "Os campos data \"INICIAL\" e \"FINAL\" não obrigatórios", "mensahem do sistema", JOptionPane.WARNING_MESSAGE);     
            
        }else if (statusjComboBox.getSelectedItem().equals("SELECIONE")){
          
         JOptionPane.showMessageDialog(null, "Escolha um STATUS", "mensahem do sistema", JOptionPane.WARNING_MESSAGE);     
        }else{
            
            try {
                novaListajButton.setEnabled(true);
                editarListajButton.setEnabled(false);
                salvarListajButton.setEnabled(false);
                alterarListajButton.setEnabled(false);
                excluirListajButton.setEnabled(false);
                
                oListasRelatorios.setCodigo_regional(codigo_regional);
                oListasRelatorios.setCodigo_lista_relatorio(codigo_click_lista);
                
                oListasRelatorios.setData_inicial(dataInicialjFormattedTextField.getText());
                oListasRelatorios.setDatafinal(dataFinaljFormattedTextField.getText());
                oListasRelatorios.setStatus(statusjComboBox.getSelectedItem().toString());
                oListasRelatorios.setAlterar(conecta);          
            } catch (Exception e) {
             JOptionPane.showMessageDialog(null, "Erro ao atualizar\n"+e, "Mensagem do sistema", JOptionPane.ERROR_MESSAGE);   
            }
            try {
                getGradeListas();
                buscarListajButtonActionPerformed(null);
                atualizaGradefechadajButtonActionPerformed(null);
            } catch (Exception e) {
               JOptionPane.showMessageDialog(null, "Erro ao carregar grade\n"+e, "mensagem do sistenma", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_alterarListajButtonActionPerformed

    private void excluirListajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirListajButtonActionPerformed
        // TODO add your handling code here:
        Object[] options = {"Sim", "Não"};
        int sd =
                JOptionPane.showOptionDialog(
                null,
                "Deseja realmente EXCLUIR esse registro?",
                "Confirmação!",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.WARNING_MESSAGE,
                null,
                options,
                options[0]);

        if (sd != 0) {
            return;
        }
        alterarListajButton.setEnabled(false);
        editarListajButton.setEnabled(true);
        excluirListajButton.setEnabled(false);
        novaListajButton.setEnabled(true);
        
        ListasRelatorios oListasRelatorios = new ListasRelatorios();
        
        oListasRelatorios.setCodigo_lista_relatorio(codigo_click_lista);
        oListasRelatorios.setExcluir(conecta);
        
        try {
            getGradeListas();
            buscarListajButtonActionPerformed(null);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar grade\n"+e, "mensagem do sistenma", JOptionPane.ERROR_MESSAGE);
        }
        dataInicialjFormattedTextField.setText("");
        dataFinaljFormattedTextField.setText("");
        statusjComboBox.setSelectedItem("SELECIONE");
    }//GEN-LAST:event_excluirListajButtonActionPerformed

    private void atualizaGradefechadajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizaGradefechadajButtonActionPerformed
        // TODO add your handling code here:
        try {
            getGradeListasFechadas();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar grade\n"+e, "mensagem do sistenma", JOptionPane.ERROR_MESSAGE);
        }
        int somaLinhas = gradeListasFechadasjTable.getModel().getRowCount();     
        totalListafechadajLabel.setText(Integer.toString(somaLinhas));
    }//GEN-LAST:event_atualizaGradefechadajButtonActionPerformed

    private void gradeListasFechadasjTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gradeListasFechadasjTableMouseClicked
        // TODO add your handling code here:
        editarListajButton.setEnabled(true);
        novojButton.setEnabled(true);
        codigo_click_listaFechada = Integer.parseInt(gradeListasFechadasjTable.getValueAt(gradeListasFechadasjTable.getSelectedRow(), 0).toString());       
        try {
            getFieldListaFechada(codigo_click_listaFechada);
        } catch (ParseException ex) {
            Logger.getLogger(ListasRelatorios.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_gradeListasFechadasjTableMouseClicked

    private void alterarStatusjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterarStatusjButtonActionPerformed
        // TODO add your handling code here:
        ListasRelatorios oListasRelatorios = new ListasRelatorios();
        
        try {
            oListasRelatorios.setCodigo_lista_relatorio(codigo_click_listaFechada);
            oListasRelatorios.setCodigo_regional(codigo_regional);
            
            oListasRelatorios.setData_inicial(datainicial2jFormattedTextField.getText());
            oListasRelatorios.setDatafinal(dataFinal2jFormattedTextField.getText());
            oListasRelatorios.setStatus(status2jComboBox.getSelectedItem().toString());
            oListasRelatorios.setAlterar(conecta);
            oListasRelatorios.setAlterar(conecta);          
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar\n"+e, "Mensagem do sistema", JOptionPane.ERROR_MESSAGE);  
        }
        try {
                getGradeListasFechadas();
                atualizaGradefechadajButtonActionPerformed(null);
                buscarListajButtonActionPerformed(null);
            } catch (Exception e) {
               JOptionPane.showMessageDialog(null, "Erro ao carregar grade\n"+e, "mensagem do sistenma", JOptionPane.ERROR_MESSAGE);
            }
        
    }//GEN-LAST:event_alterarStatusjButtonActionPerformed

    private void dataInicialjFormattedTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataInicialjFormattedTextFieldActionPerformed
        // TODO add your handling code here:
        dataInicialjFormattedTextField.setText("");
    }//GEN-LAST:event_dataInicialjFormattedTextFieldActionPerformed

    private void dataFinaljFormattedTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataFinaljFormattedTextFieldActionPerformed
        // TODO add your handling code here:
        dataFinaljFormattedTextField.setText("");
    }//GEN-LAST:event_dataFinaljFormattedTextFieldActionPerformed

    private void salvarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarjButtonActionPerformed
        // TODO add your handling code here:
        ControlesDiarios oControlesDiarios = new ControlesDiarios();
        
        if(datajFormattedTextField.getText().isEmpty() || datajFormattedTextField.getText().equals("")){
            
            JOptionPane.showMessageDialog(null, "Escolha uma data", "mensagem do sistema", JOptionPane.WARNING_MESSAGE);
        }else if (credenciadojComboBox.getSelectedItem().equals("SELECIONE")){
            
          JOptionPane.showMessageDialog(null, "Escolha um credenciado", "mensagem do sistema", JOptionPane.WARNING_MESSAGE);   
        }else if(totalGeraljTextField.getText().equals("0") || totalGeraljTextField.getText().isEmpty()){
            
         JOptionPane.showMessageDialog(null, "Preencha ao menos uma coluna", "mensagem do sistema", JOptionPane.WARNING_MESSAGE);    
        }else{
            
            try {
                salvarjButton.setEnabled(false);
                novojButton.setEnabled(true);
                editarjButton.setEnabled(true);
                excluirjButton.setEnabled(false);
                
                combo_credenciado = (ComboItem)credenciadojComboBox.getSelectedItem();

                oControlesDiarios.setCodigo_regional(codigo_regional);
                oControlesDiarios.setCodigo_pessoa_campo_credenciado(combo_credenciado.getId());
                oControlesDiarios.setCodigo_lista_relatorio(codigo_click_lista);
                
                oControlesDiarios.setCanceladas(cancelada);
                oControlesDiarios.setDevolvidas(devolvida);
                oControlesDiarios.setExecutadas(executada);
                oControlesDiarios.setFinalizadas(finalizada);
                oControlesDiarios.setVencidas(vencida);
                oControlesDiarios.setReagendadas(reagendada);
                oControlesDiarios.setData(Funcoes.getDataFormatBR(datajFormattedTextField.getText()));
                
                datajFormattedTextField.grabFocus();
                atualizaCalculosjButtonActionPerformed(evt);
                
                oControlesDiarios.setCadastrar();           
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao cadastrar\n"+e, "Mensagem do sistema", JOptionPane.ERROR_MESSAGE);
            }
            try {
                getGradeControlesDiarios();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao atualizar grade\n"+e, "Mensagem do sistema", JOptionPane.ERROR_MESSAGE);
            }
            try {
            getGradeTotalSemana();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar grade\n"+e, "mensagem do sistenma", JOptionPane.ERROR_MESSAGE);
        }
            buscarjButtonActionPerformed(evt);
        }
    }//GEN-LAST:event_salvarjButtonActionPerformed

    private void buscarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarjButtonActionPerformed
        // TODO add your handling code here:
        try {
            getGradeControlesDiarios();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar grade\n"+e, "mensagem do sistenma", JOptionPane.ERROR_MESSAGE);
        }
        try {
            getGradeTotalSemana();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar grade\n"+e, "mensagem do sistenma", JOptionPane.ERROR_MESSAGE);
        }
        
        int somaLinhas = gradeControleDiariojTable.getModel().getRowCount();
        if(somaLinhas == 5){
            novojButton.setEnabled(false);
        }else{
        novojButton.setEnabled(true);    
        }
    }//GEN-LAST:event_buscarjButtonActionPerformed

    private void credenciadojComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_credenciadojComboBoxActionPerformed
        // TODO add your handling code here:
        buscarjButtonActionPerformed(null);
    }//GEN-LAST:event_credenciadojComboBoxActionPerformed

    private void canceladajTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_canceladajTextFieldKeyTyped
        // TODO add your handling code here:
        String caracteres="0987654321";
        if(!caracteres.contains(evt.getKeyChar()+"")){
        evt.consume();
}
    }//GEN-LAST:event_canceladajTextFieldKeyTyped

    private void devolvidajTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_devolvidajTextFieldKeyTyped
        // TODO add your handling code here:
        String caracteres="0987654321";
        if(!caracteres.contains(evt.getKeyChar()+"")){
        evt.consume();
        }
    }//GEN-LAST:event_devolvidajTextFieldKeyTyped

    private void executadajTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_executadajTextFieldKeyTyped
        // TODO add your handling code here:
        String caracteres="0987654321";
        if(!caracteres.contains(evt.getKeyChar()+"")){
        evt.consume();
        }
    }//GEN-LAST:event_executadajTextFieldKeyTyped

    private void finalizadajTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_finalizadajTextFieldKeyTyped
        // TODO add your handling code here:
        String caracteres="0987654321";
        if(!caracteres.contains(evt.getKeyChar()+"")){
        evt.consume();
        }
    }//GEN-LAST:event_finalizadajTextFieldKeyTyped

    private void vencidajTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vencidajTextFieldKeyTyped
        // TODO add your handling code here:
        String caracteres="0987654321";
        if(!caracteres.contains(evt.getKeyChar()+"")){
        evt.consume();
        }
    }//GEN-LAST:event_vencidajTextFieldKeyTyped

    private void reagendadajTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_reagendadajTextFieldKeyTyped
        // TODO add your handling code here:
        String caracteres="0987654321";
        if(!caracteres.contains(evt.getKeyChar()+"")){
        evt.consume();
        }
    }//GEN-LAST:event_reagendadajTextFieldKeyTyped

    private void limparjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparjButtonActionPerformed
        try {
            datajFormattedTextField.setText(Funcoes.getNowBR());
        } catch (ParseException ex) {
            Logger.getLogger(jFControlesDiarios.class.getName()).log(Level.SEVERE, null, ex);
        }
        entrada_diaria = 0;
        cancelada = 0;
        devolvida = 0;
        executada = 0;
        finalizada = 0;
        vencida = 0;
        reagendada = 0;
        total_geral = 0;
        
        entradaDiariajTextField.setText("0");
        canceladajTextField.setText("0");
        devolvidajTextField.setText("0");
        executadajTextField.setText("0");
        finalizadajTextField.setText("0");
        vencidajTextField.setText("0");
        reagendadajTextField.setText("0");
        totalGeraljTextField.setText("0");
    }//GEN-LAST:event_limparjButtonActionPerformed

    private void gradeControleDiariojTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gradeControleDiariojTableMouseClicked
        // TODO add your handling code here:
        editarjButton.setEnabled(true);
        codigo_click_controle_diario = Integer.parseInt(gradeControleDiariojTable.getValueAt(gradeControleDiariojTable.getSelectedRow(), 0).toString());       
        try {
            getFieldListaControleDiario(codigo_click_controle_diario);
        } catch (ParseException ex) {
            Logger.getLogger(ListasRelatorios.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_gradeControleDiariojTableMouseClicked

    private void datajFormattedTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_datajFormattedTextFieldMouseClicked
        // TODO add your handling code here:
        datajFormattedTextField.setText("");
    }//GEN-LAST:event_datajFormattedTextFieldMouseClicked

    private void alterarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterarjButtonActionPerformed
        // TODO add your handling code here:
        ControlesDiarios oControlesDiarios = new ControlesDiarios();
        
        if(datajFormattedTextField.getText().isEmpty() || datajFormattedTextField.getText().equals("")){
            
            JOptionPane.showMessageDialog(null, "Escolha uma data", "mensagem do sistema", JOptionPane.WARNING_MESSAGE);
        }else if (credenciadojComboBox.getSelectedItem().equals("SELECIONE")){
            
          JOptionPane.showMessageDialog(null, "Escolha um credenciado", "mensagem do sistema", JOptionPane.WARNING_MESSAGE);   
        }else if(totalGeraljTextField.getText().equals("0") || totalGeraljTextField.getText().isEmpty()){
            
         JOptionPane.showMessageDialog(null, "Preencha ao menos uma coluna", "mensagem do sistema", JOptionPane.WARNING_MESSAGE);    
        }else{
            
            try {
                salvarjButton.setEnabled(false);
                novojButton.setEnabled(true);
                editarjButton.setEnabled(false);
                excluirjButton.setEnabled(false);
                alterarjButton.setEnabled(false);
                
                combo_credenciado = (ComboItem)credenciadojComboBox.getSelectedItem();

                oControlesDiarios.setCodigo_controle_diario(codigo_click_controle_diario);
                oControlesDiarios.setCodigo_regional(codigo_regional);
                oControlesDiarios.setCodigo_pessoa_campo_credenciado(combo_credenciado.getId());
                oControlesDiarios.setCodigo_lista_relatorio(codigo_click_lista);
                
                oControlesDiarios.setCanceladas(cancelada);
                oControlesDiarios.setDevolvidas(devolvida);
                oControlesDiarios.setExecutadas(executada);
                oControlesDiarios.setFinalizadas(finalizada);
                oControlesDiarios.setVencidas(vencida);
                oControlesDiarios.setReagendadas(reagendada);
                oControlesDiarios.setData(Funcoes.getDataFormatBR(datajFormattedTextField.getText()));
                oControlesDiarios.setAlterar(conecta);           
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao cadastrar\n"+e, "Mensagem do sistema", JOptionPane.ERROR_MESSAGE);
            }
            try {
                getGradeControlesDiarios();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao atualizar grade\n"+e, "Mensagem do sistema", JOptionPane.ERROR_MESSAGE);
            }
            try {
            getGradeTotalSemana();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar grade\n"+e, "mensagem do sistenma", JOptionPane.ERROR_MESSAGE);
        }
            buscarjButtonActionPerformed(evt);
        }
    }//GEN-LAST:event_alterarjButtonActionPerformed

    private void editarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarjButtonActionPerformed
        // TODO add your handling code here:
        novojButton.setEnabled(false);
        salvarjButton.setEnabled(false);
        editarjButton.setEnabled(false);
        alterarjButton.setEnabled(true);
        excluirjButton.setEnabled(true);
        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_editarjButtonActionPerformed

    private void excluirjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirjButtonActionPerformed
        // TODO add your handling code here:
        Object[] options = {"Sim", "Não"};
        int sd =
                JOptionPane.showOptionDialog(
                null,
                "Deseja realmente EXCLUIR esse registro?",
                "Confirmação!",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.WARNING_MESSAGE,
                null,
                options,
                options[0]);

        if (sd != 0) {
            return;
        }
        alterarjButton.setEnabled(false);
        editarjButton.setEnabled(true);
        excluirjButton.setEnabled(false);
        novojButton.setEnabled(true);
        
        ControlesDiarios oControlesDiarios = new ControlesDiarios();
        
        oControlesDiarios.setCodigo_controle_diario(codigo_click_controle_diario);
        oControlesDiarios.setExcluir(conecta);
        
        try {
                getGradeControlesDiarios();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao atualizar grade\n"+e, "Mensagem do sistema", JOptionPane.ERROR_MESSAGE);
            }
            try {
            getGradeTotalSemana();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar grade\n"+e, "mensagem do sistenma", JOptionPane.ERROR_MESSAGE);
        }
            buscarjButtonActionPerformed(evt);
            limparjButtonActionPerformed(evt);
    }//GEN-LAST:event_excluirjButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        jFAderenciaMeta oFormAderenciaMeta = new jFAderenciaMeta();
        
        oFormAderenciaMeta.recebe_codigo_crecenciado = combo_credenciado.getId();
        oFormAderenciaMeta.recebe_credenciado = credenciadojComboBox.getSelectedItem().toString();
        oFormAderenciaMeta.recebe_codigo_regional = codigo_regional;
        oFormAderenciaMeta.recebe_codigo_lista = codigo_click_lista;
        
        oFormAderenciaMeta.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        oFormAderenciaMeta.setLocationRelativeTo(null);
        oFormAderenciaMeta.setTitle("Aderencia aos procedimentos");
        oFormAderenciaMeta.pack();
        oFormAderenciaMeta.setModal(true);
        oFormAderenciaMeta.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void relatoriojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_relatoriojButtonActionPerformed
        // TODO add your handling code here:
        ControlesDiarios oControlesDiarios = new ControlesDiarios();
        ResultSet rs = null;
        oControlesDiarios.setCodigo_lista_relatorio(codigo_click_lista);

        try {
            oControlesDiarios.setCodigo_regional(codigo_regional);
            oControlesDiarios.setCodigo_pessoa_campo_credenciado(combo_credenciado.getId());
            rs = oControlesDiarios.getConsultarTotalGeraldaSemana(conecta);
            rs.next();

            //Pegar campos
            total_cancelada = rs.getInt("TOTAL_CANCELADAS");
            total_devolvida = rs.getInt("TOTAL_DEVOLVIDA");
            total_executada = rs.getInt("TOTAL_EXECUTADA");
            total_finalizada = rs.getInt("TOTAL_FINALIZADAS");
            total_vencida = rs.getInt("TOTAL_VENCIDA");
            total_reagendada = rs.getInt("TOTAL_REAGENDADAS");
            total_geral_relatorio = rs.getInt("TOTAL_GERAL");

            atendimento_realizado = total_cancelada + total_executada + total_finalizada;
            atendimento_nao_realizado = total_devolvida;   
            
            entrada_diaria_relatorio = total_geral_relatorio;
            
            // usar para verificar calculos
//            System.out.println("total cancelada: "+total_cancelada);
//            System.out.println("total executada: "+total_executada);
//            System.out.println("total finalizada: "+total_finalizada);
            
            float porcentagem_at_realizado = ((float)atendimento_realizado / entrada_diaria_relatorio)*100;
            float porcentagem_at_nao_realizado = ((float)atendimento_nao_realizado / entrada_diaria_relatorio)*100;    
            
            //// usar para verificar calculos
            System.out.println("total cancelada: "+total_cancelada);
            System.out.println("total executada: "+total_executada);
            System.out.println("total finalizada: "+total_finalizada);
            
            
            String nome_credenciado = credenciadojComboBox.getSelectedItem().toString();
            
            ImageIcon logo = new ImageIcon(getClass().getResource("/resources/SKY.png"));
            
            
            
//****************************************** ENVIA DADOS PARA O PARAMETRO DO RELATORIO E ABRE O MESMO************************************
            
            try {
                //////spws-vm-fs02/sky/sky/siebel/note/1 - AGENTES - TORRE NACIONAL/jTorre/jTorre
            String caminhoRelJasper = "/Relatorios/AderenciaAosProcedimentos.jasper";  
                
                
//                String caminhoRelJasper = "//\\\\spws-vm-fs02/sky/sky/siebel/note/1 - AGENTES - TORRE NACIONAL/jTorre/jTorre/Relatorios/AderenciaAosProcedimentos.jasper"; 
                
//                String caminhoRelJasper = "Z://1 - AGENTES - TORRE NACIONAL/jTorre/jTorre/Relatorios/AderenciaAosProcedimentos.jasper";  
                
            
                Map parametros = new HashMap();
                parametros.put("AT_REALIZADO", porcentagem_at_realizado);
                parametros.put("AT_NAO_REALIZADO", porcentagem_at_nao_realizado);
                parametros.put("NOME_CREDENCIADO", nome_credenciado);
                parametros.put("CODIGO_REGIONAL", codigo_regional);
                parametros.put("CODIGO_LISTA_RELATORIO", codigo_click_lista);
                parametros.put("SUB_CODIGO_LISTA_RELATORIO", codigo_click_lista);
                parametros.put("CODIGO_PESSOA_CAMPO_CREDENCIADO", combo_credenciado.getId());
                parametros.put("LOGO", logo);
                parametros.put("SUBREPORT_DIR", "Relatorios/");// deve passar o caminho do subrelatorio no parematro SUBREPORT_DIR
//                parametros.put("REPORT_CONNECTION",ClassConecta.getConectaContatosTorreDB());
                URL arquivo = getClass().getResource(caminhoRelJasper);
                if (arquivo == null) {
                    JOptionPane.showMessageDialog(null, "Arquivo jasper não encontrado");
                }
                JasperReport report;
                report = JasperManager.loadReport(arquivo.openStream());
                JasperPrint jasperPrint = JasperFillManager.fillReport(report, parametros, ClassConecta.getConectaContatosTorreDB());
                JasperViewer jrviewer = new JasperViewer(jasperPrint, false);
                jrviewer.setVisible(true);
        } catch (SQLException | JRException | IOException ex) {
            Logger.getLogger(jFPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Erro ao gerar relatório\n"+ex, "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
        }
        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Erro ao gerar relatório\n"+ex, "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_relatoriojButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jFControlesDiarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jFControlesDiarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jFControlesDiarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jFControlesDiarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new jFControlesDiarios().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ListaFechadajPanel;
    private javax.swing.JButton abrirListaFechadajButton;
    private javax.swing.JButton alterarListajButton;
    private javax.swing.JButton alterarStatusjButton;
    private javax.swing.JButton alterarjButton;
    private javax.swing.JButton ativaRegionaljButton;
    private javax.swing.JButton atualizaCalculosjButton;
    private javax.swing.JButton atualizaCredenciadojButton;
    private javax.swing.JButton atualizaGradefechadajButton;
    private javax.swing.JButton buscarListajButton;
    private javax.swing.JButton buscarjButton;
    private javax.swing.JTextField canceladajTextField;
    private javax.swing.JComboBox credenciadojComboBox;
    private javax.swing.JFormattedTextField dataFinal2jFormattedTextField;
    private javax.swing.JFormattedTextField dataFinaljFormattedTextField;
    private javax.swing.JFormattedTextField dataInicialjFormattedTextField;
    private javax.swing.JFormattedTextField datainicial2jFormattedTextField;
    private javax.swing.JFormattedTextField datajFormattedTextField;
    private javax.swing.JTextField devolvidajTextField;
    private javax.swing.JButton editarListajButton;
    private javax.swing.JButton editarjButton;
    private javax.swing.JTextField entradaDiariajTextField;
    private javax.swing.JButton excluirListajButton;
    private javax.swing.JButton excluirjButton;
    private javax.swing.JTextField executadajTextField;
    private javax.swing.JTextField finalizadajTextField;
    private javax.swing.JTable gradeControleDiariojTable;
    private javax.swing.JTable gradeListasFechadasjTable;
    private javax.swing.JTable gradeListasjTable;
    private javax.swing.JTable gradeTotaldaSemanajTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JButton limparjButton;
    private javax.swing.JButton novaListajButton;
    private javax.swing.JButton novojButton;
    private javax.swing.JButton pegaCodigoRegionaljButton;
    private javax.swing.JTextField reagendadajTextField;
    private javax.swing.JButton relatoriojButton;
    private javax.swing.JButton sairjButton;
    private javax.swing.JButton salvarListajButton;
    private javax.swing.JButton salvarjButton;
    private javax.swing.JComboBox status2jComboBox;
    private javax.swing.JComboBox statusjComboBox;
    private javax.swing.JLabel totalEntradaDiariajLabel;
    private javax.swing.JTextField totalGeraljTextField;
    private javax.swing.JLabel totalListaAbertajLabel;
    private javax.swing.JLabel totalListafechadajLabel;
    private javax.swing.JLabel totalOSCanceladajLabel;
    private javax.swing.JLabel totalOSDevolvidajLabel;
    private javax.swing.JLabel totalOSExecutadajLabel;
    private javax.swing.JLabel totalOSFinalizadajLabel;
    private javax.swing.JLabel totalOSVencidajLabel;
    private javax.swing.JLabel totalOfensoresjLabel;
    private javax.swing.JLabel totalReagendadajLabel;
    private javax.swing.JTextField vencidajTextField;
    // End of variables declaration//GEN-END:variables
}
