/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package jcadastropendentes;

import Classes.*;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lcbenfic
 */
public class jFTelefones extends javax.swing.JDialog {

    /**
     * Creates new form jFTelefones
     */
    public jFTelefones() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/resources/radio-tower-32.png")).getImage()); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        atualizaPessoajButton = new javax.swing.JButton();
        buscarjButton = new javax.swing.JButton();
        novojButton = new javax.swing.JButton();
        editarjButton = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        salvarjButton = new javax.swing.JButton();
        salvarMaisjButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        alterarjButton = new javax.swing.JButton();
        excluirjButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        limparjButton = new javax.swing.JButton();
        sairjButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        gradeTelefonesjTable = new javax.swing.JTable();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        pessoajTextField = new javax.swing.JTextField();
        tipoTelefonejComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        cadastraTipoTelefonejButton = new javax.swing.JButton();
        atualizaTipoTelefonejButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        numeroTelefonejTextField = new javax.swing.JTextField();
        ramaljTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        observacaojTextArea = new javax.swing.JTextArea();
        mostrarReceptivojComboBox = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Cadastro de telefones");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        atualizaPessoajButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/refresh.png"))); // NOI18N
        atualizaPessoajButton.setText("atualiza pessoa");
        atualizaPessoajButton.setFocusable(false);
        atualizaPessoajButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        atualizaPessoajButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        atualizaPessoajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizaPessoajButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(atualizaPessoajButton);

        buscarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/buscar.png"))); // NOI18N
        buscarjButton.setText("Buscar");
        buscarjButton.setFocusable(false);
        buscarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buscarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buscarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(buscarjButton);

        novojButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/new2.png"))); // NOI18N
        novojButton.setText("Novo");
        novojButton.setFocusable(false);
        novojButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        novojButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        novojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novojButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(novojButton);

        editarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/edit.png"))); // NOI18N
        editarjButton.setText("Editar");
        editarjButton.setFocusable(false);
        editarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        editarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        editarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(editarjButton);
        jToolBar1.add(jSeparator3);

        salvarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/save.png"))); // NOI18N
        salvarjButton.setText("Salvar");
        salvarjButton.setFocusable(false);
        salvarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salvarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        salvarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(salvarjButton);

        salvarMaisjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/save_plus.png"))); // NOI18N
        salvarMaisjButton.setText("Salvar+");
        salvarMaisjButton.setFocusable(false);
        salvarMaisjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salvarMaisjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        salvarMaisjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarMaisjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(salvarMaisjButton);
        jToolBar1.add(jSeparator2);

        alterarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/save2.png"))); // NOI18N
        alterarjButton.setText("Alterar");
        alterarjButton.setFocusable(false);
        alterarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        alterarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        alterarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterarjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(alterarjButton);

        excluirjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/delete.png"))); // NOI18N
        excluirjButton.setText("Excluir");
        excluirjButton.setFocusable(false);
        excluirjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        excluirjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        excluirjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(excluirjButton);
        jToolBar1.add(jSeparator1);

        limparjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/clear.png"))); // NOI18N
        limparjButton.setText("Limpar");
        limparjButton.setFocusable(false);
        limparjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        limparjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        limparjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(limparjButton);

        sairjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/exit.png"))); // NOI18N
        sairjButton.setText("Sair");
        sairjButton.setFocusable(false);
        sairjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sairjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        sairjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairjButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(sairjButton);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        gradeTelefonesjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id#", "Pessoa", "Tipo telefone", "Telefone", "Ramal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gradeTelefonesjTable.getTableHeader().setReorderingAllowed(false);
        gradeTelefonesjTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gradeTelefonesjTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(gradeTelefonesjTable);
        gradeTelefonesjTable.getColumnModel().getColumn(0).setResizable(false);
        gradeTelefonesjTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        gradeTelefonesjTable.getColumnModel().getColumn(1).setResizable(false);
        gradeTelefonesjTable.getColumnModel().getColumn(1).setPreferredWidth(150);
        gradeTelefonesjTable.getColumnModel().getColumn(2).setResizable(false);
        gradeTelefonesjTable.getColumnModel().getColumn(2).setPreferredWidth(50);
        gradeTelefonesjTable.getColumnModel().getColumn(3).setResizable(false);
        gradeTelefonesjTable.getColumnModel().getColumn(3).setPreferredWidth(50);
        gradeTelefonesjTable.getColumnModel().getColumn(4).setResizable(false);
        gradeTelefonesjTable.getColumnModel().getColumn(4).setPreferredWidth(50);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setText("Pessoa");

        pessoajTextField.setEditable(false);
        pessoajTextField.setFocusable(false);

        jLabel2.setText("Tipo telefone");

        cadastraTipoTelefonejButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/add_small.png"))); // NOI18N
        cadastraTipoTelefonejButton.setToolTipText("Cadastra tipo telefone");
        cadastraTipoTelefonejButton.setContentAreaFilled(false);
        cadastraTipoTelefonejButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cadastraTipoTelefonejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastraTipoTelefonejButtonActionPerformed(evt);
            }
        });

        atualizaTipoTelefonejButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/refresh.png"))); // NOI18N
        atualizaTipoTelefonejButton.setContentAreaFilled(false);
        atualizaTipoTelefonejButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        atualizaTipoTelefonejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizaTipoTelefonejButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Numero telefone");

        jLabel4.setText("Ramal");

        jLabel5.setText("Observação");

        observacaojTextArea.setColumns(20);
        observacaojTextArea.setRows(5);
        jScrollPane2.setViewportView(observacaojTextArea);

        mostrarReceptivojComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SELECIONE", "SIM", "NÃO" }));

        jLabel6.setText("Mostrar p/ receptivo");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(numeroTelefonejTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                                .addComponent(pessoajTextField)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(ramaljTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tipoTelefonejComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 235, Short.MAX_VALUE))
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(cadastraTipoTelefonejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(atualizaTipoTelefonejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(mostrarReceptivojComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane2))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pessoajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tipoTelefonejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cadastraTipoTelefonejButton)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(atualizaTipoTelefonejButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numeroTelefonejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ramaljTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mostrarReceptivojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Cadastro Telefone", jPanel3);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 732, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    ClassConecta conecta = new ClassConecta();
    
    int recebe_codigo_pessoa;
    
    int codigo_telefone;
    
    ComboItem combo_tipo_telefone;
    
    public void getGradeTelefones() throws ParseException{
       //Consultar Pessoas
        Telefones oTelefone = new Telefones();

        ResultSet resultSet = null;

        String[] colunasTabela = new String[]{"Id#", "Pessoa", "Tipo telefone", "Telefone", "Ramal"};
        DefaultTableModel modeloTabela = new DefaultTableModel(null, colunasTabela) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        gradeTelefonesjTable.setModel(modeloTabela);
        gradeTelefonesjTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        gradeTelefonesjTable.getColumnModel().getColumn(1).setPreferredWidth(150);
        gradeTelefonesjTable.getColumnModel().getColumn(2).setPreferredWidth(50);
        gradeTelefonesjTable.getColumnModel().getColumn(3).setPreferredWidth(50);
        gradeTelefonesjTable.getColumnModel().getColumn(4).setPreferredWidth(50);

try {
            oTelefone.setCodigo_pessoa(recebe_codigo_pessoa);
            resultSet = oTelefone.getConsultar(conecta);
            if (resultSet.getRow() == 1){
             resultSet.first();
            }


        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {

            while (resultSet.next()) {

                modeloTabela.addRow(new String[]{
                    Funcoes.getCodigoFormat(resultSet.getInt("CODIGO_TELEFONE")),
                    resultSet.getString("NOME_PESSOA"),
                    resultSet.getString("TIPO_TELEFONE"),
                    resultSet.getString("NUMERO"),
                    resultSet.getString("RAMAL")
                });

            }

        } catch (SQLException ex) {
            Logger.getLogger(Telefones.class.getName()).log(Level.SEVERE, null, ex);
        }

           }
    
    public void getFieldTelefone(int codigo_telefone) throws ParseException{
        //Buscar contato
        Telefones otelefone = new Telefones();
        ResultSet rs = null;
        otelefone.setCodigo_telefone(codigo_telefone);

        try {
            rs = otelefone.getConsultar(conecta);
            rs.next();

            //Pegar campos
            ComboItem oItem = new ComboItem(rs.getInt("CODIGO_TIPO_TELEFONE"), rs.getString("TIPO_TELEFONE"));
            tipoTelefonejComboBox.setSelectedItem(oItem);
            
            pessoajTextField.setText(rs.getString("NOME_PESSOA"));
            numeroTelefonejTextField.setText(rs.getString("NUMERO"));
            ramaljTextField.setText(rs.getString("RAMAL"));
            observacaojTextArea.setText(rs.getString("OBSERVACAO"));
            mostrarReceptivojComboBox.setSelectedItem(rs.getString("MOSTRAR"));
            
        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Erro ao preencher os campos\n"+ex, "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        novojButton.setEnabled(true);
        editarjButton.setEnabled(false);
        salvarjButton.setEnabled(false);
        salvarMaisjButton.setEnabled(false);
        alterarjButton.setEnabled(false);
        excluirjButton.setEnabled(false);
        
        atualizaPessoajButton.setVisible(false);
        
        try {
            ClassConecta.conectajTorre();
        } catch (Exception e) {
        }
        
        atualizaTipoTelefonejButtonActionPerformed(null);
        atualizaPessoajButtonActionPerformed(null);
        buscarjButtonActionPerformed(null);
        System.out.println(recebe_codigo_pessoa);
        
        observacaojTextArea.setWrapStyleWord(true);
        observacaojTextArea.setLineWrap(true);
    }//GEN-LAST:event_formWindowOpened

    private void sairjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairjButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_sairjButtonActionPerformed

    private void atualizaTipoTelefonejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizaTipoTelefonejButtonActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            TiposTelefones oTiposTelefone = new TiposTelefones(); 
            ResultSet rs = null;
            rs = oTiposTelefone.getConsultar(conecta);
            tipoTelefonejComboBox.removeAllItems();
            tipoTelefonejComboBox.addItem("SELECIONE");
            while (rs.next()) {
                tipoTelefonejComboBox.addItem(new ComboItem(rs.getInt(1), rs.getString(2)));
            }
            tipoTelefonejComboBox.updateUI();
        } catch (SQLException ex) {
            Logger.getLogger(jFTelefones.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_atualizaTipoTelefonejButtonActionPerformed

    private void cadastraTipoTelefonejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastraTipoTelefonejButtonActionPerformed
        // TODO add your handling code here:
        jFTiposTelefones oFormTiposTelefone = new jFTiposTelefones();
        
        oFormTiposTelefone.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        oFormTiposTelefone.setLocationRelativeTo(null);
        oFormTiposTelefone.setTitle("Cadastro de tipo de telefone");
        oFormTiposTelefone.pack();
        oFormTiposTelefone.setModal(true);
        oFormTiposTelefone.setVisible(true);
        
        atualizaTipoTelefonejButtonActionPerformed(null);
    }//GEN-LAST:event_cadastraTipoTelefonejButtonActionPerformed

    private void atualizaPessoajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizaPessoajButtonActionPerformed
        // TODO add your handling code here:
        PESSOAS oPessoa = new PESSOAS();
        
        ResultSet rs = null;
        oPessoa.setCodigo_pessoa(recebe_codigo_pessoa);
        try {
            rs = oPessoa.getConsultar(conecta);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro na consulta de pessoa!\n"+e, "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
        }
        try {
            while (rs.next()){
                pessoajTextField.setText(rs.getString("NOME_PESSOA"));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao preencher o nome da pessoa!\n"+e, "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
        }
 
    }//GEN-LAST:event_atualizaPessoajButtonActionPerformed

    private void novojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novojButtonActionPerformed
        // TODO add your handling code here:
        novojButton.setEnabled(false);
        editarjButton.setEnabled(false);
        buscarjButton.setEnabled(true);
        salvarjButton.setEnabled(true);
        salvarMaisjButton.setEnabled(true);
        excluirjButton.setEnabled(false);
        tipoTelefonejComboBox.grabFocus();
        
        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_novojButtonActionPerformed

    private void limparjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparjButtonActionPerformed
        // TODO add your handling code here:
        tipoTelefonejComboBox.setSelectedItem("SELECIONE");
        numeroTelefonejTextField.setText("");
        ramaljTextField.setText("");
        observacaojTextArea.setText(null);
    }//GEN-LAST:event_limparjButtonActionPerformed

    private void salvarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarjButtonActionPerformed
        // TODO add your handling code here:
        salvarjButton.setEnabled(false);
        novojButton.setEnabled(true);
        editarjButton.setEnabled(true);
        salvarMaisjButton.setEnabled(false);
        excluirjButton.setEnabled(false);
        Telefones otelefone = new Telefones();

        if(tipoTelefonejComboBox.getSelectedItem().equals("SELECIONE")){
            
            JOptionPane.showMessageDialog(null, "O campo \"TIPO TELEFONE\" é obrigatório", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
        }else{
            if (numeroTelefonejTextField.getText().equals("") && ramaljTextField.getText().equals("")){
                
                JOptionPane.showMessageDialog(null, "Preencha ao menos um numero de telefone\n ou um ramal.", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
            }else{
                try {
            combo_tipo_telefone = (ComboItem)tipoTelefonejComboBox.getSelectedItem();        
                    
            otelefone.setCodigo_pessoa(recebe_codigo_pessoa);
            otelefone.setCodigo_tipo_telefone(combo_tipo_telefone.getId());
            otelefone.setNumero_telefone(numeroTelefonejTextField.getText().trim());
            otelefone.setRamal(ramaljTextField.getText().trim());
            otelefone.setObservacao(observacaojTextArea.getText());
            otelefone.setMostrar_receptivo(mostrarReceptivojComboBox.getSelectedItem().toString());
            otelefone.setCadastrar();
        } catch (Exception e) {
       }
                try {
                    getGradeTelefones();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Erro ao carregar grade!\n"+e, "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
                }
      }
     }
        
        
    }//GEN-LAST:event_salvarjButtonActionPerformed

    private void buscarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarjButtonActionPerformed
        // TODO add your handling code here:
        try {
            getGradeTelefones();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao preencher a grade!\n"+e, "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_buscarjButtonActionPerformed

    private void gradeTelefonesjTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gradeTelefonesjTableMouseClicked
        // TODO add your handling code here:
        editarjButton.setEnabled(true);
        
        codigo_telefone = Integer.parseInt(gradeTelefonesjTable.getValueAt(gradeTelefonesjTable.getSelectedRow(), 0).toString());
        try {
            getFieldTelefone(codigo_telefone);
        } catch (ParseException ex) {
            Logger.getLogger(Telefones.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_gradeTelefonesjTableMouseClicked

    private void editarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarjButtonActionPerformed
        // TODO add your handling code here:
        novojButton.setEnabled(false);
        salvarjButton.setEnabled(false);
        editarjButton.setEnabled(false);
        alterarjButton.setEnabled(true);
        salvarMaisjButton.setEnabled(false);
        excluirjButton.setEnabled(true);
        try {
            ClassConecta.con.setAutoCommit(false);
        } catch (SQLException ex) {
            Logger.getLogger(CadastroPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_editarjButtonActionPerformed

    private void alterarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterarjButtonActionPerformed
        // TODO add your handling code here:
        alterarjButton.setEnabled(false);
        editarjButton.setEnabled(true);
        novojButton.setEnabled(true);
        excluirjButton.setEnabled(false);
        
        Telefones oteleTelefone = new Telefones();
        
        if(tipoTelefonejComboBox.getSelectedItem().equals("SELECIONE")){
            
          JOptionPane.showMessageDialog(null, "O campo \"TIPO TELEFONE\" é obrigatório", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);  
            
        }else{
            
            if(numeroTelefonejTextField.getText().equals("") && ramaljTextField.getText().equals("")){
                
              JOptionPane.showMessageDialog(null, "Preencha ao menos um numero de telefone\n ou um ramal.", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);  
                
            }else{
                
                try {
                    combo_tipo_telefone = (ComboItem)tipoTelefonejComboBox.getSelectedItem();
                    
                    oteleTelefone.setCodigo_telefone(codigo_telefone);
                    oteleTelefone.setCodigo_pessoa(recebe_codigo_pessoa);
                    
                    oteleTelefone.setCodigo_tipo_telefone(combo_tipo_telefone.getId());
                    oteleTelefone.setNumero_telefone(numeroTelefonejTextField.getText().trim().toUpperCase());
                    oteleTelefone.setRamal(ramaljTextField.getText().trim().toUpperCase());
                    oteleTelefone.setObservacao(observacaojTextArea.getText());
                    oteleTelefone.setMostrar_receptivo(mostrarReceptivojComboBox.getSelectedItem().toString());
                    oteleTelefone.setAlterar(conecta);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Erro ao alterar dados!\n"+e, "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
                }
                try {
                    getGradeTelefones();
                } catch (Exception e) {
                     JOptionPane.showMessageDialog(null, "Erro ao atualizar grade!\n"+e, "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
                }
            }
            
        }
    }//GEN-LAST:event_alterarjButtonActionPerformed

    private void salvarMaisjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarMaisjButtonActionPerformed
        // TODO add your handling code here:
        salvarjButtonActionPerformed(null);
        novojButtonActionPerformed(null);
    }//GEN-LAST:event_salvarMaisjButtonActionPerformed

    private void excluirjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirjButtonActionPerformed
        // TODO add your handling code here:
         Object[] options = {"Sim", "Não"};
        int sd =
                JOptionPane.showOptionDialog(
                null,
                "Deseja realmente EXCLUIR esse registro?",
                "Confirmação!",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.WARNING_MESSAGE,
                null,
                options,
                options[0]);

        if (sd != 0) {
            return;
        }
        alterarjButton.setEnabled(false);
        editarjButton.setEnabled(true);
        excluirjButton.setEnabled(false);
        novojButton.setEnabled(true);
        
        Telefones oTelefone = new Telefones();
        
        oTelefone.setCodigo_telefone(codigo_telefone);
        oTelefone.setExcluir(conecta);
        
        try {
            getGradeTelefones();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar grade!\n"+e, "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
        }
        limparjButtonActionPerformed(null);
    }//GEN-LAST:event_excluirjButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jFTelefones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jFTelefones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jFTelefones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jFTelefones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new jFTelefones().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton alterarjButton;
    private javax.swing.JButton atualizaPessoajButton;
    private javax.swing.JButton atualizaTipoTelefonejButton;
    private javax.swing.JButton buscarjButton;
    private javax.swing.JButton cadastraTipoTelefonejButton;
    private javax.swing.JButton editarjButton;
    private javax.swing.JButton excluirjButton;
    private javax.swing.JTable gradeTelefonesjTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton limparjButton;
    private javax.swing.JComboBox mostrarReceptivojComboBox;
    private javax.swing.JButton novojButton;
    private javax.swing.JTextField numeroTelefonejTextField;
    private javax.swing.JTextArea observacaojTextArea;
    private javax.swing.JTextField pessoajTextField;
    private javax.swing.JTextField ramaljTextField;
    private javax.swing.JButton sairjButton;
    private javax.swing.JButton salvarMaisjButton;
    private javax.swing.JButton salvarjButton;
    private javax.swing.JComboBox tipoTelefonejComboBox;
    // End of variables declaration//GEN-END:variables
}
